@charset "UTF-8";
/**
 * Responsive Design Utilities
 *
 * This module provides utility mixins and functions for responsive design,
 * building on top of breakpoint values defined in _tokens.scss.
 *
 * It maintains backward compatibility with legacy variables but provides
 * enhanced functionality through mixins that make responsive design easier.
 *
 * @example
 * ```scss
 * @use "breakpoints" as bp;
 * 
 * // Media query for specific breakpoint and below
 * @include bp.down('medium') {
 *   // Styles for medium breakpoint and below
 * }
 * 
 * // Media query between two breakpoints
 * @include bp.between('small', 'large') {
 *   // Styles for between small and large
 * }
 * 
 * // Responsive property values
 * @include bp.responsive((
 *   'base': 1rem,
 *   'small': 1.25rem,
 *   'medium': 1.5rem,
 *   'large': 2rem
 * )) using ($value) {
 *   font-size: $value;
 * }
 * ```
 */
:root {
  --shadow-0: none;
  --shadow-1: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-2: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-3: 0 8px 16px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.05);
  --shadow-4: 0 16px 24px rgba(0, 0, 0, 0.1), 0 6px 12px rgba(0, 0, 0, 0.05);
  --shadow-hover: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-active: 0 2px 4px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.05);
  --shadow-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.2);
  --shadow-card: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-dropdown: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-modal: 0 8px 16px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.05);
  --shadow-toast: 0 16px 24px rgba(0, 0, 0, 0.1), 0 6px 12px rgba(0, 0, 0, 0.05);
  --shadow-button: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-button-hover: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-input-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.2);
  --inner-shadow-subtle: inset 0 1px 2px rgba(0, 0, 0, 0.05);
  --inner-shadow-medium: inset 0 2px 4px rgba(0, 0, 0, 0.1);
  --inner-shadow-strong: inset 0 4px 8px rgba(0, 0, 0, 0.15);
}

.dark-theme {
  --shadow-0: none;
  --shadow-1: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-2: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-3: 0 8px 16px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);
  --shadow-4: 0 16px 24px rgba(0, 0, 0, 0.35), 0 6px 12px rgba(0, 0, 0, 0.25);
  --shadow-hover: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-active: 0 2px 4px rgba(0, 0, 0, 0.25), 0 1px 2px rgba(0, 0, 0, 0.15);
  --shadow-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.4);
  --shadow-card: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-dropdown: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-modal: 0 8px 16px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);
  --shadow-toast: 0 16px 24px rgba(0, 0, 0, 0.35), 0 6px 12px rgba(0, 0, 0, 0.25);
  --shadow-button: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-button-hover: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-input-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.4);
  --inner-shadow-subtle: inset 0 1px 2px rgba(0, 0, 0, 0.15);
  --inner-shadow-medium: inset 0 2px 4px rgba(0, 0, 0, 0.2);
  --inner-shadow-strong: inset 0 4px 8px rgba(0, 0, 0, 0.25);
}

:export {
  breakpointLarge: 62.5em;
  themeSageBase: #0b7abd;
  themeCoralBase: #e15b18;
  themeSandBase: #a8958c;
  themeIndigoBase: #1a1a1d;
}

/**
 * Get a scale value
 * @param {String} $size - Size of the scale (sm, md, lg)
 * @return {Number} Scale value
 */
/**
 * Generate a media query for screens with width less than or equal to the specified breakpoint
 * @param {String} $breakpoint - The breakpoint name (smallest, small, medium, large, largest)
 */
/**
 * Generate a media query for screens with width greater than the specified breakpoint
 * @param {String} $breakpoint - The breakpoint name (smallest, small, medium, large, largest)
 */
/**
 * Generate a media query for screens with width between two breakpoints
 * @param {String} $min - The minimum breakpoint name
 * @param {String} $max - The maximum breakpoint name
 */
/**
 * Generate a media query for a specific breakpoint only
 * @param {String} $breakpoint - The breakpoint name
 */
/**
 * Apply different styles at different breakpoints
 * @param {Map} $values - Map of breakpoint names to values
 */
/**
 * Generate a container that is full width until it reaches a breakpoint
 * @param {String} $breakpoint - The breakpoint at which to constrain width
 * @param {Number} $padding - The padding to apply at smaller screens
 */
/**
 * Generate a fluid value that scales between two sizes based on viewport width
 * @param {Number} $min-value - The minimum value
 * @param {Number} $max-value - The maximum value
 * @param {String} $min-breakpoint - The minimum breakpoint name
 * @param {String} $max-breakpoint - The maximum breakpoint name
 * @param {String} $property - The CSS property to apply the fluid value to
 */
/**
 * Remove the unit from a number
 * @param {Number} $number - The number with a unit
 * @return {Number} The number without a unit
 */
/**
 * DEPRECATED: Legacy Variables Forwarding Module
 *
 * This file is now just a forwarding module that imports tokens.scss.
 * It will be completely removed in a future version.
 *
 * @deprecated This file will be removed entirely. Please update all imports to use tokens directly.
 * 
 * MIGRATION GUIDE:
 * ----------------
 * 1. Replace: @use "../sass/variables" as vars;
 *    With:    @use "../sass/tokens" as tokens;
 * 
 * 2. Replace all variable references:
 *    - vars.$shadow-light → tokens.shadow('sm')
 *    - vars.$shadow-medium → tokens.shadow('md')
 *    - vars.$shadow-heavy → tokens.shadow('lg')
 *    - vars.$scale-hover-small → tokens.scale('sm')
 *    - vars.$scale-hover-medium → tokens.scale('md')
 *    - vars.$scale-hover-large → tokens.scale('lg')
 * 
 * 3. CSS custom properties remain the same as they are generated from tokens.
 *
 * @see _tokens.scss - Single source of truth for all design tokens
 * @see _css-variables.scss - For CSS custom property generation
 */
:export {
  themeSageBase: #0b7abd;
  themeCoralBase: #e15b18;
  themeSandBase: #a8958c;
  themeIndigoBase: #1a1a1d;
  breakpointSmallest: 31.25em;
  breakpointSmall: 37.5em;
  breakpointMedium: 50em;
  breakpointLarge: 62.5em;
  breakpointLargest: 75em;
}

@keyframes fadeInDuration {
  from {
    opacity: 0;
    transform: rotate(180deg) translateX(2rem);
    letter-spacing: 0;
  }
  to {
    opacity: 1;
    transform: rotate(180deg) translateX(0);
    letter-spacing: 0.08rem;
  }
}
@keyframes scaleInLine {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}
@keyframes cardHover {
  0% {
    transform: translateY(0) scale(1);
  }
  50% {
    transform: translateY(-0.6rem) scale(1.012);
  }
  100% {
    transform: translateY(-0.5rem) scale(1.01);
  }
}
.work {
  color: inherit;
  display: flex;
  flex-wrap: wrap;
  position: relative;
  margin-bottom: 5rem;
  min-height: 100vh; /* Fallback */
  min-height: 100dvh; /* Dynamic viewport height */
}
.work .container h1 {
  text-transform: uppercase;
}
.work__item h2, .work__item h3 {
  text-transform: none;
}
.work__items {
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  align-items: stretch;
  margin-left: 2rem;
}
.work__item {
  background-color: rgba(255, 255, 255, 0.3);
  backdrop-filter: blur(15px);
  -webkit-backdrop-filter: blur(15px);
  border-radius: 4px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.3s ease;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  user-select: none;
  padding: 2rem 3rem;
  margin: 0.2rem;
  background-color: rgba(255, 255, 255, 0.2);
  flex: 1;
  min-width: 40rem;
  position: relative;
  flex-grow: 1;
  transition: all 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);
  height: auto;
  overflow: hidden;
}
.work__item:hover {
  background-color: rgba(255, 255, 255, 0.35);
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.15);
}
@media only screen and (max-width: 37.5em) {
  .work__item {
    min-width: 100%;
    margin: 0.2rem 0;
    padding: 2rem;
  }
}
.work__item::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0%;
  height: 0.6rem;
  background-color: var(--color-coral-light);
  transition: width 0.5s cubic-bezier(0.215, 0.61, 0.355, 1);
}
.work__item:hover {
  background-color: rgba(255, 255, 255, 0.1);
  animation: cardHover 0.8s cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  cursor: pointer;
}
.work__item:hover::before {
  width: 25%;
}
.work__item p {
  max-height: 0;
  opacity: 0;
  transition: all 0.5s ease-in-out;
  overflow: hidden;
}
.work__item p.show-text, .work__item:hover .work__item p {
  max-height: 100vh;
  opacity: 1;
}
.work__item__date {
  font-style: italic;
  line-height: 3em;
}
.work__item__place {
  top: 0;
  right: 0;
  float: right;
  margin: 1rem;
  shape-outside: margin-box;
}
.work__timeline {
  width: 0.6rem;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.1);
  position: absolute;
}
.work__timeline::after {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.15) 0%, transparent 8%, transparent 92%, rgba(255, 255, 255, 0.15) 100%);
  pointer-events: none;
}
.work__timeline__now, .work__timeline__start {
  position: absolute;
  right: 1.5rem;
  font-size: 1.2rem;
  font-weight: 400;
  color: var(--text-color);
  transition: color 0.3s ease;
}
.work__timeline__now {
  top: -2rem;
}
.work__timeline__start {
  bottom: -2rem;
}
.work__timeline__duration {
  position: absolute;
  right: 3rem;
  transform-origin: right center;
  writing-mode: vertical-rl;
  transform: rotate(180deg);
  font-size: clamp(0.8rem, 1.5vw, 1.1rem);
  font-weight: 400;
  color: var(--text-color);
  letter-spacing: 0.08rem;
  line-height: 1.4;
  text-transform: uppercase;
  opacity: 0;
  white-space: nowrap;
  transition: all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
  animation: fadeInDuration 0.5s cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
}
.work__timeline__duration:hover {
  letter-spacing: 0.12rem;
  color: var(--color-coral-light);
}
.work__timeline__bar, .work__timeline__subbar {
  position: absolute;
  width: 0.6rem;
  float: top;
  background-color: var(--color-coral-light);
  transition: all 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);
  border-top: 0.2rem solid var(--background-color);
  border-bottom: 0.2rem solid var(--background-color);
}
.work__timeline__bar:hover, .work__timeline__subbar:hover {
  background-color: var(--color-coral);
  box-shadow: 0 0 10px var(--color-coral-light);
}
.work__timeline__subbar {
  background-color: rgba(255, 255, 255, 0.5);
}
.work__timeline__subbar:hover {
  background-color: rgba(255, 255, 255, 0.7);
}

@media only screen and (max-width: 31.25em) {
  .work__items {
    margin-left: 1rem;
  }
  .work__item {
    min-width: 30rem;
  }
  .work__timeline__now, .work__timeline__start {
    position: absolute;
    left: 0;
  }
  .work__timeline__now {
    top: -3rem;
  }
  .work__timeline__start {
    bottom: -3rem;
  }
}
.company-name {
  font-weight: lighter;
}

.light-theme .work__item {
  background-color: rgba(255, 255, 255, 0.65);
  backdrop-filter: blur(8px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.light-theme .work__item:hover {
  background-color: rgba(255, 255, 255, 0.75);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
}
.light-theme .work__timeline {
  background-color: rgba(0, 0, 0, 0.1);
}
.light-theme .work__timeline::after {
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.15) 0%, transparent 8%, transparent 92%, rgba(0, 0, 0, 0.15) 100%);
}
.light-theme .work__timeline__subbar {
  background-color: rgba(0, 0, 0, 0.3);
}
.light-theme .work__timeline__subbar:hover {
  background-color: rgba(0, 0, 0, 0.4);
}

@media only screen and (max-width: 37.5em) {
  .work__container {
    padding: 1rem;
  }
}
@media only screen and (max-width: 31.25em) {
  .work__content {
    padding: 0.5rem;
  }
}
