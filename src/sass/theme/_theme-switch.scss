@use 'sass:map';
@use 'sass:color';
@use 'sass:math';
@use '../functions' as f;
@use 'theme-variables' as vars;

// Configuration Maps
$config: (
  transition: (
    fast: 150ms ease,
    default: 300ms ease
  ),
  scales: (
    hover: 1.05,
    active: 0.97,
    sun: (
      default: 0.4,
      active: 1.1
    ),
    moon: 0.8
  ),
  position: (
    top: 1.5rem,
    left: 1.5rem
  ),
  eclipse: (
    gradient: (
      center: 15%,
      spread: 35%,
      opacity: 0.9
    )
  )
);

// Core Mixins
@mixin base-switch {
  appearance: none;
  position: fixed;
  left: map.get($config, 'position', 'left');
  top: map.get($config, 'position', 'top');
  z-index: var(--z-index-theme-switch);
  cursor: pointer;
  width: var(--track-width);
  height: var(--track-height);
  border-radius: var(--track-height);
  background-color: var(--background-color);
  overflow: hidden;
  isolation: isolate;
}

@mixin transition($property, $speed: 'default') {
  transition: #{$property} map.get($config, 'transition', $speed);
}

@mixin icon-base {
  transform-origin: center;
  will-change: transform, opacity;
  @include transition(transform);
}

// Eclipse Effect
@mixin eclipse-overlay {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at calc(100% - var(--track-padding) - (var(--thumb-size) / 2)) 50%,
    transparent map.get($config, 'eclipse', 'gradient', 'center'),
    var(--background-color) map.get($config, 'eclipse', 'gradient', 'spread')
  );
  opacity: 0;
  pointer-events: none;
  z-index: 0;
  @include transition(opacity);
}

// Icon Mixins
@mixin sun-icon {
  content: '';
  position: absolute;
  right: var(--track-padding);
  top: var(--track-padding);
  width: var(--thumb-size);
  height: var(--thumb-size);
  background: {
    image: url('../../assets/images/sun.png');
    position: center;
    size: 100%;
    repeat: no-repeat;
  }
  filter: grayscale(0.8) brightness(0.8);
  transform: scale(map.get($config, 'scales', 'sun', 'default'));
  z-index: 2;
  @include icon-base;
}

@mixin moon-icon {
  content: '';
  position: absolute;
  inset: 0;
  background: {
    image: url('../../assets/images/moon.webp');
    position: center;
    size: 100%;
    repeat: no-repeat;
  }
  transform: scale(map.get($config, 'scales', 'moon'));
  @include icon-base;
}

// Theme Switch Component
.theme-switch {
  @include base-switch;
  @include transition(transform, 'fast');

  // Eclipse Effect
  &::after { @include eclipse-overlay; }

  // Sun Icon
  &::before { @include sun-icon; }

  // Responsive Behavior
  @each $breakpoint, $sizes in vars.$screens {
    @media (max-width: map.get($sizes, "width")) {
      --track-width: #{map.get($sizes, "width")};
      --track-height: #{map.get($sizes, "height")};
      --thumb-size: #{map.get($sizes, "thumb")};
    }
  }

  // Interactive States
  @media (hover: hover) {
    &:hover { 
      transform: scale(map.get($config, 'scales', 'hover')); 
    }
  }

  &:active { 
    transform: scale(map.get($config, 'scales', 'active'));
    transition-duration: 35ms;
  }

  // Switch Thumb
  .switch {
    position: absolute;
    left: var(--track-padding);
    width: var(--thumb-size);
    height: var(--thumb-size);
    transform: translateX(0);
    z-index: 2;
    @include icon-base;

    &::after { @include moon-icon; }
  }

  // Light Theme State
  &.light-theme {
    &::after { opacity: 1; }

    .switch { 
      transform: translateX(var(--track-inner-space));
      mix-blend-mode: difference;
      filter: brightness(1.2);
    }
    
    &::before {
      transform: scale(map.get($config, 'scales', 'sun', 'active'));
      filter: grayscale(1) brightness(1.5);
      transition: 
        transform map.get($config, 'transition', 'default'),
        filter map.get($config, 'transition', 'default'),
        box-shadow map.get($config, 'transition', 'default');
    }
  }

  // Touch Device Optimizations
  @media (pointer: coarse) {
    --track-padding: max(0.2em, 2px);
    
    &:active {
      transform: scale(0.98);
    }
  }
}