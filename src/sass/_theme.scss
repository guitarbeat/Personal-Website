// ======================================
// Theme Switch Component
// ======================================
.theme-switch {
  cursor: pointer;
  transition: all 0.3s ease;
  list-style-type: none;
  margin: 0.8rem;
  padding: 0.5rem;
  display: flex;
  flex-direction: row-reverse;
  width: 56px;
  height: 24px;
  background-color: var(--color-grey-dark-4);
  border-radius: 50px;
  position: fixed;
  left: 0.6rem;
  z-index: 999;
  overflow: hidden;

  &:hover {
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
  }

  &:active {
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.1);
  }

  &.cross-blur-active {
    background: linear-gradient(45deg, var(--color-primary), var(--color-secondary));
    box-shadow: 0 0 15px var(--color-primary);

    &::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      right: -50%;
      bottom: -50%;
      background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 70%);
      animation: pulse 2s infinite;
    }

    .switch {
      background-color: rgba(255, 255, 255, 0.9);
    }
  }

  // Extract switch as a mixin for reuse
  @mixin switch($size, $position-top, $position-left, $transition-duration) {
    width: $size;
    height: $size;
    background-color: var(--background-color);
    border-radius: 50%;
    position: absolute;
    top: $position-top;
    left: $position-left;
    transition: $transition-duration all ease;
  }

  .switch {
    @include switch(19.2px, 2.4px, 3.2px, 0.5s);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.2;
  }
  100% {
    transform: scale(1);
    opacity: 0.5;
  }
}

// ... rest of your SCSS remains the same ...

// ... rest of your SCSS remains the same ...

// ... rest of your SCSS remains the same ...

// ======================================
// Light Theme Modifiers
// ======================================
.light-theme {

    --background-color: var(--lightground-color);
    --text-color: black;
    --shadow-dark: var(--shadow-light);
    --profile-pic-bg-color: #333; 

    .switch {
        transform: translateX(29.6px); // 37px * 0.8
    }

    .work {
        &__item {
            background-color: rgba(0, 0, 0, 0.1);
        }
    }
    .header {
        &__text {
          h1 {
            &:hover {
              color: var(--color-secondary-light-theme);
            }
          }
    
          h2 {
            &:hover {
              color: var(--color-primary-light-theme);
            }
          }
    
          h3 {
            &:hover {
              color: var(--color-terceary-light-theme);
            }
          }
        }
      }
      .social {
        &__icon {
          &:hover {
            color: var(--color-terceary-light-theme);
            transition: none;
          }
    
          button {
            i {
              &:hover {
                color: var(--color-terceary-light-theme);
                transition: none;
              }
            }
          }
        }
      }
    }

// ======================================
// Placeholder for Future Slider Component
// ======================================
// TODO: Implement slider component when ready


.slider-container {
    // Styling for the container
    position: relative;
    width: 100%;
    height: 50px; // Adjust as needed
    margin: 20px 0;
  
    .slider-bar {
      // Styling for the slider bar
      position: absolute;
      width: 100%;
      height: 10px; // Adjust as needed
      background-color: var(--color-grey-dark-2);
      border-radius: 5px;
      top: 50%;
      transform: translateY(-50%);
  
      .slider-handle {
        // Styling for the draggable handle
        position: absolute;
        width: 20px; // Adjust as needed
        height: 20px; // Adjust as needed
        background-color: var(--color-primary);
        border-radius: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        cursor: pointer;
      }
    }
  }
  