@use "base";
@use "mixins" as *;

// ======================================
// Theme Switch Component
// ======================================

// Theme Switch Component Variables
$track-padding: base.$track-padding;
$spacing-ratio: 0.15; // 15% of track height for consistent spacing
$transition-timing: base.$transition-timing;
$transition-duration: 0.5s;

// Large screens
$track-width-lg: 52px;
$track-height-lg: 26px;
$thumb-size-lg: 20px;
$track-inner-space-lg: $track-width-lg - $thumb-size-lg - (2 * $track-padding);
$spacing-lg: $track-height-lg * $spacing-ratio;

// Medium screens
$track-width-md: 44px;
$track-height-md: 22px;
$thumb-size-md: 16px;
$track-inner-space-md: $track-width-md - $thumb-size-md - (2 * $track-padding);
$spacing-md: $track-height-md * $spacing-ratio;

// Small screens
$track-width-sm: 38px;
$track-height-sm: 20px;
$thumb-size-sm: 14px;
$track-inner-space-sm: $track-width-sm - $thumb-size-sm - (2 * $track-padding);
$spacing-sm: $track-height-sm * $spacing-ratio;

// Extra small screens
$track-width-xs: 30px;
$track-height-xs: 16px;
$thumb-size-xs: 10px;
$track-inner-space-xs: $track-width-xs - $thumb-size-xs - (2 * $track-padding);
$spacing-xs: $track-height-xs * $spacing-ratio;

.theme-switch {
  position: fixed;
  left: 1.5rem; // Adjusted from 2rem to better align with vignette
  top: 1.8rem; // Align with header height
  width: $track-width-lg;
  height: $track-height-lg;
  border-radius: $track-height-lg;
  background: var(--theme-switch-bg, rgba(128, 128, 128, 0.25));
  cursor: pointer;
  box-shadow: 
    inset 0 0 2px rgba(0, 0, 0, 0.2),
    0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all $transition-duration $transition-timing;
  z-index: var(--z-index-theme-switch);
  
  .switch {
    position: absolute;
    top: 50%;
    left: 0;
    transform: translate($track-inner-space-lg * 0.1, -50%);
    width: $thumb-size-lg;
    height: $thumb-size-lg;
    border-radius: 50%;
    transition: 
      transform $transition-duration $transition-timing,
      box-shadow 0.3s ease;
    overflow: hidden;
    mix-blend-mode: normal;
    box-shadow: 
      0 2px 4px rgba(0, 0, 0, 0.1),
      0 0 1px rgba(0, 0, 0, 0.2);
    background: #fff;
    
    &::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      background-image: url(https://images.vexels.com/media/users/3/137782/isolated/preview/5317233afd8c42be610172dc89c5dd18-realistic-moon-by-vexels.png);
      background-size: 107%;
      background-position: 66% 88%;
      background-repeat: no-repeat;
      transform: rotate(-16deg);
      transition: all $transition-duration $transition-timing;
      will-change: transform;
    }

    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background: hsla(202, 19%, 17%, 0.95);
      border-radius: 50%;
      transition: transform $transition-duration $transition-timing;
      transform: translateX(-100%);
      will-change: transform;
    }
  }

  &.light-theme {
    background: rgba(0, 0, 0, 0.15);
    
    .switch {
      transform: translate($track-inner-space-lg, -50%);
      
      &::after {
        transform: translateX(0);
        background: hsla(202, 19%, 17%, 0.7);
      }
    }
  }

  &:hover {
    box-shadow: 
      inset 0 0 2px rgba(0, 0, 0, 0.2),
      0 6px 12px rgba(0, 0, 0, 0.2);
    transform: translateY(-2px) scale(1.05);

    .switch {
      box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.2),
        0 0 2px rgba(0, 0, 0, 0.2);

      &::before {
        transform: rotate(-16deg) scale(1.1);
      }
    }
  }

  &:active {
    transform: translateY(0) scale(0.98);
    box-shadow: 
      inset 0 0 2px rgba(0, 0, 0, 0.2),
      0 2px 4px rgba(0, 0, 0, 0.1);

    .switch {
      box-shadow: 
        0 2px 4px rgba(0, 0, 0, 0.1),
        0 0 1px rgba(0, 0, 0, 0.2);
        
      &::before {
        transform: rotate(-16deg) scale(0.95);
      }
    }
  }

  @include respond(medium) {
    left: 1.8rem;
    top: 1.6rem;
    width: $track-width-md;
    height: $track-height-md;
    border-radius: $track-height-md;

    .switch {
      width: $thumb-size-md;
      height: $thumb-size-md;
      transform: translate($track-inner-space-md * 0.1, -50%);
      
      &.light-theme, .light-theme & {
        transform: translate($track-inner-space-md * 0.9, -50%);
      }
    }
  }

  @include respond(small) {
    left: 1.5rem;
    top: 1.4rem;
    width: $track-width-sm;
    height: $track-height-sm;
    border-radius: $track-height-sm;

    .switch {
      width: $thumb-size-sm;
      height: $thumb-size-sm;
      transform: translate($track-inner-space-sm * 0.1, -50%);
      
      &.light-theme, .light-theme & {
        transform: translate($track-inner-space-sm * 0.9, -50%);
      }
    }
  }

  @include respond(smallest) {
    left: 1.2rem;
    top: 1.2rem;
    width: $track-width-xs;
    height: $track-height-xs;
    border-radius: $track-height-xs;

    .switch {
      width: $thumb-size-xs;
      height: $thumb-size-xs;
      transform: translate($track-inner-space-xs * 0.1, -50%);
      
      &.light-theme, .light-theme & {
        transform: translate($track-inner-space-xs * 0.9, -50%);
      }
    }
  }
}

// Light Theme Styles
body.light-theme {
  --background-color: var(--color-grey-light-1);
  --text-color: var(--color-grey-dark-1);
  
  // Shadow and Vignette
  --shadow-color: 255, 255, 255;
  --shadow-opacity: 0.8;
  --vignette-color: rgba(var(--shadow-color), 0.3);
  --vignette-color-dark: rgba(var(--shadow-color), 0.7);
  --vignette-blend-mode: soft-light;
  
  // Color overrides for light theme
  --color-hover: var(--color-sage-alt);
  
  // Navbar Background
  --navbar-bg-gradient: linear-gradient(
    to bottom,
    rgba(var(--shadow-color), 0.3) 0%,
    transparent 100%
  );

  .theme-switch {
    background: rgba(0, 0, 0, 0.15);
  }
}

// Light theme modifiers for the rest of the site
.light-theme {
  --background-color: var(--lightground-color);
  --text-color: var(--color-grey-dark-1);
  --text-color-muted: var(--color-grey-dark-2);
  --shadow-dark: var(--shadow-light);
  --profile-pic-bg-color: var(--lightground-alt);
  --vignette-color: var(--vignette-light);
  --vignette-color-dark: var(--vignette-light-strong);
  --vignette-blend-mode: multiply;
  --vignette-opacity: 0.8;
  
  // Theme-specific color adjustments
  --color-primary: var(--color-sage);        // Using regular sage instead of dark
  --color-secondary: var(--color-coral);     // Using regular coral instead of dark
  --color-accent: var(--color-indigo);
  --color-hover: var(--color-coral);
  
  // Component colors
  --component-bg: var(--overlay-light);
  --component-border: var(--shadow-light);
  
  // Add a subtle gradient overlay to soften the background
  &::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.02) 0%,
      rgba(255, 255, 255, 0.05) 100%
    );
    pointer-events: none;
    z-index: -1;
  }

  // Enhance contrast for interactive elements
  a, button {
    &:hover {
      color: var(--color-hover);
    }
  }

  // Adjust card and container backgrounds
  .work__item,
  .project__item,
  .about__container {
    background-color: var(--lightground-alt);
    box-shadow: 0 2px 8px var(--shadow-light);
  }
}

// Dark theme modifiers
.dark-theme {
  --background-color: var(--darkground-color);
  --text-color: var(--color-grey-light-1);
  --text-color-muted: var(--color-grey-light-2);
  --shadow-dark: var(--shadow-dark);
  --profile-pic-bg-color: var(--color-grey-dark-3);
  --vignette-color: var(--vignette-dark);
  --vignette-color-dark: var(--vignette-dark-strong);
  --vignette-blend-mode: screen;
  --vignette-opacity: 0.6;
  
  // Theme-specific color adjustments
  --color-primary: var(--color-sage-light);
  --color-secondary: var(--color-coral-light);
  --color-accent: var(--color-indigo-light);
  --color-hover: var(--color-coral-light);
  
  // Component colors
  --component-bg: var(--overlay-dark);
  --component-border: var(--shadow-dark);
  
  // Add a subtle gradient overlay for depth
  &::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.03) 0%,
      rgba(0, 0, 0, 0.07) 100%
    );
    pointer-events: none;
    z-index: -1;
  }
}

// Smooth transitions for theme switching
body {
  transition: 
    background-color 0.3s ease,
    color 0.3s ease;
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.2;
  }
  100% {
    transform: scale(1);
    opacity: 0.5;
  }
}
