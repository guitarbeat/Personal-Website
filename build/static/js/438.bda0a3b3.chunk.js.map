{"version":3,"file":"static/js/438.bda0a3b3.chunk.js","mappings":"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","sources":["pages/fun/TimelineBar.js","pages/fun/EventCard.js","pages/fun/friends.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction TimelineBar({ first_year, event_bars, bar_height, bar_start }) {\r\n  let sub_bars = event_bars.map((bar) => (\r\n    <div\r\n      className=\"events__timeline__subbar\"\r\n      style={{ height: (bar[0] || 0) + \"%\", top: (bar[1] || 0) + \"%\" }}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"events__timeline\">\r\n      <p className=\"events__timeline__start\">{first_year}</p>\r\n      {sub_bars}\r\n      <div\r\n        className=\"events__timeline__bar\"\r\n        style={{ height: (bar_height || 0) + \"%\", top: (bar_start || 0) + \"%\" }}\r\n      />\r\n      <p className=\"events__timeline__now\">Now</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimelineBar;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nfunction EventCard({ event, activeCard, changeBarHeight, handleCardClick }) {\r\n  const isActive = activeCard === event.slug;\r\n  const cardRef = useRef(null); // Initialize the ref\r\n  const [countdown, setCountdown] = useState(\"\");\r\n\r\n  // Function to update the countdown\r\n  const updateCountdown = () => {\r\n    const currentTime = moment();\r\n    const timeToEvent = event._from.diff(currentTime);\r\n    if (timeToEvent > 0) {\r\n      setCountdown(\r\n        `Event starts in ${moment.duration(timeToEvent).humanize()}`\r\n      );\r\n    } else {\r\n      setCountdown(`Event has started!`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Update the countdown immediately and then every minute\r\n    updateCountdown();\r\n    const intervalId = setInterval(updateCountdown, 60000);\r\n    return () => clearInterval(intervalId);\r\n  }, [event]);\r\n\r\n  // Use a callback function to pass the ref current value to the parent function\r\n  const changeHeight = () => {\r\n    if (cardRef.current) {\r\n      changeBarHeight(cardRef.current);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={cardRef} // Attach the ref to your component\r\n      className={`work__item ${isActive ? \"active\" : \"\"}`}\r\n      key={event.slug}\r\n      data-key={event.slug}\r\n      onMouseEnter={changeHeight}\r\n      onTouchStart={changeHeight}\r\n      onClick={() => handleCardClick(event.slug)}\r\n      data-barstart={event.bar_start}\r\n      data-barheight={event.bar_height}\r\n    >\r\n      <img\r\n        src={event.image ? event.image : process.env.PUBLIC_URL + \"/frog.png\"}\r\n        alt={event.title}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n      <p className=\"work__item__place\">\r\n        <i className=\"fa fa-map-marker-alt\" aria-hidden=\"true\" /> {event.place}\r\n      </p>\r\n      <h2>{event.title}</h2>\r\n      <p className=\"work__item__date\">\r\n        {event.date}, {event.time}\r\n      </p>\r\n      <p>{event.description}</p>\r\n      <p>{countdown}</p> {/* Display the countdown */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventCard;\r\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { withGoogleSheets } from \"react-db-google-sheets\";\nimport TimelineBar from \"./TimelineBar\";\nimport EventCard from \"./EventCard\";\nimport \"../fun/friends.css\";\n\nfunction Friends({ db }) {\n  const [barHeight, setBarHeight] = useState(0);\n  const [barStart, setBarStart] = useState(0);\n  const [activeCard, setActiveCard] = useState();\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    if (db && db[\"events\"]) {\n      let eventsData = db[\"events\"].map((row) => ({\n        title: row.title,\n        place: row.place,\n        date: row.date,\n        from: row.from,\n        to: row.to,\n        description: row.description,\n        image: row.image,\n        slug: `${row.title\n          .replace(/\\s+/g, \"-\")\n          .toLowerCase()}-${row.from.replace(/:/g, \"\")}`,\n      }));\n\n      // Sort events by start time\n      eventsData.sort(\n        (a, b) => moment(a.from, \"HH:mm\") - moment(b.from, \"HH:mm\")\n      );\n\n      setEvents(eventsData);\n    }\n  }, [db]);\n\n  const currentTime = moment();\n  const currentDay = currentTime.format(\"dddd\");\n  const currentTimeFormatted = currentTime.format(\"h:mm a\");\n  const greeting = `Today is ${currentDay}, ${currentTimeFormatted}, and here's what you have planned:`;\n\n  const nextEvent = events.find((event) =>\n    moment(event.from, \"HH:mm\").isAfter(currentTime)\n  );\n\n  let firstDate = moment();\n\n  events.forEach((event) => {\n    if (event) {\n      // Check if event is not null\n      let toMoment = event.to ? moment(event.to, \"HH:mm\") : moment();\n      let fromMoment = moment(event.from, \"HH:mm\");\n      let duration = toMoment.diff(fromMoment, \"minutes\");\n      event[\"from\"] = fromMoment.format(\"HH:mm\");\n      event[\"to\"] = event.to ? toMoment.format(\"HH:mm\") : \"Now\";\n      event[\"_from\"] = fromMoment;\n      event[\"_to\"] = toMoment;\n      event[\"time\"] =\n        duration === 0 ? event.from : event.from + \" - \" + event.to;\n      event[\"duration\"] = duration === 0 ? 1 : duration;\n\n      if (fromMoment.diff(firstDate) < 0) {\n        firstDate = fromMoment;\n      }\n    }\n  });\n\n  let timeSpan = moment().diff(firstDate, \"minutes\");\n  events.forEach((event) => {\n    event[\"bar_start\"] =\n      (100 * event._from.diff(firstDate, \"minutes\")) / timeSpan;\n    event[\"bar_height\"] = (100 * event.duration) / timeSpan;\n  });\n\n  let eventBars = events.map((event) => [event?.bar_height, event?.bar_start]); // Optional chaining\n\n  function changeBarHeight(element) {\n    const barStart = element.getAttribute(\"data-barstart\");\n    const barHeight = element.getAttribute(\"data-barheight\");\n\n    if (barStart !== null && barHeight !== null) {\n      setBarStart(barStart);\n      setBarHeight(barHeight);\n    }\n  }\n\n  const handleCardClick = (slug) => {\n    setActiveCard(activeCard === slug ? null : slug);\n  };\n\n  return (\n    <div className=\"container\" id=\"events\">\n      <div className=\"container__content\">\n        <a\n          className=\"google-sheet-link\"\n          href=\"https://docs.google.com/spreadsheets/d/1kYcFtsMQOap_52pKlTfWCYJk1O5DD66LlZ90TWCgAyA/edit#gid=1802221480\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          View Google Sheet\n        </a>\n        <h1>Mario Comes to Portland!</h1>\n        <h2>{greeting}</h2>\n        <div className=\"events\">\n          <TimelineBar\n            first_year={firstDate.format(\"YYYY\")}\n            event_bars={eventBars}\n            bar_height={barHeight}\n            bar_start={barStart}\n          />\n          <div className=\"events__items\">\n            {events.map((event) => {\n              if (event)\n                // Check if event is not null\n                return (\n                  <EventCard\n                    event={event}\n                    activeCard={activeCard}\n                    changeBarHeight={changeBarHeight}\n                    handleCardClick={handleCardClick}\n                  />\n                );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withGoogleSheets(\"events\")(Friends);\n"],"names":["_ref","first_year","event_bars","bar_height","bar_start","sub_bars","map","bar","_jsx","className","style","height","top","_jsxs","children","event","activeCard","changeBarHeight","handleCardClick","isActive","slug","cardRef","useRef","_useState","useState","_useState2","_slicedToArray","countdown","setCountdown","updateCountdown","currentTime","moment","timeToEvent","_from","diff","concat","humanize","useEffect","intervalId","setInterval","clearInterval","changeHeight","current","ref","onMouseEnter","onTouchStart","onClick","src","image","alt","title","width","place","date","time","description","withGoogleSheets","db","barHeight","setBarHeight","_useState3","_useState4","barStart","setBarStart","_useState5","_useState6","setActiveCard","_useState7","_useState8","events","setEvents","eventsData","row","from","to","replace","toLowerCase","sort","a","b","currentDay","format","currentTimeFormatted","greeting","firstDate","find","isAfter","forEach","toMoment","fromMoment","duration","timeSpan","eventBars","element","getAttribute","id","href","target","rel","TimelineBar","EventCard"],"sourceRoot":""}