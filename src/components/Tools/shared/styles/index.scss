// Shared styles for all tools
// Import this file in the main tools/styles/index.scss

@use '../../../../sass/mixins' as mix;
@use '../../../../sass/variables' as var;

// Core Mixins
@mixin tool-container {
  width: 100%;
  max-width: var(--max-content-width, 1200px);
  margin: 0 auto;
  padding: var(--spacing-md, 2rem);

  @include mix.respond("mobile") {
    padding: var(--spacing-sm, 1rem);
  }
}

@mixin tool-content {
  @include mix.glass-effect;
  padding: var(--spacing-lg, 2.5rem);
  min-height: 400px;
  display: flex;
  flex-direction: column;
}

@mixin tool-header {
  text-align: center;
  margin-bottom: var(--spacing-lg, 2.5rem);
  
  h1 {
    font-size: var(--font-size-xl, 2.5rem);
    font-weight: var(--font-weight-bold, 700);
    color: var(--color-text);
    margin-bottom: var(--spacing-sm, 1rem);
  }
  
  p {
    font-size: var(--font-size-md, 1.1rem);
    color: var(--color-text-light);
    max-width: 600px;
    margin: 0 auto;
  }
}

@mixin tool-button {
  padding: var(--spacing-sm, 1rem) var(--spacing-md, 2rem);
  background: var(--tool-button-bg, rgba(255, 255, 255, 0.1));
  border: 1px solid var(--tool-button-border, rgba(255, 255, 255, 0.2));
  border-radius: var(--border-radius-md, 0.5rem);
  color: var(--color-text);
  font-size: var(--font-size-md, 1.1rem);
  cursor: pointer;
  transition: all var.$transition-duration var.$transition-timing;
  
  &:hover {
    background: var(--tool-button-hover-bg, rgba(255, 255, 255, 0.15));
    transform: translateY(-2px);
  }
  
  &:active {
    transform: translateY(0);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    
    &:hover {
      transform: none;
      background: var(--tool-button-bg, rgba(255, 255, 255, 0.1));
    }
  }
}

@mixin tool-input {
  width: 100%;
  padding: var(--spacing-sm, 1rem);
  background: var(--tool-input-bg, rgba(255, 255, 255, 0.1));
  border: 1px solid var(--tool-input-border, rgba(255, 255, 255, 0.2));
  border-radius: var(--border-radius-sm, 0.25rem);
  color: var(--color-text);
  font-size: var(--font-size-md, 1.1rem);
  transition: all var.$transition-duration var.$transition-timing;
  
  &:focus {
    outline: none;
    border-color: var(--tool-input-focus-border, rgba(255, 255, 255, 0.4));
    background: var(--tool-input-focus-bg, rgba(255, 255, 255, 0.15));
  }
  
  &::placeholder {
    color: var(--color-text-light);
  }
}

// Interactive Mixins
@mixin glass-container {
  @include mix.glass-effect;
  padding: var(--spacing-md, 2rem);
  border-radius: var(--border-radius-lg, 1rem);
}

// Layout Mixins
@mixin responsive-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: var(--spacing-md, 2rem);
  
  @include mix.respond("mobile") {
    gap: var(--spacing-sm, 1rem);
  }
}

// State Mixins
@mixin loading-state {
  opacity: 0.7;
  pointer-events: none;
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(4px);
  }
}

@mixin error-state {
  border-color: var(--color-error, #ff6b6b);
  background: var(--color-error-bg, rgba(255, 107, 107, 0.1));
}

// Animations
@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

// Reduced Motion
@media (prefers-reduced-motion: reduce) {
  * {
    animation: none !important;
    transition: none !important;
  }
} 