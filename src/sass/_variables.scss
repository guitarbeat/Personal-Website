/**
 * DEPRECATED: Legacy Variables Module
 *
 * This file is being phased out in favor of _tokens.scss.
 * Please use the tokens file for new variables and gradually migrate existing usage.
 *
 * Remaining variables in this file are either:
 * 1. Re-exports from tokens for backward compatibility
 * 2. CSS custom properties for backward compatibility
 * 3. Tool-specific variables not yet migrated to tokens
 *
 * For new code, use tokens directly:
 * @use "tokens" as tokens;
 */

@use "sass:map";
@use "tokens" as tokens;

/**
 * Theme Transition Properties
 * 
 * Used for consistent transitions when themes change.
 * Consider migrating to tokens.
 */
$theme-transition-properties: (
  background-color,
  color,
  border-color,
  transform,
  opacity,
  box-shadow
);

/**
 * Export for use in JavaScript
 *
 * These variables are exported to be used in JavaScript.
 * This allows sharing of design tokens between SCSS and JS.
 */
:export {
  // Theme colors
  themeSageBase: tokens.theme-color('sage');
  themeCoralBase: tokens.theme-color('coral');
  themeSandBase: tokens.theme-color('sand');
  themeIndigoBase: tokens.theme-color('indigo');
  
  // Breakpoints
  breakpointSmallest: tokens.breakpoint('smallest');
  breakpointSmall: tokens.breakpoint('small');
  breakpointMedium: tokens.breakpoint('medium');
  breakpointLarge: tokens.breakpoint('large');
  breakpointLargest: tokens.breakpoint('largest');
}

/**
 * Scaling Factors (DEPRECATED)
 * Now defined in tokens
 */
$scale-hover-small: 1.02;
$scale-hover-medium: 1.05;
$scale-hover-large: 1.1;

/**
 * Shadows (DEPRECATED)
 * Now defined in tokens
 */
$shadow-light: tokens.shadow('sm');
$shadow-medium: tokens.shadow('md');
$shadow-heavy: tokens.shadow('lg');

/**
 * CSS Custom Properties
 * 
 * CSS custom properties are now generated in _css-variables.scss
 * The :root block below is kept for backward compatibility
 */
:root {
  // Z-index System
  @each $key, $value in tokens.$z-index {
    --z-index-#{$key}: #{$value};
  }

  // Spacing System
  --spacing-xs: #{tokens.spacing('xs')};
  --spacing-sm: #{tokens.spacing('sm')};
  --spacing-md: #{tokens.spacing('md')};
  --spacing-lg: #{tokens.spacing('lg')};
  --spacing-xl: #{tokens.spacing('xl')};

  // Font Sizes
  --font-size-xs: #{tokens.font-size('xs')};
  --font-size-sm: #{tokens.font-size('sm')};
  --font-size-md: #{tokens.font-size('md')};
  --font-size-lg: #{tokens.font-size('lg')};
  --font-size-xl: #{tokens.font-size('xl')};

  // Font Weights
  --font-weight-normal: #{tokens.font-weight('regular')};
  --font-weight-medium: #{tokens.font-weight('medium')};
  --font-weight-semibold: #{tokens.font-weight('semibold')};
  --font-weight-bold: #{tokens.font-weight('bold')};

  // Border Radius
  --border-radius-sm: #{tokens.radius('sm')};
  --border-radius-md: #{tokens.radius('md')};
  --border-radius-lg: #{tokens.radius('lg')};

  // Layout
  --max-content-width: #{map.get(tokens.$layout, 'max-content-width')};

  /**
   * Tool-specific Variables
   * 
   * These variables are specific to tools and should eventually
   * be migrated to the tokens system.
   */
  --tool-button-bg: rgb(255 255 255 / 10%);
  --tool-button-border: rgb(255 255 255 / 20%);
  --tool-button-hover-bg: rgb(255 255 255 / 15%);
  --tool-input-bg: rgb(255 255 255 / 10%);
  --tool-input-border: rgb(255 255 255 / 20%);
  --tool-input-focus-bg: rgb(255 255 255 / 15%);
  --tool-input-focus-border: rgb(255 255 255 / 40%);
}
