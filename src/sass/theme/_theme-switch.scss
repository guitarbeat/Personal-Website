@use "sass:map";
@use "../functions" as f;
@use "theme-variables" as vars;

// Theme Switch Configuration
// -------------------------
$theme-switch: (
  'animation': (
    'duration': (
      'default': 8s,
      'reduced': 16s,
      'mobile': 12s,
      'small': 16s
    ),
    'timing': cubic-bezier(0.4, 0, 0.2, 1)
  ),
  'colors': (
    'moon': (
      'dark': #04162E,
      'light': #B5BCC6
    ),
    'sun': (
      'core': #FDB813,
      'corona': (
        'start': rgba(253, 184, 19, 0.7),
        'mid': rgba(255, 137, 0, 0.4),
        'end': rgba(255, 94, 0, 0.1)
      )
    )
  )
);

// Base Custom Properties
// -------------------------
:root {
  --switch-width: clamp(3.5rem, 5vw, 5rem);
  --switch-height: calc(var(--switch-width) * 0.5);
  --switch-padding: 0.2rem;
  --switch-handle-size: calc(var(--switch-height) - 2 * var(--switch-padding));
  --switch-bg-dark: var(--theme-bg-dark, #1a1a1a);
  --switch-bg-light: var(--theme-bg-light, #ffffff);
  --switch-animation-duration: #{map.get($theme-switch, 'animation', 'duration', 'default')};
  
  @media (prefers-reduced-motion: reduce) {
    --switch-animation-duration: #{map.get($theme-switch, 'animation', 'duration', 'reduced')};
  }
}

// Optimized Keyframe Animations
// -------------------------
@keyframes moonPhase {
  0%, 100% { 
    opacity: 0.85;
    background: var(--moon-bg, #{map.get($theme-switch, 'colors', 'moon', 'dark')});
    box-shadow: inset -3px 0 3px var(--moon-shadow, #{map.get($theme-switch, 'colors', 'moon', 'light')});
    transform: rotate(0);
  }
  40% { 
    opacity: var(--moon-opacity-mid, 0.85);
    box-shadow: inset 10px 0 3px var(--moon-shadow);
    transform: rotate(160deg);
  }
  50% {
    opacity: var(--moon-opacity-peak, 0);
    box-shadow: none;
    transform: rotate(180deg);
  }
  90% {
    box-shadow: inset -10px 0 3px var(--moon-shadow);
    transform: rotate(340deg);
  }
}

@keyframes switchBackground {
  0%, 100% { background: var(--switch-bg); }
  50% { background: color-mix(in srgb, var(--switch-bg) 90%, #{map.get($theme-switch, 'colors', 'moon', 'dark')}); }
}

@keyframes sunCorona {
  0%, 100% { 
    opacity: 0.7;
    transform: scale(1);
  }
  50% { 
    opacity: 0.2;
    transform: scale(0.9);
  }
}

// Theme Switch Component
// -------------------------
.theme-switch {
  --switch-bg: var(--switch-bg-dark);
  position: fixed;
  left: clamp(0.75rem, 2vw, 1.5rem);
  top: clamp(0.75rem, 2vw, 1.5rem);
  width: var(--switch-width);
  height: var(--switch-height);
  border-radius: calc(var(--switch-height) / 2);
  background: var(--switch-bg);
  border: 1px solid rgba(255, 255, 255, 0.1);
  cursor: pointer;
  overflow: hidden;
  z-index: var(--z-index-theme-switch, 100);
  transition: background-color 0.3s ease;
  animation: switchBackground var(--switch-animation-duration) linear infinite;
  will-change: background-color;

  .switch-handle {
    transform: translateX(0);
  }

  // Light Theme Variant
  &.light-theme {
    --switch-bg: var(--switch-bg-light);
    border-color: rgba(0, 0, 0, 0.1);

    .switch-handle {
      transform: translateX(calc(var(--switch-width) - var(--switch-height)));
      background-image: url("../../assets/images/sun.png");
      will-change: transform;

      &::before {
        content: "";
        position: absolute;
        inset: -50%;
        background: radial-gradient(
          circle at center,
          #{map.get($theme-switch, 'colors', 'sun', 'corona', 'start')} 20%,
          #{map.get($theme-switch, 'colors', 'sun', 'corona', 'mid')} 40%,
          #{map.get($theme-switch, 'colors', 'sun', 'corona', 'end')} 60%,
          transparent 80%
        );
        opacity: 1;
        animation: sunCorona var(--switch-animation-duration) ease-in-out infinite;
        transform-origin: center;
        will-change: transform, opacity;
      }
    }
  }

  // Switch Handle
  .switch-handle {
    position: absolute;
    top: var(--switch-padding);
    left: var(--switch-padding);
    width: var(--switch-handle-size);
    height: var(--switch-handle-size);
    background: {
      color: #ffffff;
      image: url("../../assets/images/moon.webp");
      size: cover;
      position: center;
    }
    border-radius: 50%;
    transition: transform 0.3s ease;
    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);

    // Moon Phase Animation
    .moon-phase-container {
      position: absolute;
      inset: 0;
      border-radius: 50%;
      mix-blend-mode: multiply;

      &::before,
      &::after {
        content: "";
        position: absolute;
        inset: 0;
        border-radius: 50%;
        mix-blend-mode: multiply;
        transform-origin: center;
        will-change: transform, opacity;
      }

      &::before {
        --moon-bg: #{map.get($theme-switch, 'colors', 'moon', 'dark')};
        --moon-shadow: #{map.get($theme-switch, 'colors', 'moon', 'light')};
        --moon-opacity-mid: 0.85;
        --moon-opacity-peak: 0;
        animation: moonPhase var(--switch-animation-duration) infinite;
      }

      &::after {
        --moon-bg: #{map.get($theme-switch, 'colors', 'moon', 'light')};
        --moon-shadow: #{map.get($theme-switch, 'colors', 'moon', 'dark')};
        --moon-opacity-mid: 0;
        --moon-opacity-peak: 0.85;
        animation: moonPhase var(--switch-animation-duration) infinite;
      }
    }
  }

  // Interactive States
  &:hover {
    .switch-handle {
      filter: brightness(1.1);
      transition: filter 0.2s ease;

      .moon-phase-container::before,
      .moon-phase-container::after,
      &::before {
        animation-play-state: paused;
      }
    }
  }

  // Accessibility
  &:focus:not(:focus-visible) {
    outline: none;
  }

  &:focus-visible {
    outline: 2px solid var(--theme-primary, #007bff);
    outline-offset: 2px;
  }

  // Responsive Adjustments
  @media (max-width: 768px) {
    --switch-animation-duration: #{map.get($theme-switch, 'animation', 'duration', 'mobile')};
  }

  @media (max-width: 480px) {
    --switch-animation-duration: #{map.get($theme-switch, 'animation', 'duration', 'small')};
  }
}
