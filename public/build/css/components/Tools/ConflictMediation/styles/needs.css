@charset "UTF-8";
/**
 * DEPRECATED: Legacy Variables Forwarding Module
 *
 * This file is now just a forwarding module that imports tokens.scss.
 * It will be completely removed in a future version.
 *
 * @deprecated This file will be removed entirely. Please update all imports to use tokens directly.
 * 
 * MIGRATION GUIDE:
 * ----------------
 * 1. Replace: @use "../sass/variables" as vars;
 *    With:    @use "../sass/tokens" as tokens;
 * 
 * 2. Replace all variable references:
 *    - vars.$shadow-light → tokens.shadow('sm')
 *    - vars.$shadow-medium → tokens.shadow('md')
 *    - vars.$shadow-heavy → tokens.shadow('lg')
 *    - vars.$scale-hover-small → tokens.scale('sm')
 *    - vars.$scale-hover-medium → tokens.scale('md')
 *    - vars.$scale-hover-large → tokens.scale('lg')
 * 
 * 3. CSS custom properties remain the same as they are generated from tokens.
 *
 * @see _tokens.scss - Single source of truth for all design tokens
 * @see _css-variables.scss - For CSS custom property generation
 */
:root {
  --shadow-0: none;
  --shadow-1: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-2: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-3: 0 8px 16px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.05);
  --shadow-4: 0 16px 24px rgba(0, 0, 0, 0.1), 0 6px 12px rgba(0, 0, 0, 0.05);
  --shadow-hover: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-active: 0 2px 4px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.05);
  --shadow-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.2);
  --shadow-card: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-dropdown: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-modal: 0 8px 16px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.05);
  --shadow-toast: 0 16px 24px rgba(0, 0, 0, 0.1), 0 6px 12px rgba(0, 0, 0, 0.05);
  --shadow-button: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-button-hover: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-input-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.2);
  --inner-shadow-subtle: inset 0 1px 2px rgba(0, 0, 0, 0.05);
  --inner-shadow-medium: inset 0 2px 4px rgba(0, 0, 0, 0.1);
  --inner-shadow-strong: inset 0 4px 8px rgba(0, 0, 0, 0.15);
}

.dark-theme {
  --shadow-0: none;
  --shadow-1: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-2: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-3: 0 8px 16px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);
  --shadow-4: 0 16px 24px rgba(0, 0, 0, 0.35), 0 6px 12px rgba(0, 0, 0, 0.25);
  --shadow-hover: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-active: 0 2px 4px rgba(0, 0, 0, 0.25), 0 1px 2px rgba(0, 0, 0, 0.15);
  --shadow-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.4);
  --shadow-card: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-dropdown: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-modal: 0 8px 16px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);
  --shadow-toast: 0 16px 24px rgba(0, 0, 0, 0.35), 0 6px 12px rgba(0, 0, 0, 0.25);
  --shadow-button: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-button-hover: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-input-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.4);
  --inner-shadow-subtle: inset 0 1px 2px rgba(0, 0, 0, 0.15);
  --inner-shadow-medium: inset 0 2px 4px rgba(0, 0, 0, 0.2);
  --inner-shadow-strong: inset 0 4px 8px rgba(0, 0, 0, 0.25);
}

:export {
  breakpointLarge: 62.5em;
  themeSageBase: #0b7abd;
  themeCoralBase: #e15b18;
  themeSandBase: #a8958c;
  themeIndigoBase: #1a1a1d;
}

/**
 * Get a scale value
 * @param {String} $size - Size of the scale (sm, md, lg)
 * @return {Number} Scale value
 */
:export {
  themeSageBase: #0b7abd;
  themeCoralBase: #e15b18;
  themeSandBase: #a8958c;
  themeIndigoBase: #1a1a1d;
  breakpointSmallest: 31.25em;
  breakpointSmall: 37.5em;
  breakpointMedium: 50em;
  breakpointLarge: 62.5em;
  breakpointLargest: 75em;
}

/**
 * Responsive Design Utilities
 *
 * This module provides utility mixins and functions for responsive design,
 * building on top of breakpoint values defined in _tokens.scss.
 *
 * It maintains backward compatibility with legacy variables but provides
 * enhanced functionality through mixins that make responsive design easier.
 *
 * @example
 * ```scss
 * @use "breakpoints" as bp;
 * 
 * // Media query for specific breakpoint and below
 * @include bp.down('medium') {
 *   // Styles for medium breakpoint and below
 * }
 * 
 * // Media query between two breakpoints
 * @include bp.between('small', 'large') {
 *   // Styles for between small and large
 * }
 * 
 * // Responsive property values
 * @include bp.responsive((
 *   'base': 1rem,
 *   'small': 1.25rem,
 *   'medium': 1.5rem,
 *   'large': 2rem
 * )) using ($value) {
 *   font-size: $value;
 * }
 * ```
 */
/**
 * Generate a media query for screens with width less than or equal to the specified breakpoint
 * @param {String} $breakpoint - The breakpoint name (smallest, small, medium, large, largest)
 */
/**
 * Generate a media query for screens with width greater than the specified breakpoint
 * @param {String} $breakpoint - The breakpoint name (smallest, small, medium, large, largest)
 */
/**
 * Generate a media query for screens with width between two breakpoints
 * @param {String} $min - The minimum breakpoint name
 * @param {String} $max - The maximum breakpoint name
 */
/**
 * Generate a media query for a specific breakpoint only
 * @param {String} $breakpoint - The breakpoint name
 */
/**
 * Apply different styles at different breakpoints
 * @param {Map} $values - Map of breakpoint names to values
 */
/**
 * Generate a container that is full width until it reaches a breakpoint
 * @param {String} $breakpoint - The breakpoint at which to constrain width
 * @param {Number} $padding - The padding to apply at smaller screens
 */
/**
 * Generate a fluid value that scales between two sizes based on viewport width
 * @param {Number} $min-value - The minimum value
 * @param {Number} $max-value - The maximum value
 * @param {String} $min-breakpoint - The minimum breakpoint name
 * @param {String} $max-breakpoint - The maximum breakpoint name
 * @param {String} $property - The CSS property to apply the fluid value to
 */
/**
 * Remove the unit from a number
 * @param {Number} $number - The number with a unit
 * @return {Number} The number without a unit
 */
h1, h2, h3, h4 {
  text-transform: uppercase;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes slideIn {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes slideDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.needs-assessment {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: 2.5rem;
  background-color: var(--color-grey-dark-2, #343a40);
  border-radius: 0.5rem;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.05);
}
.needs-assessment h2 {
  text-align: center;
  margin-bottom: 2.5rem;
  color: var(--color-sage, #0b7abd);
  text-transform: uppercase;
}
.needs-assessment .needs-description {
  margin-bottom: 2.5rem;
  line-height: 1.6;
  color: var(--color-text-light, #dee2e6);
}
.needs-assessment .needs-categories {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 2rem;
  margin-bottom: 2.5rem;
}
.needs-assessment .needs-category {
  background-color: var(--color-grey-dark-3, #495057);
  border-radius: 0.5rem;
  padding: 2rem;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}
.needs-assessment .needs-category:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
}
.needs-assessment .needs-category h3 {
  margin-bottom: 1.5rem;
  color: var(--color-sage, #0b7abd);
  font-size: 1rem;
}
.needs-assessment .needs-category ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
.needs-assessment .needs-category li {
  margin-bottom: 0.5rem;
  display: flex;
  align-items: center;
}
.needs-assessment .needs-category li label {
  display: flex;
  align-items: center;
  cursor: pointer;
  width: 100%;
}
.needs-assessment .needs-category li label input[type=checkbox] {
  margin-right: 0.5rem;
  appearance: none;
  width: 18px;
  height: 18px;
  border: 2px solid var(--color-text-light, #dee2e6);
  border-radius: 0.125rem;
  background-color: transparent;
  position: relative;
}
.needs-assessment .needs-category li label input[type=checkbox]:checked {
  background-color: var(--color-sage, #0b7abd);
  border-color: var(--color-sage, #0b7abd);
}
.needs-assessment .needs-category li label input[type=checkbox]:checked::after {
  content: "";
  position: absolute;
  top: 2px;
  left: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}
.needs-assessment .needs-category li label span {
  flex: 1;
  transition: color 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}
.needs-assessment .needs-category li label:hover span {
  color: var(--color-sage-light, #1eaae0);
}
.needs-assessment .needs-results {
  margin-top: 2.5rem;
  padding: 2rem;
  background-color: var(--color-grey-dark-3, #495057);
  border-radius: 0.5rem;
}
.needs-assessment .needs-results h3 {
  margin-bottom: 1.5rem;
  color: var(--color-sage, #0b7abd);
}
.needs-assessment .needs-results .results-summary {
  margin-bottom: 2rem;
}
.needs-assessment .needs-results .results-summary p {
  margin-bottom: 0.5rem;
}
.needs-assessment .needs-results .results-summary .highlight {
  color: var(--color-sage, #0b7abd);
  font-weight: 700;
}
.needs-assessment .needs-results .category-results {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1.5rem;
}
.needs-assessment .needs-results .category-results .category-result {
  background-color: var(--color-grey-dark-4, #6c757d);
  padding: 1.5rem;
  border-radius: 0.25rem;
}
.needs-assessment .needs-results .category-results .category-result h4 {
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
}
.needs-assessment .needs-results .category-results .category-result .percentage {
  font-size: 1rem;
  font-weight: 700;
  color: var(--color-sage, #0b7abd);
}
.needs-assessment .needs-actions {
  margin-top: 2.5rem;
  display: flex;
  justify-content: center;
  gap: 1.5rem;
}
.needs-assessment .needs-actions button {
  padding: 1rem 2rem;
  background-color: var(--color-sage, #0b7abd);
  color: var(--color-grey-dark-1, #212529);
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
  transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}
.needs-assessment .needs-actions button:hover {
  background-color: var(--color-sage-light, #1eaae0);
}
.needs-assessment .needs-actions button:active {
  transform: scale(0.95);
}
.needs-assessment .needs-actions button.secondary {
  background-color: transparent;
  border: 1px solid var(--color-sage, #0b7abd);
  color: var(--color-sage, #0b7abd);
}
.needs-assessment .needs-actions button.secondary:hover {
  background-color: rgba(var(--color-sage-rgb, 122, 158, 126), 0.1);
}

@media only screen and (max-width: 50em) {
  .needs-assessment {
    padding: 2rem;
  }
  .needs-assessment .needs-categories {
    grid-template-columns: 1fr;
  }
  .needs-assessment .needs-actions {
    flex-direction: column;
  }
  .needs-assessment .needs-actions button {
    width: 100%;
  }
}
