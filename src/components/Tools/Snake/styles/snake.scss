// Import main SASS architecture
// @use "../../../../sass/variables" as vars; // Removed in favor of tokens
@use "../../../../sass/mixins" as mix;
@use "../../../../sass/functions" as fn;
@use "../../../../sass/breakpoints" as bp;
@use "../../../../sass/tokens" as tokens;

// Scope header styles to the snake game
.snake-game-container h1,
.snake-game-container h2,
.snake-game-container h3 {
  text-transform: uppercase;
}

// Snake Game Styles
.snake-game-container {
  @include mix.flex-column(center, center);
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
  
  canvas {
    display: block;
    margin: 0 auto;
  }
  
  .controls {
    @include mix.flex-column(center, center);
    margin-top: 1rem;
    
    .control-row {
      display: flex;
      margin: tokens.spacing('xxs') 0;
    }
    
    button {
      width: 3rem;
      height: 3rem;
      margin: 0 tokens.spacing('xxs');
      border: 1px solid var(--about-glass-border, rgba(tokens.gray('white'), 0.1));
      background: rgba(tokens.gray('black'), 0.5);
      color: var(--color-text, tokens.gray('gray-200'));
      border-radius: var(--about-border-radius, tokens.radius('md'));
      @include mix.flex-center;
      @include mix.clickable;
      transition: 
        background-color tokens.transition-duration('normal') tokens.transition-timing('default'),
        transform tokens.transition-duration('normal') tokens.transition-timing('default');
      
      &:hover {
        background: rgba(tokens.gray('black'), 0.7);
      }
      
      &:active {
        transform: scale(0.95);
      }
    }
  }
  
  .game-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    @include mix.flex-column(center, center);
    background: rgba(tokens.gray('black'), 0.7);
    z-index: 10;
    
    h2 {
      font-family: 'Press Start 2P', cursive;
      color: var(--color-coral, tokens.theme-color('coral'));
      margin-bottom: tokens.spacing('sm');
      text-transform: uppercase;
    }
    
    button {
      font-family: 'Press Start 2P', cursive;
      padding: tokens.spacing('xs') tokens.spacing('md');
      background: var(--color-sage, tokens.theme-color('sage'));
      border: none;
      border-radius: var(--about-border-radius, tokens.radius('md'));
      color: var(--color-indigo, tokens.theme-color('indigo'));
      @include mix.clickable;
      transition: 
        background-color tokens.transition-duration('normal') tokens.transition-timing('default'),
        transform tokens.transition-duration('normal') tokens.transition-timing('default');
      
      &:hover {
        background: var(--color-sage-light, tokens.theme-color('sage', 'light'));
      }
      
      &:active {
        transform: scale(0.95);
      }
    }
  }
  
  .score-display {
    position: absolute;
    top: tokens.spacing('sm');
    right: tokens.spacing('sm');
    background: rgba(tokens.theme-color('indigo'), 0.9);
    padding: tokens.spacing('xs') tokens.spacing('sm');
    border-radius: var(--about-border-radius, tokens.radius('md'));
    font-family: 'Press Start 2P', cursive;
    font-size: tokens.font-size('xs');
    
    .current-score {
      color: var(--color-text-light, tokens.gray('gray-300'));
    }
    
    .high-score {
      color: var(--color-success, tokens.theme-color('sage', 'light'));
    }
  }
  
  .mute-button {
    position: absolute;
    bottom: tokens.spacing('sm');
    right: tokens.spacing('sm');
    background: rgba(tokens.theme-color('indigo'), 0.9);
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    @include mix.flex-center;
    @include mix.clickable;
    transition: 
      background-color tokens.transition-duration('normal') tokens.transition-timing('default'),
      transform tokens.transition-duration('normal') tokens.transition-timing('default');
    
    &:hover {
      background: tokens.theme-color('indigo');
    }
    
    svg {
      width: 1.2rem;
      height: 1.2rem;
      fill: var(--color-text-light, tokens.gray('gray-300'));
    }
    
    &.muted svg {
      fill: var(--color-coral, tokens.theme-color('coral'));
    }
  }
}

// Media queries for responsive design
@include mix.respond('medium') {
  .snake-game-container {
    .controls {
      button {
        width: 2.5rem;
        height: 2.5rem;
      }
    }
    
    .score-display {
      font-size: tokens.font-size('xxs');
    }
  }
} 
