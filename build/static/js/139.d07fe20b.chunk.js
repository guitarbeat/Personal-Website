"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[139],{4139:(t,e,i)=>{i.r(e),i.d(e,{default:()=>m});var s=i(5043),r=i(1289),o=i(9620);const n=20,a=65280,c=52224,h=16711680,l=3355443;class d extends r.Scene{constructor(){super({key:"SnakeScene"})}init(){this.snake=[],this.food=null,this.direction="RIGHT",this.nextDirection="RIGHT",this.score=0,this.gameOver=!1,this.lastUpdate=0}preload(){this.load.on("complete",(()=>{console.log("Scene assets loaded")}))}create(){try{var t;this.initializeGame(),this.setupControls(),this.createInitialSnake(),this.spawnFood(),null!==(t=window.g)&&void 0!==t&&t.setState&&window.g.setState("playing")}catch(i){var e;console.error("Error in scene creation:",i),null!==(e=this.game.config.callbacks)&&void 0!==e&&e.postBoot&&this.game.config.callbacks.postBoot()}}initializeGame(){const t=this.game.config.width,e=this.game.config.height;this.gridWidth=Math.floor(t/n),this.gridHeight=Math.floor(e/n),this.createGrid(t,e),this.scoreText=this.add.text(16,16,"Score: 0",{fontFamily:'"Press Start 2P", monospace',fontSize:"16px",fill:"#fff"})}createGrid(t,e){const i=this.add.graphics();i.lineStyle(1,l,.3);for(let s=0;s<=this.gridWidth;s++){const t=s*n;i.beginPath(),i.moveTo(t,0),i.lineTo(t,e),i.strokePath()}for(let s=0;s<=this.gridHeight;s++){const e=s*n;i.beginPath(),i.moveTo(0,e),i.lineTo(t,e),i.strokePath()}}setupControls(){this.cursors=this.input.keyboard.createCursorKeys(),this.input.on("pointerdown",(t=>{const e=this.game.config.width/2,i=this.game.config.height/2;Math.abs(t.x-e)>Math.abs(t.y-i)?t.x>e&&"LEFT"!==this.direction?this.nextDirection="RIGHT":t.x<e&&"RIGHT"!==this.direction&&(this.nextDirection="LEFT"):t.y>i&&"UP"!==this.direction?this.nextDirection="DOWN":t.y<i&&"DOWN"!==this.direction&&(this.nextDirection="UP")}))}createInitialSnake(){const t=Math.floor(this.gridWidth/4),e=Math.floor(this.gridHeight/2),i=this.add.rectangle(t*n,e*n,18,18,a),s=this.add.rectangle((t-1)*n,e*n,18,18,c),r=this.add.rectangle((t-2)*n,e*n,18,18,c);this.snake=[i,s,r]}spawnFood(){let t,e;do{t=Math.floor(Math.random()*this.gridWidth),e=Math.floor(Math.random()*this.gridHeight)}while(this.isPositionOccupied(t,e));this.food&&this.food.destroy(),this.food=this.add.rectangle(t*n,e*n,18,18,h)}isPositionOccupied(t,e){return this.snake.some((i=>{const s=Math.floor(i.x/n),r=Math.floor(i.y/n);return s===t&&r===e}))}update(t){this.gameOver||(this.handleInput(),t-this.lastUpdate>150&&(this.moveSnake(),this.lastUpdate=t))}handleInput(){this.cursors.left.isDown&&"RIGHT"!==this.direction?this.nextDirection="LEFT":this.cursors.right.isDown&&"LEFT"!==this.direction?this.nextDirection="RIGHT":this.cursors.up.isDown&&"DOWN"!==this.direction?this.nextDirection="UP":this.cursors.down.isDown&&"UP"!==this.direction&&(this.nextDirection="DOWN")}moveSnake(){this.direction=this.nextDirection;const t=this.snake[0],e=t.x/n,i=t.y/n;let s=e,r=i;switch(this.direction){case"LEFT":s=(e-1+this.gridWidth)%this.gridWidth;break;case"RIGHT":s=(e+1)%this.gridWidth;break;case"UP":r=(i-1+this.gridHeight)%this.gridHeight;break;case"DOWN":r=(i+1)%this.gridHeight;break;default:console.warn("Unexpected direction:",this.direction)}if(this.isPositionOccupied(s,r))return this.gameOver=!0,void this.handleGameOver();const o=Math.floor(this.food.x/n),h=Math.floor(this.food.y/n);s===o&&r===h?(this.score+=10,this.scoreText.setText(`Score: ${this.score}`),this.spawnFood()):this.snake.pop().destroy();const l=this.add.rectangle(s*n,r*n,18,18,a);t.setFillStyle(c),this.snake.unshift(l)}handleGameOver(){var t;this.gameOver=!0,this.scene.pause();const e=prompt("Game Over! Enter your name for the highscore:");e&&Promise.resolve().then(i.bind(i,3188)).then((t=>{let{makeApiCall:i}=t;i("updateSheetData",{tabName:"SNAKE",playerName:e,score:this.score}).then((t=>{t.success?alert(`Congratulations! You ranked #${t.rank} on the leaderboard!\n\nTop 10 Scores:\n`+t.topScores.map((t=>`${t.name}: ${t.score}`)).join("\n")):console.error("Failed to save highscore:",t.error)})).catch((t=>{console.error("Error saving highscore:",t)}))})).catch((t=>{console.error("Error importing googleApps:",t)})),null!==(t=window.g)&&void 0!==t&&t.setState&&window.g.setState("gameover");const s=this.game.config.width/2,r=this.game.config.height/2;this.add.text(s,r-30,"GAME OVER",{fontFamily:'"Press Start 2P", monospace',fontSize:"32px",fill:"#ff0000",align:"center"}).setOrigin(.5),this.add.text(s,r+30,"Press SPACE to restart",{fontFamily:'"Press Start 2P", monospace',fontSize:"16px",fill:"#fff",align:"center"}).setOrigin(.5),this.input.keyboard.once("keydown-SPACE",(()=>{this.scene.restart()}))}}var u=i(579);const g={width:800,height:600,backgroundColor:"#1E1E2E",pixelArt:!0,antialias:!1,roundPixels:!0,scale:{mode:r.Scale.FIT,autoCenter:r.Scale.CENTER_BOTH,width:800,height:600,zoom:1},physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}}},f=()=>"undefined"===typeof window?null:(window.g||(window.g={m:Math,states:{},state:"play",config:{title:"Snakely",debug:!1,state:"play"},addState(t){null!==t&&void 0!==t&&t.name&&(this.states[t.name]=t)},setState(t){var e,i;if(this.states[t]){var s,r;if(this.state&&this.states[this.state])null===(s=(r=this.states[this.state]).exit)||void 0===s||s.call(r);this.state=t,null===(e=(i=this.states[this.state]).init)||void 0===e||e.call(i)}}}),window.g),p=(0,s.memo)((()=>{const t=(0,s.useRef)(null),e=(0,s.useRef)(null),i=(0,s.useRef)(null),{gameState:n,updateGameState:a}=(()=>{const[t,e]=(0,s.useState)({status:"initializing",score:0,highScore:"undefined"!==typeof window&&localStorage.getItem("snakeHighScore")||0,error:null});return{gameState:t,updateGameState:(0,s.useCallback)((t=>{e((e=>{const i={...e,...t};return"undefined"!==typeof window&&i.score>i.highScore&&(i.highScore=i.score,localStorage.setItem("snakeHighScore",i.highScore)),i}))}),[])}})(),c=(0,s.useCallback)((()=>{if(e.current&&!t.current)try{t.current=new r.Game({...g,type:r.AUTO,parent:e.current,scene:d,callbacks:{postBoot:()=>{a({status:"ready"})}}}),window.addEventListener("resize",(()=>{t.current&&t.current.scale.refresh()}))}catch(i){console.error("Failed to initialize game:",i),a({status:"error",error:i})}}),[a]);return(0,s.useEffect)((()=>(f(),(async(t,e)=>{if("undefined"!==typeof window&&t.current&&!e.current)return new Promise(((i,s)=>{const r=document.createElement("script");r.src="https://cdn.jsdelivr.net/gh/Amagitechnologies/vfx-js@latest/dist/vfx.min.js",r.async=!0,r.onload=()=>{if(t.current&&!e.current)try{e.current=new window.VFX({container:t.current,effects:{}}),i()}catch(r){console.warn("Failed to initialize VFX:",r),s(r)}},r.onerror=t=>{console.warn("Failed to load VFX script:",t),s(t)},document.body.appendChild(r)}))})(e,i).catch(console.warn),()=>{var e,s;(t.current&&(t.current.destroy(!0),t.current=null),i.current)&&(null===(e=(s=i.current).destroy)||void 0===e||e.call(s),i.current=null)})),[]),(0,s.useEffect)((()=>{const e=setTimeout((()=>{c()}),100);return()=>{clearTimeout(e),window.removeEventListener("resize",(()=>{t.current&&t.current.scale.refresh()})),t.current&&(t.current.destroy(!0),t.current=null)}}),[c]),(0,u.jsxs)(o.A,{children:[(0,u.jsx)("div",{ref:e,className:"snake-game-container",role:"application","aria-label":"Snake Game"}),"error"===n.status&&(0,u.jsx)("div",{className:"snake-game-error",children:"Failed to load game. Please refresh the page."})]})}));p.displayName="SnakeGame";const m=p}}]);
//# sourceMappingURL=139.d07fe20b.chunk.js.map