// Shared styles for all tools
// Import this file in the main tools/styles/index.scss

@use 'sass:map';
@use 'sass:color';
@use 'sass:math';
@use '../../../../sass/mixins' as mix;
@use '../../../../sass/breakpoints' as bp;
@use '../../../../sass/variables' as *;
@use '../../../../sass/tokens' as tokens; // Import tokens

// Core Mixins
@mixin tool-container {
  width: 100%;
  max-width: var(--layout-max-content-width, tokens.spacing('xxxl') * 12);
  margin: 0 auto;
  padding: var(--spacing-md, tokens.spacing('md'));

  @include mix.respond("mobile") {
    padding: var(--spacing-sm, tokens.spacing('sm'));
  }
}

@mixin tool-content {
  @include mix.glass-effect;
  padding: var(--spacing-lg, tokens.spacing('lg'));
  min-height: 400px;
  display: flex;
  flex-direction: column;
}

@mixin glass-container {
  background-color: var(--glass-bg, rgba(tokens.gray('white'), 0.05));
  backdrop-filter: blur(var(--glass-blur, 10px));
  -webkit-backdrop-filter: blur(var(--glass-blur, 10px));
  border: 1px solid var(--glass-border, rgba(tokens.gray('white'), 0.1));
  border-radius: var(--border-radius-md, tokens.radius('md'));
  box-shadow: var(--glass-shadow, tokens.shadow('sm'));
  transition: 
    background-color tokens.transition-duration('fast') tokens.transition-timing('default'),
    box-shadow tokens.transition-duration('fast') tokens.transition-timing('default');
  
  // Fallback for browsers that don't support backdrop-filter
  @supports not (backdrop-filter: blur(1px)) {
    background-color: var(--glass-fallback-bg, rgba(tokens.gray('black'), 0.7));
  }
}

@mixin tool-header {
  text-align: center;
  margin-bottom: var(--spacing-lg, tokens.spacing('lg'));
  
  h2 {
    font-size: var(--font-size-xl, tokens.font-size('xxl'));
    font-weight: var(--font-weight-bold, tokens.font-weight('bold'));
    color: var(--color-sage-base, tokens.theme-color('sage'));
    margin-bottom: var(--spacing-sm, tokens.spacing('sm'));
  }
  
  p {
    font-size: var(--font-size-md, tokens.font-size('md'));
    color: var(--text-color, tokens.gray('gray-200'));
    max-width: 600px;
    margin: 0 auto;
  }
}

// Button Mixins
@mixin tool-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: tokens.spacing('xs') tokens.spacing('md');
  background-color: var(--tool-button-bg, rgba(tokens.theme-color('sage'), 0.1));
  border: 1px solid var(--tool-button-border, rgba(tokens.theme-color('sage'), 0.2));
  border-radius: var(--border-radius-md, tokens.radius('md'));
  color: var(--text-color, tokens.gray('gray-200'));
  font-size: var(--font-size-md, tokens.font-size('md'));
  font-weight: var(--font-weight-medium, tokens.font-weight('medium'));
  cursor: pointer;
  transition: 
    background-color tokens.transition-duration('fast') tokens.transition-timing('default'),
    transform tokens.transition-duration('fast') tokens.transition-timing('default'),
    box-shadow tokens.transition-duration('fast') tokens.transition-timing('default');
  
  &:hover, &:focus {
    background-color: var(--tool-button-hover-bg, rgba(tokens.theme-color('sage'), 0.15));
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm, tokens.shadow('sm'));
  }
  
  &:active {
    transform: translateY(0);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    
    &:hover {
      background-color: var(--tool-button-bg, rgba(tokens.theme-color('sage'), 0.1));
      transform: none;
      box-shadow: none;
    }
  }
}

@mixin tool-button-primary {
  @include tool-button;
  background-color: var(--color-sage-base, tokens.theme-color('sage'));
  border-color: var(--color-sage-dark, tokens.theme-color('sage', 'dark'));
  color: var(--color-white, tokens.gray('white'));
  
  &:hover, &:focus {
    background-color: var(--color-sage-dark, tokens.theme-color('sage', 'dark'));
  }
  
  &:disabled {
    &:hover {
      background-color: var(--color-sage-base, tokens.theme-color('sage'));
    }
  }
}

@mixin tool-button-secondary {
  @include tool-button;
  background-color: var(--color-coral-base, tokens.theme-color('coral'));
  border-color: var(--color-coral-dark, tokens.theme-color('coral', 'dark'));
  color: var(--color-white, tokens.gray('white'));
  
  &:hover, &:focus {
    background-color: var(--color-coral-dark, tokens.theme-color('coral', 'dark'));
  }
  
  &:disabled {
    &:hover {
      background-color: var(--color-coral-base, tokens.theme-color('coral'));
    }
  }
}

// Input Mixins
@mixin tool-input {
  display: block;
  width: 100%;
  padding: tokens.spacing('xs') tokens.spacing('sm');
  background-color: var(--tool-input-bg, rgba(tokens.gray('white'), 0.1));
  border: 1px solid var(--tool-input-border, rgba(tokens.gray('white'), 0.2));
  border-radius: var(--border-radius-md, tokens.radius('md'));
  color: var(--text-color, tokens.gray('gray-200'));
  font-size: var(--font-size-md, tokens.font-size('md'));
  transition: 
    background-color tokens.transition-duration('fast') tokens.transition-timing('default'),
    border-color tokens.transition-duration('fast') tokens.transition-timing('default');
  
  &:focus {
    outline: none;
    background-color: var(--tool-input-focus-bg, rgba(tokens.gray('white'), 0.15));
    border-color: var(--tool-input-focus-border, rgba(tokens.gray('white'), 0.4));
  }
  
  &::placeholder {
    color: var(--color-grey-light-3, tokens.gray('gray-500'));
  }
}

// Layout Mixins
@mixin tool-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--spacing-md, tokens.spacing('md'));
}

@mixin responsive-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--spacing-lg, tokens.spacing('lg'));
  width: 100%;
  
  @include mix.respond("tablet") {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--spacing-md, tokens.spacing('md'));
  }
  
  @include mix.respond("mobile") {
    grid-template-columns: 1fr;
    gap: var(--spacing-sm, tokens.spacing('sm'));
  }
}

@mixin tool-flex-row {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--spacing-sm, tokens.spacing('sm'));
  
  @include mix.respond("mobile") {
    flex-direction: column;
    align-items: stretch;
  }
}

@mixin tool-flex-column {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm, tokens.spacing('sm'));
}

// Fullscreen Mixins
@mixin fullscreen-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: var(--z-index-modal, tokens.z('modal'));
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(tokens.gray('black'), 0.7);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
}

@mixin fullscreen-tool {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  background-color: var(--tool-bg, rgba(tokens.gray('black'), 0.5));
}

@mixin fullscreen-content {
  @include mix.glass-effect;
  width: 90%;
  max-width: 800px;
  max-height: 90vh;
  overflow-y: auto;
  padding: var(--spacing-lg, tokens.spacing('lg'));
  border-radius: var(--border-radius-lg, tokens.radius('lg'));
  position: relative;
}

@mixin fullscreen-button {
  position: absolute;
  top: var(--spacing-sm, tokens.spacing('sm'));
  right: var(--spacing-sm, tokens.spacing('sm'));
  z-index: var(--z-index-modal, tokens.z('modal'));
  padding: tokens.spacing('xs');
  background-color: var(--tool-button-bg, rgba(tokens.theme-color('sage'), 0.1));
  border: 1px solid var(--tool-button-border, rgba(tokens.theme-color('sage'), 0.2));
  border-radius: var(--border-radius-md, tokens.radius('md'));
  color: var(--text-color, tokens.gray('gray-200'));
  font-size: var(--font-size-md, tokens.font-size('md'));
  cursor: pointer;
  transition: all tokens.transition-duration('fast') tokens.transition-timing('default');
  
  &:hover {
    background-color: var(--tool-button-hover-bg, rgba(tokens.theme-color('sage'), 0.15));
    transform: translateY(-2px);
  }
}

// Animation Keyframes
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideIn {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Animation Mixins
@mixin animate-fade-in($duration: tokens.transition-duration('normal'), $delay: 0s) {
  animation: fadeIn $duration tokens.transition-timing('ease-out') $delay forwards;
}

@mixin animate-fade-out($duration: tokens.transition-duration('normal'), $delay: 0s) {
  animation: fadeOut $duration tokens.transition-timing('ease-in') $delay forwards;
}

@mixin animate-slide-in($duration: tokens.transition-duration('normal'), $delay: 0s) {
  animation: slideIn $duration tokens.transition-timing('ease-out') $delay forwards;
}

@mixin animate-slide-down($duration: tokens.transition-duration('normal'), $delay: 0s) {
  animation: slideDown $duration tokens.transition-timing('ease-out') $delay forwards;
}

// State Mixins
@mixin loading-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: tokens.spacing('md');
  padding: tokens.spacing('lg');
  min-height: 300px;
  animation: fadeIn tokens.transition-duration('normal') tokens.transition-timing('ease-out') forwards;
  
  i, .loading-icon {
    font-size: tokens.font-size('xxl');
    color: var(--color-sage, tokens.theme-color('sage'));
    animation: rotate 1s linear infinite;
  }
  
  p {
    font-size: tokens.font-size('md');
    color: var(--text-color, tokens.gray('gray-200'));
  }
}

@mixin error-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: tokens.spacing('md');
  padding: tokens.spacing('lg');
  text-align: center;
  min-height: 300px;
  color: var(--color-coral, tokens.theme-color('coral'));
  animation: fadeIn tokens.transition-duration('normal') tokens.transition-timing('ease-out') forwards;
  
  i, .error-icon {
    font-size: tokens.font-size('xxl');
    margin-bottom: tokens.spacing('sm');
  }
  
  p {
    font-size: tokens.font-size('md');
    color: var(--text-color, tokens.gray('gray-200'));
    margin-bottom: tokens.spacing('md');
  }
  
  button {
    @include tool-button;
  }
}

// Accessibility
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
} 