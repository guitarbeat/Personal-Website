/* Root Variables - Consolidated Color System */
:root {
  /* Primary Matrix Colors */
  --matrix-bg: rgba(0, 0, 0, 0.85);
  --matrix-green: rgba(0, 255, 0, 0.9);
  --matrix-dark-green: rgba(0, 200, 0, 0.8);
  --matrix-darker-green: rgba(0, 150, 0, 0.7);
  --matrix-darkest-green: rgba(0, 100, 0, 0.6);
  --matrix-medium-green: rgba(0, 180, 0, 0.75);
  --matrix-bright-green: rgba(0, 255, 0, 1.0);
  
  /* Accent Colors */
  --matrix-cyan-green: rgba(0, 255, 100, 0.8);
  --matrix-cyan: rgba(0, 255, 255, 0.8);
  --matrix-white: rgba(255, 255, 255, 0.95);
  --matrix-red: rgba(255, 0, 0, 0.9);
  --matrix-yellow: rgba(255, 255, 0, 0.9);
  
  /* Background Colors */
  --matrix-terminal-bg: rgba(0, 0, 0, 0.95);
  --matrix-glow: rgba(0, 255, 0, 0.15);
  
  /* Animation Timing - Standardized */
  --matrix-flicker-duration: 100ms;
  --matrix-terminal-flicker-duration: 50ms;
  --matrix-screen-flicker-duration: 100ms;
  --matrix-success-duration: 2000ms;
  --matrix-modal-close-delay: 2000ms;
  --matrix-fade-in-duration: 600ms;
  --matrix-fade-out-duration: 300ms;
  --matrix-hover-transition: 300ms;
  --matrix-focus-transition: 200ms;
  --matrix-glitch-duration: 200ms;
  
  /* Z-Index Scale - Consistent Layering */
  --z-background: 1000;
  --z-canvas: 1001;
  --z-feedback: 1002;
  --z-modal: 2000;
  --z-modal-backdrop: 2001;
  --z-modal-content: 2002;
  --z-modal-controls: 2003;
  --z-tooltip: 3000;
  --z-notification: 3001;
  --z-debug: 3002;
  
  /* Typography */
  --matrix-font-family: 'Courier New', 'Monaco', 'Consolas', monospace;
  --matrix-font-size-small: 10px;
  --matrix-font-size-medium: 11px;
  --matrix-font-size-large: 12px;
  --matrix-font-size-huge: 32px;
  
  /* Layout */
  --matrix-padding-small: 8px;
  --matrix-padding-medium: 16px;
  --matrix-padding-large: 24px;
  --matrix-padding-xlarge: 32px;
  
  /* Transitions */
  --matrix-transition: 0.1s cubic-bezier(0.4, 0, 0.2, 1);
  --matrix-transition-fast: 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  --matrix-transition-slow: 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Reset dialog element to ensure full screen behavior */
dialog {
  margin: 0;
  padding: 0;
  border: none;
  background: transparent;
  position: static;
  display: block;
  width: auto;
  height: auto;
  max-width: none;
  max-height: none;
  min-width: auto;
  min-height: auto;
  inset: auto;
}

/* Matrix Container - High specificity to override dialog defaults */
dialog.matrix-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--matrix-terminal-bg);
  transition: all var(--matrix-transition);
  overflow: hidden;
  z-index: var(--z-modal);
  backdrop-filter: blur(2px);
  max-width: none;
  max-height: none;
  min-width: 100vw;
  min-height: 100vh;
  inset: 0;
  animation: matrixFlicker var(--matrix-flicker-duration) infinite linear;
  font-family: 'Courier New', 'Monaco', 'Consolas', monospace;
  
  /* Enhanced visual effects */
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 20% 80%, rgba(0, 255, 0, 0.03) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(0, 255, 0, 0.03) 0%, transparent 50%),
      radial-gradient(circle at 40% 40%, rgba(0, 255, 0, 0.02) 0%, transparent 50%);
    pointer-events: none;
    animation: matrixAmbientGlow 8s ease-in-out infinite alternate;
  }
  
  /* Interactive hover effects */
  &:hover {
    &::before {
      animation: matrixAmbientGlow 4s ease-in-out infinite alternate;
    }
    
    .matrix-canvas {
      filter: contrast(1.8) brightness(1.4) saturate(1.6) hue-rotate(10deg);
      animation: 
        terminalFlicker var(--matrix-terminal-flicker-duration) infinite linear,
        matrixCanvasFadeIn 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards,
        matrixScreenDistortion 4s ease-in-out infinite;
    }
  }
  
  /* Ensure dialog element behaves like a full screen overlay */
  &::backdrop {
    background: var(--matrix-bg);
    backdrop-filter: blur(3px);
  }

  &.visible {
    opacity: 1; /* Start visible immediately */
    visibility: visible;
    transform: scale(1);
    transition: opacity var(--matrix-fade-in-duration) cubic-bezier(0.4, 0, 0.2, 1);
  }

  &.matrix-fade-in {
    opacity: 1;
    animation: matrixFadeIn 1.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  &:not(.visible) {
    opacity: 0;
    visibility: hidden;
    transform: scale(0.95);
  }
}

/* Fallback for non-dialog elements - inherits from dialog.matrix-container */

@keyframes matrixFadeIn {
  0% {
    background: rgba(0, 0, 0, 0);
    backdrop-filter: blur(0);
    transform: scale(0.8) rotateX(15deg) rotateY(5deg);
    opacity: 0;
    filter: hue-rotate(0deg) contrast(0.5) brightness(0.3);
  }
  10% {
    background: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(1px);
    transform: scale(0.85) rotateX(12deg) rotateY(3deg);
    opacity: 0.1;
    filter: hue-rotate(90deg) contrast(0.7) brightness(0.5);
  }
  25% {
    background: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(2px);
    transform: scale(0.9) rotateX(8deg) rotateY(2deg);
    opacity: 0.3;
    filter: hue-rotate(180deg) contrast(0.9) brightness(0.7);
  }
  50% {
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(3px);
    transform: scale(1.05) rotateX(2deg) rotateY(1deg);
    opacity: 0.7;
    filter: hue-rotate(270deg) contrast(1.2) brightness(1.1);
  }
  75% {
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(4px);
    transform: scale(1.02) rotateX(0deg) rotateY(0deg);
    opacity: 0.9;
    filter: hue-rotate(360deg) contrast(1.1) brightness(1.05);
  }
  100% {
    background: var(--matrix-bg);
    backdrop-filter: blur(3px);
    transform: scale(1) rotateX(0deg) rotateY(0deg);
    opacity: 1;
    filter: hue-rotate(0deg) contrast(1) brightness(1);
  }
}

@keyframes matrixAmbientGlow {
  0% {
    opacity: 0.3;
    transform: scale(1) rotate(0deg);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.05) rotate(180deg);
  }
  100% {
    opacity: 0.3;
    transform: scale(1) rotate(360deg);
  }
}

@keyframes matrixCanvasFadeIn {
  0% {
    opacity: 0;
    transform: scale(0.9) translateY(20px);
    filter: contrast(0.5) brightness(0.3) blur(2px);
  }
  30% {
    opacity: 0.3;
    transform: scale(0.95) translateY(10px);
    filter: contrast(0.8) brightness(0.7) blur(1px);
  }
  60% {
    opacity: 0.7;
    transform: scale(1.02) translateY(-5px);
    filter: contrast(1.1) brightness(1.1) blur(0.5px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
    filter: contrast(1.4) brightness(1.2) blur(0);
  }
}

@keyframes matrixFormFadeIn {
  0% {
    opacity: 0;
    transform: translateY(30px) scale(0.9);
    filter: blur(3px);
  }
  50% {
    opacity: 0.5;
    transform: translateY(15px) scale(0.95);
    filter: blur(1px);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
    filter: blur(0);
  }
}

@keyframes matrixFlicker {
  0%, 100% {
    opacity: 1;
    filter: brightness(1) contrast(1);
  }
  1% {
    opacity: 0.98;
    filter: brightness(1.1) contrast(1.1);
  }
  2% {
    opacity: 0.99;
    filter: brightness(0.9) contrast(0.9);
  }
  3% {
    opacity: 1;
    filter: brightness(1.05) contrast(1.05);
  }
  4% {
    opacity: 0.97;
    filter: brightness(0.95) contrast(0.95);
  }
  5% {
    opacity: 1;
    filter: brightness(1) contrast(1);
  }
}

@keyframes terminalFlicker {
  0%, 100% {
    opacity: 1;
    filter: contrast(1.5) brightness(1.2) saturate(1.4);
  }
  1% {
    opacity: 0.99;
    filter: contrast(1.6) brightness(1.3) saturate(1.5);
  }
  2% {
    opacity: 0.98;
    filter: contrast(1.4) brightness(1.1) saturate(1.3);
  }
  3% {
    opacity: 1;
    filter: contrast(1.55) brightness(1.25) saturate(1.45);
  }
  4% {
    opacity: 0.97;
    filter: contrast(1.45) brightness(1.15) saturate(1.35);
  }
  5% {
    opacity: 1;
    filter: contrast(1.5) brightness(1.2) saturate(1.4);
  }
}

/* Matrix Canvas (Rain Effect) */
.matrix-canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: var(--z-canvas);
  pointer-events: none; /* Ensures clicks pass through */
  image-rendering: pixelated;
  image-rendering: -moz-crisp-edges;
  image-rendering: crisp-edges;
  filter: contrast(1.5) brightness(1.2) saturate(1.4) hue-rotate(0deg);
  animation: 
    terminalFlicker var(--matrix-terminal-flicker-duration) infinite linear,
    matrixCanvasFadeIn 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards,
    matrixScreenDistortion 8s ease-in-out infinite;
  opacity: 1;
  
  /* Enhanced visual effects */
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 20% 20%, rgba(0, 255, 0, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 80%, rgba(0, 255, 255, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 50% 50%, rgba(0, 255, 0, 0.05) 0%, transparent 50%);
    pointer-events: none;
    animation: matrixAmbientPulse 6s ease-in-out infinite alternate;
  }
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(0, 255, 0, 0.03) 2px,
        rgba(0, 255, 0, 0.03) 4px
      );
    pointer-events: none;
    animation: matrixScanlines 0.1s linear infinite;
  }
}

/* Matrix Hint Bubble System */
.matrix-hint-bubble {
  --bubble-border: var(--matrix-green);
  --bubble-background: rgba(0, 0, 0, 0.8);
  --bubble-text: var(--matrix-green);
  --hint-divider-color: rgba(0, 255, 0, 0.3);

  position: absolute;
  width: fit-content;
  min-width: 250px;
  top: 2rem;
  right: 2rem;
  transform: scale(0.9);
  transform-origin: 80% top;
  opacity: 0;
  pointer-events: none;
  transition:
    opacity 0.5s ease,
    transform 0.5s ease;
  z-index: var(--z-modal-controls);
  cursor: pointer;

  &.level-1 {
    opacity: 1;
    pointer-events: auto;
    transform: scale(1);
  }

  &.level-2 {
    opacity: 1;
    pointer-events: auto;
    transform: scale(1.1);
  }

  &:hover {
    transform: scale(1.05);
  }

  &:focus {
    outline: 2px solid var(--matrix-white);
    outline-offset: 2px;
  }
}

/* Hint Bubble Parts */
.hint-bubble-parts {
  .bub-part {
    &-a {
      margin-left: 4px;
      width: calc(100% - 8px);
      height: 0.25px;
      background: var(--bubble-background);
      border: 0.25px solid var(--bubble-border);
      margin-bottom: -1px;
    }

    &-b {
      margin-left: 3px;
      width: calc(100% - 6px);
      height: 0.25px;
      background: var(--bubble-background);
      border: 0.25px solid var(--bubble-border);
      margin-bottom: -1px;
    }

    &-c {
      margin-left: 2px;
      width: calc(100% - 6px);
      height: 0.25px;
      background: var(--bubble-background);
      border: 0.25px solid var(--bubble-border);
      margin-bottom: -1px;
    }
  }
}

/* Hint Speech Text */
.hint-speech-txt {
  width: calc(100% - 4px);
  margin-left: 2px;
  padding: 0.75rem 1rem;
  background-color: var(--bubble-background);
  border-left: 1px solid var(--bubble-border);
  border-right: 1px solid var(--bubble-border);
  position: relative;
  z-index: var(--z-canvas);

  &::before,
  &::after {
    content: "";
    position: absolute;
    left: -1px;
    right: -1px;
    height: 1px;
    background: var(--bubble-background);
  }

  &::before {
    top: -1px;
  }

  &::after {
    bottom: -1px;
  }

  .hint-section {
    height: 0;
    overflow: hidden;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
    margin: 0;

    &.visible {
      height: auto;
      opacity: 1;
      transform: translateY(0);

      & + .hint-section {
        margin-top: 0.25rem;
      }

      .hint-divider {
        display: block;
      }
    }

    .hint-divider {
      display: none;
      height: 1px;
      background: var(--hint-divider-color);
      margin: 0.25rem auto;
      width: 70%;
      transition: width 0.3s ease;

      &:hover {
        width: 90%;
      }
    }
  }

  .hint-text {
    font-size: 0.8rem;
    color: var(--bubble-text);
    margin-top: 0.25rem;
    font-family: "Courier New", monospace;
    text-shadow: 0 0 3px var(--matrix-green);
  }

  .hint-prompt {
    height: 0;
    overflow: hidden;
    margin: 0;
    opacity: 0;
    transition: all 0.3s ease;

    &:not(:empty) {
      height: auto;
      margin-top: 0.25rem;
      font-size: 0.8rem;
      opacity: 0.8;
      color: var(--matrix-yellow);
      font-family: "Courier New", monospace;
      text-shadow: 0 0 3px var(--matrix-yellow);
    }
  }
}

/* Hint Speech Arrow */
.hint-speech-arrow {
  margin-top: -1px;
  margin-left: 50%;
  transform: translateX(-50%);

  [class^="arrow-"] {
    border: 1px solid var(--bubble-border);
    margin-bottom: -1px;
    background: var(--bubble-background);
    position: relative;
    z-index: var(--z-feedback);
  }

  .arrow-w {
    width: 6px;
    height: 6px;
  }

  .arrow-x,
  .arrow-y {
    width: 5px;
    height: 2px;
  }

  .arrow-z {
    width: 6px;
    height: 2px;
    background: var(--bubble-border);
  }
}

/* Keyboard Hints */
.keyboard-hints {
  position: fixed;
  top: 2rem;
  left: 2rem;
  z-index: var(--z-modal-controls);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  font-family: "Courier New", monospace;
  font-size: 0.8rem;
  color: var(--matrix-green);
  opacity: 0.7;
  transition: opacity 0.3s ease;

  span {
    padding: 0.25rem 0.5rem;
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid var(--matrix-green);
    border-radius: 2px;
    text-shadow: 0 0 3px var(--matrix-green);
  }

  &:hover {
    opacity: 1;
  }
}

/* Audio Controls */
.audio-controls {
  position: fixed;
  bottom: 2rem;
  left: 2rem;
  z-index: var(--z-modal-controls);
  display: flex;
  align-items: center;
  gap: 0.75rem;
  font-family: "Courier New", monospace;
  font-size: 0.8rem;
  color: var(--matrix-green);
  text-shadow: 0 0 3px var(--matrix-green);
  background: rgba(0, 0, 0, 0.3);
  border: 1px solid var(--matrix-green);
  border-radius: 4px;
  padding: 0.5rem 0.75rem;
  backdrop-filter: blur(5px);
  transition: all 0.3s ease;

  &:hover {
    background: rgba(0, 0, 0, 0.5);
    box-shadow: 0 0 8px var(--matrix-glow);
  }
}

.audio-status {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  min-width: 8rem;
}

.status-indicator {
  font-size: 1rem;
  transition: all 0.3s ease;

  &.loading {
    animation: pulse 1s infinite;
  }

  &.playing {
    animation: glow 2s infinite;
  }

  &.error {
    color: var(--matrix-red);
  }

  &.stopped {
    opacity: 0.6;
  }
}

.status-text {
  font-size: 0.75rem;
  color: var(--matrix-green);
  text-shadow: 0 0 3px var(--matrix-green);
  white-space: nowrap;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

@keyframes glow {
  0%, 100% { text-shadow: 0 0 3px var(--matrix-green); }
  50% { text-shadow: 0 0 8px var(--matrix-green), 0 0 12px var(--matrix-glow); }
}

.audio-mute-btn {
  background: none;
  border: 1px solid var(--matrix-green);
  border-radius: 3px;
  color: var(--matrix-green);
  font-size: 1rem;
  padding: 0.375rem 0.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
  backdrop-filter: blur(5px);

  &:hover {
    background: rgba(0, 255, 0, 0.1);
    box-shadow: 0 0 6px var(--matrix-glow);
  }

  &:focus {
    outline: 2px solid var(--matrix-cyan);
    outline-offset: 2px;
  }

  &.muted {
    color: var(--matrix-red);
    border-color: var(--matrix-red);
    
    &:hover {
      background: rgba(255, 0, 0, 0.1);
      box-shadow: 0 0 6px rgba(255, 0, 0, 0.3);
    }
  }
}

.volume-control {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.volume-label {
  font-size: 0.8rem;
  color: var(--matrix-green);
  text-shadow: 0 0 3px var(--matrix-green);
  white-space: nowrap;
}

.volume-slider {
  width: 5rem;
  height: 0.25rem;
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid var(--matrix-green);
  border-radius: 1px;
  outline: none;
  cursor: pointer;
  transition: all 0.2s ease;

  &::-webkit-slider-thumb {
    appearance: none;
    width: 0.75rem;
    height: 0.75rem;
    background: var(--matrix-green);
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 0 4px var(--matrix-glow);
    transition: all 0.2s ease;
  }

  &::-moz-range-thumb {
    width: 0.75rem;
    height: 0.75rem;
    background: var(--matrix-green);
    border-radius: 50%;
    cursor: pointer;
    border: none;
    box-shadow: 0 0 4px var(--matrix-glow);
  }

  &:hover {
    box-shadow: 0 0 6px var(--matrix-glow);
  }

  &:focus {
    box-shadow: 0 0 8px var(--matrix-cyan);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.volume-value {
  font-size: 0.8rem;
  color: var(--matrix-green);
  text-shadow: 0 0 3px var(--matrix-green);
  min-width: 2rem;
  text-align: right;
}

/* Performance Indicator */
.performance-indicator {
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  z-index: var(--z-modal-controls);
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  font-family: "Courier New", monospace;
  font-size: 0.7rem;
  color: var(--matrix-yellow);
  opacity: 0.6;
  background: rgba(0, 0, 0, 0.5);
  padding: 0.5rem;
  border: 1px solid var(--matrix-yellow);
  border-radius: 4px;
  text-shadow: 0 0 3px var(--matrix-yellow);
}

/* Rate Limiting Message */
.rate-limit-message {
  position: absolute;
  z-index: var(--z-feedback);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.9);
  border: 2px solid var(--matrix-red);
  border-radius: 8px;
  padding: 1.5rem 2rem;
  color: var(--matrix-red);
  font-family: "Courier New", monospace;
  font-size: 1.1rem;
  text-align: center;
  animation: rateLimitPulse 2s ease-in-out infinite;
  box-shadow: 
    0 0 15px var(--matrix-red),
    0 0 30px rgba(255, 0, 0, 0.3);
}

@keyframes rateLimitPulse {
  0%, 100% {
    box-shadow: 
      0 0 15px var(--matrix-red),
      0 0 30px rgba(255, 0, 0, 0.3);
  }
  50% {
    box-shadow: 
      0 0 25px var(--matrix-red),
      0 0 50px rgba(255, 0, 0, 0.5);
  }
}

/* Feedback Containers */
.feedback-container-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  pointer-events: none;
  z-index: var(--z-notification);
}

.feedback-container {
  position: absolute;
  z-index: var(--z-notification);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  animation: fadeIn 0.5s ease-in-out;
  pointer-events: auto;
}

.feedback-container img.incorrect-gif {
  max-width: 300px;
  margin-bottom: 1rem;
}

.feedback-container .feedback-hint {
  color: var(--matrix-white);
  font-family: monospace;
  font-size: 1.2rem;
  margin-top: 1rem;
}

/* Enhanced Glitch Effect for Incorrect Feedback */
.feedback-container.glitch-effect {
  animation: enhancedGlitch 0.3s infinite;
  filter: hue-rotate(0deg) contrast(1.2) brightness(1.1);
}

@keyframes enhancedGlitch {
  0% {
    transform: translate(0, 0) scale(1);
    filter: hue-rotate(0deg) contrast(1.2) brightness(1.1);
  }
  10% {
    transform: translate(-2px, 2px) scale(1.01);
    filter: hue-rotate(90deg) contrast(1.5) brightness(1.3);
  }
  20% {
    transform: translate(2px, -2px) scale(0.99);
    filter: hue-rotate(180deg) contrast(0.8) brightness(0.9);
  }
  30% {
    transform: translate(-2px, -2px) scale(1.02);
    filter: hue-rotate(270deg) contrast(1.8) brightness(1.5);
  }
  40% {
    transform: translate(2px, 2px) scale(0.98);
    filter: hue-rotate(360deg) contrast(1.1) brightness(1.2);
  }
  50% {
    transform: translate(-1px, 1px) scale(1.01);
    filter: hue-rotate(45deg) contrast(1.4) brightness(1.3);
  }
  60% {
    transform: translate(1px, -1px) scale(0.99);
    filter: hue-rotate(135deg) contrast(0.9) brightness(0.8);
  }
  70% {
    transform: translate(-1px, -1px) scale(1.02);
    filter: hue-rotate(225deg) contrast(1.6) brightness(1.4);
  }
  80% {
    transform: translate(1px, 1px) scale(0.98);
    filter: hue-rotate(315deg) contrast(1.2) brightness(1.1);
  }
  90% {
    transform: translate(-0.5px, 0.5px) scale(1.005);
    filter: hue-rotate(0deg) contrast(1.3) brightness(1.2);
  }
  100% {
    transform: translate(0, 0) scale(1);
    filter: hue-rotate(0deg) contrast(1.2) brightness(1.1);
  }
}

/* Matrix container glitch effect */
.matrix-container.glitch-effect {
  animation: matrixContainerGlitch 0.5s ease-in-out;
}

@keyframes matrixContainerGlitch {
  0% {
    transform: translate(0) scale(1);
    filter: hue-rotate(0deg) contrast(1) brightness(1);
  }
  25% {
    transform: translate(-3px, 3px) scale(1.01);
    filter: hue-rotate(90deg) contrast(1.3) brightness(1.2);
  }
  50% {
    transform: translate(3px, -3px) scale(0.99);
    filter: hue-rotate(180deg) contrast(0.8) brightness(0.9);
  }
  75% {
    transform: translate(-2px, -2px) scale(1.02);
    filter: hue-rotate(270deg) contrast(1.5) brightness(1.3);
  }
  100% {
    transform: translate(0) scale(1);
    filter: hue-rotate(0deg) contrast(1) brightness(1);
  }
}


/* Success Message */
.success-message {
  position: absolute;
  z-index: var(--z-feedback);
  color: var(--matrix-green);
  font-size: 3rem;
  font-family: "Courier New", monospace;
  text-transform: uppercase;
  letter-spacing: 3px;
  text-shadow:
    0 0 5px rgba(0, 255, 0, 0.5),
    0 0 10px rgba(0, 255, 0, 0.3),
    0 0 15px rgba(255, 255, 255, 0.3);
  animation: successPulse 2s ease-in-out forwards;
}

@keyframes successPulse {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
  100% {
    opacity: 0;
    transform: scale(2);
  }
}

/* Glow Animation */
@keyframes glow {
  0% {
    text-shadow:
      0 0 5px var(--matrix-green),
      0 0 10px var(--matrix-green),
      0 0 15px var(--matrix-green),
      0 0 20px var(--matrix-white);
  }

  50% {
    text-shadow:
      0 0 10px var(--matrix-green),
      0 0 20px var(--matrix-green),
      0 0 30px var(--matrix-white),
      0 0 40px var(--matrix-white);
  }

  100% {
    text-shadow:
      0 0 5px var(--matrix-green),
      0 0 10px var(--matrix-green),
      0 0 15px var(--matrix-green),
      0 0 20px var(--matrix-white);
  }
}

/* Password Form */
.password-form {
  position: relative;
  z-index: var(--z-feedback);
  animation: 
    float 4s ease-in-out infinite,
    matrixFormFadeIn 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 2rem;
  background: var(--matrix-terminal-bg);
  border: 2px solid var(--matrix-green);
  border-radius: 0;
  backdrop-filter: blur(5px);
  box-shadow: 
    0 0 25px rgba(0, 255, 0, 0.3),
    inset 0 0 25px rgba(0, 255, 0, 0.1);
  transition: all 0.3s ease;
  font-family: 'Courier New', 'Monaco', 'Consolas', monospace;
  opacity: 1;
  
  &::before {
    content: 'root@terminal:~$';
    position: absolute;
    top: -30px;
    left: 0;
    color: var(--matrix-green);
    font-size: 0.9rem;
    font-family: 'Courier New', 'Monaco', 'Consolas', monospace;
    text-shadow: 0 0 5px var(--matrix-green);
  }
  
  &:hover {
    transform: translateY(-5px);
    box-shadow: 
      0 0 35px rgba(0, 255, 0, 0.4),
      inset 0 0 35px rgba(0, 255, 0, 0.15);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) rotateX(0deg);
  }
  50% {
    transform: translateY(-10px) rotateX(2deg);
  }
}

.password-input {
  font-family: "Courier New", "Monaco", "Consolas", monospace;
  font-size: 1.2rem;
  padding: 1rem 1.5rem;
  border: 2px solid var(--matrix-green);
  border-radius: 0;
  background: var(--matrix-terminal-bg);
  color: var(--matrix-green);
  outline: none;
  width: 320px;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  letter-spacing: 2px;
  text-shadow: 0 0 5px rgba(0, 255, 0, 0.7);
  backdrop-filter: blur(5px);
  position: relative;
  
  &::placeholder {
    color: rgba(0, 255, 0, 0.5);
    font-style: normal;
  }
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent, rgba(0, 255, 0, 0.1), transparent);
    border-radius: 8px;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  &:focus {
    border-color: var(--matrix-white);
    box-shadow:
      0 0 15px var(--matrix-green),
      0 0 30px var(--matrix-glow),
      inset 0 0 15px rgba(0, 255, 0, 0.1);
    transform: scale(1.02) translateY(-2px);
    
    &::before {
      opacity: 1;
    }
  }

  &::placeholder {
    color: rgba(0, 255, 0, 0.6);
    opacity: 0.8;
    font-style: italic;
  }

  &:hover {
    border-color: var(--matrix-white);
    box-shadow:
      0 0 12px var(--matrix-green),
      0 0 25px var(--matrix-glow);
    transform: translateY(-1px);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    border-color: var(--matrix-red);
    
    &:hover {
      box-shadow: none;
      transform: none;
    }
  }
}

/* Close Button */
.matrix-close-btn {
  position: fixed;
  top: 2rem;
  right: 2rem;
  z-index: var(--z-modal-controls);
  background: transparent;
  border: 2px solid var(--matrix-green);
  color: var(--matrix-green);
  padding: 0.7rem 1.5rem;
  font-family: "Courier New", monospace;
  font-size: 1.1rem;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
  letter-spacing: 2px;
  text-shadow: 0 0 5px var(--matrix-green);

  &:hover {
    background: var(--matrix-green);
    color: black;
    box-shadow:
      0 0 15px var(--matrix-green),
      0 0 30px var(--matrix-glow);
    transform: translateY(-2px);
  }

  &:active {
    transform: translateY(0);
  }

  &:focus {
    outline: 2px solid var(--matrix-white);
    outline-offset: 2px;
  }
}

/* Password Submit Button */
.password-submit-btn {
  padding: 1rem 2rem;
  font-family: "Courier New", "Monaco", "Consolas", monospace;
  font-size: 1.2rem;
  font-weight: bold;
  border: 2px solid var(--matrix-green);
  border-radius: 0;
  background: var(--matrix-terminal-bg);
  color: var(--matrix-green);
  letter-spacing: 3px;
  cursor: pointer;
  box-shadow: 
    0 0 15px var(--matrix-glow),
    inset 0 0 15px rgba(0, 255, 0, 0.1);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-shadow: 0 0 8px var(--matrix-green);
  outline: none;
  display: inline-block;
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(5px);
  
  &::before {
    content: '> ';
    color: var(--matrix-green);
    font-weight: bold;
    position: absolute;
    left: 10px;
    top: 50%;
    transform: translateY(-50%);
    z-index: var(--z-canvas);
  }
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(0, 255, 0, 0.2), transparent);
    transition: left 0.5s ease;
  }

  &:hover,
  &:focus {
    background: linear-gradient(135deg, var(--matrix-green), rgba(0, 200, 0, 0.8));
    color: black;
    box-shadow:
      0 0 25px var(--matrix-green),
      0 0 50px var(--matrix-glow),
      inset 0 0 25px rgba(255, 255, 255, 0.2);
    border-color: var(--matrix-white);
    transform: scale(1.05) translateY(-2px);
    
    &::after {
      left: 100%;
    }
  }

  &:active {
    transform: scale(0.98) translateY(0);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    border-color: var(--matrix-red);
    color: var(--matrix-red);
    background: rgba(0, 0, 0, 0.5);
    
    &:hover,
    &:focus {
      background: rgba(0, 0, 0, 0.5);
      box-shadow: 0 0 15px rgba(255, 0, 0, 0.3);
      transform: none;
    }
  }
}

/* Fade In/Out Animation for Feedback Containers */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

/* Ensure full screen coverage on all devices */
@media screen {
  dialog.matrix-container,
  .matrix-container {
    width: 100vw;
    height: 100vh;
    max-width: 100vw;
    max-height: 100vh;
    min-width: 100vw;
    min-height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    inset: 0;
  }
  
  .matrix-canvas {
    width: 100vw;
    height: 100vh;
  }
}

/* Tablet Styles - aligned with JavaScript breakpoints */
@media (max-width: 1024px) {
  .matrix-hint-bubble {
    top: 1.5rem;
    right: 1.5rem;
    min-width: 220px;
    transform: scale(0.9);

    &.level-1 {
      transform: scale(0.95);
    }

    &.level-2 {
      transform: scale(1.05);
    }
  }

  .password-form {
    padding: 1.5rem;
    width: 90vw;
    max-width: 400px;
  }

  .password-input {
    width: 100%;
    font-size: 1.1rem;
    padding: 0.9rem 1.3rem;
  }

  .password-submit-btn {
    padding: 0.9rem 1.8rem;
    font-size: 1.1rem;
  }
}

/* Mobile Styles - aligned with JavaScript breakpoints */
@media (max-width: 768px) {
  dialog.matrix-container,
  .matrix-container {
    width: 100vw;
    height: 100vh;
    max-width: 100vw;
    max-height: 100vh;
  }
  
  .matrix-canvas {
    width: 100vw;
    height: 100vh;
  }

  .matrix-hint-bubble {
    top: 1rem;
    right: 1rem;
    min-width: 200px;
    transform: scale(0.8);

    &.level-1 {
      transform: scale(0.85);
    }

    &.level-2 {
      transform: scale(0.9);
    }
  }

  .keyboard-hints {
    top: 1rem;
    left: 1rem;
    font-size: 0.7rem;
    
    span {
      padding: 0.2rem 0.4rem;
    }
  }

  .rate-limit-message {
    margin: 0 1rem;
    padding: 1rem 1.5rem;
    font-size: 1rem;
  }

  .password-form {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    width: 95vw;
    max-width: 350px;
    margin: 0 auto;
    gap: 1rem;
    padding: 1.5rem;
  }
  
  .password-input,
  .password-submit-btn {
    width: 100%;
    min-width: 0;
    box-sizing: border-box;
    font-size: 1.1rem;
    padding: 1rem 1.2rem;
  }
  
  .password-submit-btn {
    margin-left: 0;
  }

  .matrix-close-btn {
    top: 1rem;
    right: 1rem;
    padding: 0.5rem 1rem;
    font-size: 1rem;
  }
}

/* Small Mobile Styles */
@media (max-width: 480px) {
  .matrix-hint-bubble {
    top: 0.5rem;
    right: 0.5rem;
    min-width: 180px;
    transform: scale(0.7);

    &.level-1 {
      transform: scale(0.75);
    }

    &.level-2 {
      transform: scale(0.8);
    }
  }

  .keyboard-hints {
    top: 0.5rem;
    left: 0.5rem;
    font-size: 0.6rem;
    
    span {
      padding: 0.15rem 0.3rem;
    }
  }

  .password-form {
    width: 98vw;
    max-width: 320px;
    padding: 1rem;
    gap: 0.8rem;
  }

  .password-input,
  .password-submit-btn {
    font-size: 1rem;
    padding: 0.8rem 1rem;
  }

  .matrix-close-btn {
    top: 0.5rem;
    right: 0.5rem;
    padding: 0.4rem 0.8rem;
    font-size: 0.9rem;
  }
}

/* Advanced Glitch Effects */
.matrix-container.glitch {
  animation: glitchContainer 0.3s ease-in-out;
}

@keyframes glitchContainer {
  0% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
  10% {
    transform: translate(-2px, 2px);
    filter: hue-rotate(90deg);
  }
  20% {
    transform: translate(2px, -2px);
    filter: hue-rotate(180deg);
  }
  30% {
    transform: translate(-2px, -2px);
    filter: hue-rotate(270deg);
  }
  40% {
    transform: translate(2px, 2px);
    filter: hue-rotate(360deg);
  }
  50% {
    transform: translate(-1px, 1px);
    filter: hue-rotate(45deg);
  }
  60% {
    transform: translate(1px, -1px);
    filter: hue-rotate(135deg);
  }
  70% {
    transform: translate(-1px, -1px);
    filter: hue-rotate(225deg);
  }
  80% {
    transform: translate(1px, 1px);
    filter: hue-rotate(315deg);
  }
  90% {
    transform: translate(-0.5px, 0.5px);
    filter: hue-rotate(0deg);
  }
  100% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
}

/* Holographic Effects */
.holographic {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      45deg,
      transparent 30%,
      rgba(0, 255, 255, 0.1) 50%,
      transparent 70%
    );
    animation: holographicSweep 3s ease-in-out infinite;
    pointer-events: none;
  }
}

@keyframes holographicSweep {
  0% {
    transform: translateX(-100%) translateY(-100%) rotate(45deg);
  }
  100% {
    transform: translateX(100%) translateY(100%) rotate(45deg);
  }
}

/* Digital Rain Enhancement */
.matrix-canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: var(--z-canvas);
  pointer-events: none;
  filter: contrast(1.4) brightness(1.2) saturate(1.3);
  animation: matrixScreenFlicker 0.1s infinite linear;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(0, 255, 0, 0.05) 2px,
        rgba(0, 255, 0, 0.05) 4px
      );
    pointer-events: none;
    animation: scanlines 0.1s linear infinite;
  }
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      repeating-linear-gradient(
        90deg,
        transparent,
        transparent 1px,
        rgba(0, 255, 0, 0.02) 1px,
        rgba(0, 255, 0, 0.02) 2px
      );
    pointer-events: none;
    animation: verticalScanlines 0.15s linear infinite;
  }
}

@keyframes scanlines {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(4px);
  }
}

@keyframes verticalScanlines {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(2px);
  }
}

@keyframes matrixScreenFlicker {
  0%, 100% {
    opacity: 1;
    filter: contrast(1.4) brightness(1.2) saturate(1.3);
  }
  1% {
    opacity: 0.98;
    filter: contrast(1.5) brightness(1.3) saturate(1.4);
  }
  2% {
    opacity: 0.99;
    filter: contrast(1.3) brightness(1.1) saturate(1.2);
  }
  3% {
    opacity: 1;
    filter: contrast(1.4) brightness(1.25) saturate(1.35);
  }
  4% {
    opacity: 0.97;
    filter: contrast(1.2) brightness(1.15) saturate(1.25);
  }
  5% {
    opacity: 1;
    filter: contrast(1.4) brightness(1.2) saturate(1.3);
  }
}

@keyframes matrixScreenDistortion {
  0%, 100% {
    transform: scale(1) rotate(0deg);
    filter: contrast(1.5) brightness(1.2) saturate(1.4) hue-rotate(0deg);
  }
  25% {
    transform: scale(1.001) rotate(0.1deg);
    filter: contrast(1.6) brightness(1.3) saturate(1.5) hue-rotate(5deg);
  }
  50% {
    transform: scale(1.002) rotate(0deg);
    filter: contrast(1.4) brightness(1.1) saturate(1.3) hue-rotate(-3deg);
  }
  75% {
    transform: scale(1.001) rotate(-0.1deg);
    filter: contrast(1.7) brightness(1.4) saturate(1.6) hue-rotate(8deg);
  }
}

@keyframes matrixAmbientPulse {
  0% {
    opacity: 0.3;
    transform: scale(1) rotate(0deg);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.02) rotate(180deg);
  }
  100% {
    opacity: 0.4;
    transform: scale(1) rotate(360deg);
  }
}

@keyframes matrixScanlines {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(4px);
  }
}

/* Enhanced Success Animation - consolidated with main success-message */

@keyframes successRipple {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .matrix-container {
    --matrix-green: rgba(0, 255, 0, 1);
    --matrix-white: rgba(255, 255, 255, 1);
    --matrix-red: rgba(255, 0, 0, 1);
    --matrix-yellow: rgba(255, 255, 0, 1);
  }
}

/* Terminal-style overlay effects */
.matrix-container::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 25% 25%, rgba(0, 255, 0, 0.02) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, rgba(0, 255, 0, 0.02) 0%, transparent 50%),
    radial-gradient(circle at 50% 50%, rgba(0, 255, 0, 0.01) 0%, transparent 50%);
  pointer-events: none;
  z-index: var(--z-modal);
  animation: terminalAmbient 4s ease-in-out infinite alternate;
}

@keyframes terminalAmbient {
  0% {
    opacity: 0.3;
    transform: scale(1) rotate(0deg);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.02) rotate(180deg);
  }
  100% {
    opacity: 0.4;
    transform: scale(1) rotate(360deg);
  }
}

/* Terminal-style corner decorations */
.matrix-container::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    linear-gradient(45deg, transparent 48%, rgba(0, 255, 0, 0.1) 49%, rgba(0, 255, 0, 0.1) 51%, transparent 52%),
    linear-gradient(-45deg, transparent 48%, rgba(0, 255, 0, 0.1) 49%, rgba(0, 255, 0, 0.1) 51%, transparent 52%);
  background-size: 100px 100px;
  pointer-events: none;
  z-index: var(--z-modal);
  animation: terminalGrid 8s linear infinite;
}

@keyframes terminalGrid {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(100px, 100px);
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .matrix-container,
  .password-form,
  .rate-limit-message {
    animation: none;
  }
  
  .feedback-container.glitch-effect {
    animation: none;
  }
  
  .success-message {
    animation: fadeIn 0.5s ease-out forwards;
  }
  
  .matrix-container::after,
  .matrix-container::before {
    animation: none;
  }
}
