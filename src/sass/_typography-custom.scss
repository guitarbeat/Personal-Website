////////////////////////////////////
// CUSTOM TYPOGRAPHY STYLING
////////////////////////////////////

@use "variables" as *;
@use "mixins" as mix;
@use "sass:map";
@use "tokens" as tokens;
@use "./theme/theme-switch" as theme-vars;

// Typography Configuration
// -------------------------
$typography: (
  'headings': (
    'h1': (
      'size': 3rem,
      'transform': uppercase,
      'spacing': 3rem
    ),
    'h2': (
      'size': 1.6rem,
      'spacing': 0.5rem
    )
  ),
  'animations': (
    'timing': (
      'fast': 0.4s,
      'normal': 0.5s
    ),
    'easing': cubic-bezier(0.34, 1.56, 0.64, 1)
  ),
  'decorations': (
    'underline': (
      'height': 2px,
      'offset': -0.01rem
    ),
    'dot': (
      'size': 0.5rem,
      'offset': -1rem
    )
  )
);

// Base Custom Properties
// -------------------------
:root {
  --heading-transition-timing: #{map.get($typography, 'animations', 'timing', 'normal')};
  --heading-transition-easing: #{map.get($typography, 'animations', 'easing')};
  --heading-decoration-gradient: linear-gradient(
    90deg,
    var(--color-sage-light),
    var(--color-coral-light)
  );
}

// Heading Styles
// -------------------------
h1 {
  @include mix.heading('h1');

  position: relative;
  transition: transform map.get(tokens.$transitions, 'duration', 'normal') map.get(tokens.$transitions, 'timing', 'default');
  transform-origin: left center;
  will-change: transform;

  &:hover {
    transform: scale(1.01);
    
    &::after {
      transform: scaleX(1);
      opacity: 1;
    }
  }

  &::after {
    content: '';
    position: absolute;
    bottom: map.get($typography, 'decorations', 'underline', 'offset');
    left: 0;
    width: 100%;
    height: map.get($typography, 'decorations', 'underline', 'height');
    background: var(--heading-decoration-gradient);
    transform: scaleX(0);
    opacity: 0;
    transition: 
      transform map.get(tokens.$transitions, 'duration', 'normal') map.get(tokens.$transitions, 'timing', 'default'),
      opacity map.get(tokens.$transitions, 'duration', 'normal') map.get(tokens.$transitions, 'timing', 'default');
    transform-origin: left center;
    will-change: transform, opacity;
  }
}

h2 {
  @include mix.heading('h2');

  position: relative;
  transition: 
    transform map.get(tokens.$transitions, 'duration', 'fast') map.get(tokens.$transitions, 'timing', 'default'),
    color map.get(tokens.$transitions, 'duration', 'fast') map.get(tokens.$transitions, 'timing', 'default');
  transform-origin: left center;
  will-change: transform, color;

  &:hover {
    transform: scale(1.01);
    color: var(--color-sage-light);
    
    &::before {
      transform: scaleX(1);
      opacity: 0.8;
    }
  }
} 