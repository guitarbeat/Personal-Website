@use "sass:map";
@use "base";
@use "breakpoints" as bp;

// Responsive Breakpoint Mixin
@mixin respond($breakpoint) {
  @if map.has-key(bp.$breakpoints, $breakpoint) {
    @media only screen and (max-width: map.get(bp.$breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}. Available breakpoints are: #{map.keys(bp.$breakpoints)}";
  }
}

// Layout Mixins
@mixin container($max-width: 120rem) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 2rem;
  
  @include respond('tablet') {
    padding: 0 1.5rem;
  }
}

// Flexbox Mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-column($justify: flex-start, $align: stretch) {
  @include flex(column, $justify, $align);
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Position Mixins
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-top {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
}

// Typography Mixins
@mixin heading($size, $weight: bold, $line-height: 1.2) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
  
  &:hover {
    transform: scale(1.02);
    transition: transform 0.3s ease;
  }
}

// Animation Mixins
@mixin smooth-transition($properties...) {
  $transitions: ();
  @each $prop in $properties {
    $transitions: append(
      $transitions,
      $prop base.$transition-duration base.$transition-timing,
      comma
    );
  }
  transition: $transitions;
}

@mixin hover-scale($scale: 1.05) {
  transition: transform 0.3s ease;
  &:hover {
    transform: scale($scale);
  }
}

// Interactive Element Mixins
@mixin clickable {
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

@mixin focus-outline($color: var(--color-primary)) {
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

// Utility Mixins
@mixin hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}
