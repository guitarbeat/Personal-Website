// Shared styles for all tools
// Import this file in the main tools/styles/index.scss

@use '../../../../sass/mixins' as mix;
@use '../../../../sass/variables' as var;
@use '../../../../sass/breakpoints' as bp;

// Core Mixins
@mixin tool-container {
  width: 100%;
  max-width: var(--max-content-width, 1200px);
  margin: 0 auto;
  padding: var(--spacing-md, 2rem);

  @include mix.respond("mobile") {
    padding: var(--spacing-sm, 1rem);
  }
}

@mixin tool-content {
  @include mix.glass-effect;
  padding: var(--spacing-lg, 2.5rem);
  min-height: 400px;
  display: flex;
  flex-direction: column;
}

@mixin tool-header {
  text-align: center;
  margin-bottom: var(--spacing-lg, 2.5rem);
  
  h1 {
    font-size: var(--font-size-xl, 2.5rem);
    font-weight: var(--font-weight-bold, 700);
    color: var(--color-text);
    margin-bottom: var(--spacing-sm, 1rem);
  }
  
  p {
    font-size: var(--font-size-md, 1.1rem);
    color: var(--color-text-light);
    max-width: 600px;
    margin: 0 auto;
  }
}

// Enhanced button mixin
@mixin tool-button {
  padding: 0.5rem 1rem;
  @include mix.glass-morphism(var(--about-blur-amount), 0.1);
  border-radius: var(--about-border-radius);
  color: var(--color-text);
  @include mix.clickable;
  transition: 
    transform var.$transition-duration var.$transition-timing,
    border-color var.$transition-duration var.$transition-timing,
    box-shadow var.$transition-duration var.$transition-timing;
  will-change: transform;

  &:hover {
    transform: scale(var.$scale-hover-small);
    border-color: var(--color-sage);
    box-shadow: 0 4px 12px rgba(var(--color-sage-rgb), 0.15);
  }

  &:active {
    transform: scale(0.98);
  }

  @include mix.focus-outline(var(--color-sage));

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    &:hover {
      transform: none;
      border-color: var(--about-glass-border);
      box-shadow: none;
    }
  }
}

// Enhanced input mixin
@mixin tool-input {
  padding: 0.5rem;
  @include mix.glass-morphism(var(--about-blur-amount), 0.1);
  border-radius: var(--about-border-radius);
  color: var(--color-text);
  transition: 
    border-color var.$transition-duration var.$transition-timing,
    box-shadow var.$transition-duration var.$transition-timing;

  &:hover {
    border-color: var(--color-sage-light);
  }

  &:focus {
    outline: none;
    border-color: var(--color-sage);
    box-shadow: 0 0 0 2px rgba(var(--color-sage-rgb), 0.2);
  }

  &::placeholder {
    color: var(--color-text-light);
  }
}

// Enhanced glass container mixin
@mixin glass-container {
  @include mix.glass-morphism(var(--about-blur-amount), 0.1);
  border-radius: var(--about-border-radius);
  transition: 
    transform var.$transition-duration var.$transition-timing,
    border-color var.$transition-duration var.$transition-timing,
    box-shadow var.$transition-duration var.$transition-timing;
  will-change: transform;

  &:hover {
    border-color: var(--color-sage);
    box-shadow: var(--about-glass-shadow),
                0 8px 32px rgba(var(--color-sage-rgb), 0.15);
  }

  &:focus-within {
    border-color: var(--color-sage);
    box-shadow: var(--about-glass-shadow),
                0 0 0 2px rgba(var(--color-sage-rgb), 0.2);
  }
}

// Layout Mixins
@mixin responsive-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: var(--spacing-md, 2rem);
  
  @include mix.respond("mobile") {
    gap: var(--spacing-sm, 1rem);
  }
}

// State Mixins
@mixin loading-state {
  opacity: 0.7;
  pointer-events: none;
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(4px);
  }
}

@mixin error-state {
  border-color: var(--color-error, #ff6b6b);
  background: var(--color-error-bg, rgba(255, 107, 107, 0.1));
}

// Fullscreen Mixins
@mixin fullscreen-tool {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  background: var(--color-grey-dark-1);
  position: relative;
}

@mixin fullscreen-content {
  flex: 1;
  margin: var(--about-border-radius);
  overflow: auto;
  @include mix.glass-morphism(var(--about-blur-amount), 0.1);
  border-radius: var(--about-border-radius);
  transition: 
    transform var.$transition-duration var.$transition-timing,
    border-color var.$transition-duration var.$transition-timing;
  will-change: transform;
  
  &:hover {
    border-color: var(--color-sage);
  }
  
  @include mix.hide-scrollbar;
}

@mixin fullscreen-button {
  position: fixed;
  top: 1rem;
  right: 1rem;
  width: var(--fullscreen-toggle-size);
  height: var(--fullscreen-toggle-size);
  border-radius: 50%;
  @include mix.glass-morphism(var(--about-blur-amount), 0.1);
  color: var(--color-text);
  @include mix.clickable;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  z-index: 1000;
  transition: 
    transform var.$transition-duration var.$transition-timing,
    border-color var.$transition-duration var.$transition-timing;
  will-change: transform;

  &:hover {
    transform: scale(var.$scale-hover-small);
    border-color: var(--color-sage);
    
    svg {
      transform: scale(1.1);
    }
  }

  &:active {
    transform: scale(0.98);
  }

  @include mix.focus-outline(var(--color-sage));

  svg {
    transition: transform var.$transition-duration var.$transition-timing;
  }

  @include mix.respond("tablet") {
    top: 0.75rem;
    right: 0.75rem;
  }
}

// Animations
@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { 
    transform: translateY(20px);
    opacity: 0;
  }
  to { 
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Reduced Motion
@media (prefers-reduced-motion: reduce) {
  * {
    animation: none !important;
    transition: none !important;
  }
} 