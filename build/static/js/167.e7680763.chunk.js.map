{"version":3,"file":"static/js/167.e7680763.chunk.js","mappings":"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","sources":["components/Tools/snake/index.js","components/Tools/snake/snake.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './snake.css';\nimport './snake.js';\n\n// Initialize game namespace before component definition\nif (typeof window.g === 'undefined') {\n  window.g = {\n    m: Math,\n    states: {},\n    state: 'play',\n    config: {\n      title: 'Snakely',\n      debug: false,\n      state: 'play'\n    },\n    addState(state) {\n      this.states[state.name] = state;\n    },\n    setState(name) {\n      if (this.state && this.states[this.state]) {\n        this.states[this.state].exit();\n      }\n      this.state = name;\n      if (this.states[this.state]) {\n        this.states[this.state].init();\n      }\n    }\n  };\n}\n\nconst SnakeGame = () => {\n  const gameContainerRef = useRef(null);\n\n  useEffect(() => {\n    // Wait for DOM to be ready\n    const initGame = () => {\n      if (gameContainerRef.current) {\n        try {\n          window.initSnakeGame();\n        } catch (error) {\n          console.error('Failed to initialize snake game:', error);\n        }\n      }\n    };\n\n    // Small delay to ensure DOM elements are ready\n    const timeoutId = setTimeout(initGame, 100);\n\n    // Cleanup function\n    return () => {\n      clearTimeout(timeoutId);\n      if (window.g && window.g.states && window.g.state && window.g.states[window.g.state]) {\n        try {\n          window.g.states[window.g.state].exit();\n        } catch (error) {\n          console.error('Error cleaning up snake game:', error);\n        }\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"snake-game\" ref={gameContainerRef}>\n      <div className=\"score\">0</div>\n      <div className=\"stage\"></div>\n    </div>\n  );\n};\n\nexport default SnakeGame;\n","// Initialize game namespace\nconst g = window.g = {\n  m: Math,\n  mathProps: 'E LN10 LN2 LOG2E LOG10E PI SQRT1_2 SQRT2 abs acos asin atan ceil cos exp floor log round sin sqrt tan atan2 pow max min'.split(' '),\n  states: {},\n  state: 'play',\n  config: {\n    title: 'Snakely',\n    debug: window.location.hash === '#debug',\n    state: 'play'\n  },\n  rand() {\n    return Math.random();\n  },\n  floor(n) {\n    return Math.floor(n);\n  },\n  sin(n) {\n    return Math.sin(n);\n  },\n  max(a, b) {\n    return Math.max(a, b);\n  },\n  min(a, b) {\n    return Math.min(a, b);\n  }\n};\n\n// Copy math properties to g\nfor (let i = 0; i < g.mathProps.length; i++) {\n  g[g.mathProps[i]] = g.m[g.mathProps[i]];\n}\ng.m.TWO_PI = g.m.PI * 2;\n\n// Game configuration and utilities\nclass GameConfig {\n  static TITLE = g.config.title;\n  static DEBUG = g.config.debug;\n  static INITIAL_STATE = g.config.state;\n  static DIMENSIONS = {\n    LONG: 28,\n    SHORT: 16,\n    PADDING: 0.25\n  };\n}\n\nclass Utils {\n  static rand(min, max) {\n    return g.rand() * (max - min) + min;\n  }\n\n  static randInt(min, max) {\n    return g.floor(g.rand() * (max - min + 1)) + min;\n  }\n}\n\n// Time management\nclass Time {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.now = g.floor(g.m.now());\n    this.last = g.floor(g.m.now());\n    this.delta = 60;\n    this.ndelta = 1;\n    this.elapsed = 0;\n    this.nelapsed = 0;\n    this.tick = 0;\n  }\n\n  update() {\n    this.now = g.floor(g.m.now());\n    this.delta = this.now - this.last;\n    this.ndelta = g.min(g.max(this.delta / (1000 / 60), 0.0001), 10);\n    this.elapsed += this.delta;\n    this.nelapsed += this.ndelta;\n    this.last = this.now;\n    this.tick++;\n  }\n}\n\n// Grid system\nclass Grid {\n  constructor(cols, rows) {\n    this.cols = cols;\n    this.rows = rows;\n    this.tiles = Array(cols).fill().map(() => Array(rows).fill('empty'));\n  }\n\n  get(x, y) {\n    return this.tiles[x][y];\n  }\n\n  set(x, y, val) {\n    this.tiles[x][y] = val;\n  }\n}\n\n// Base tile class\nclass Tile {\n  constructor(config) {\n    this.parentState = config.parentState;\n    this.col = config.col;\n    this.row = config.row;\n    this.x = config.x;\n    this.y = config.y;\n    this.w = config.w;\n    this.h = config.h;\n    this.elem = document.createElement('div');\n    this.elem.style.position = 'absolute';\n    this.parentState.stageElem.appendChild(this.elem);\n  }\n\n  updateDimensions() {\n    this.x = this.col * this.parentState.tileWidth;\n    this.y = this.row * this.parentState.tileHeight;\n    this.w = this.parentState.tileWidth - this.parentState.spacing;\n    this.h = this.parentState.tileHeight - this.parentState.spacing;\n  }\n\n  render() {\n    this.elem.style.left = `${this.x}px`;\n    this.elem.style.top = `${this.y}px`;\n    this.elem.style.width = `${this.w}px`;\n    this.elem.style.height = `${this.h}px`;\n  }\n}\n\n// Board tile\nclass BoardTile extends Tile {\n  constructor(config) {\n    super(config);\n    this.elem.className = 'tile';\n    this.classes = {\n      pressed: 0,\n      path: 0,\n      up: 0,\n      down: 0,\n      left: 0,\n      right: 0\n    };\n  }\n\n  update() {\n    Object.keys(this.classes).forEach(key => {\n      if (this.classes[key]) this.classes[key]--;\n    });\n\n    const food = this.parentState.food.tile;\n    if (food.col === this.col || food.row === this.row) {\n      this.updatePathHighlight(food);\n    } else {\n      this.classes.path = 0;\n    }\n\n    if (this.parentState.food.eaten) {\n      this.classes.path = 0;\n    }\n  }\n\n  updatePathHighlight(food) {\n    this.classes.path = 1;\n    this.classes.right = this.col < food.col ? 1 : 0;\n    this.classes.left = this.col > food.col ? 1 : 0;\n    this.classes.up = this.row > food.row ? 1 : 0;\n    this.classes.down = this.row < food.row ? 1 : 0;\n  }\n\n  render() {\n    const classString = Object.entries(this.classes)\n      .filter(([_, value]) => value)\n      .map(([key]) => key)\n      .join(' ');\n    this.elem.className = `tile ${classString}`;\n  }\n}\n\n// Snake tile\nclass SnakeTile extends Tile {\n  constructor(config) {\n    super(config);\n    this.color = null;\n    this.scale = 1;\n    this.rotation = 0;\n    this.blur = 0;\n    this.alpha = 1;\n    this.borderRadius = 0;\n    this.borderRadiusAmount = 0;\n  }\n\n  update(i) {\n    this.x = this.col * this.parentState.tileWidth;\n    this.y = this.row * this.parentState.tileHeight;\n    if (i === 0) {\n      this.color = '#fff';\n      this.blur = this.parentState.dimAvg * 0.03 + g.sin(this.parentState.time.elapsed / 200) * this.parentState.dimAvg * 0.015;\n      if (this.parentState.snake.dir === 'n') {\n        this.borderRadius = `${this.borderRadiusAmount}% ${this.borderRadiusAmount}% 0 0`;\n      } else if (this.parentState.snake.dir === 's') {\n        this.borderRadius = `0 0 ${this.borderRadiusAmount}% ${this.borderRadiusAmount}%`;\n      } else if (this.parentState.snake.dir === 'e') {\n        this.borderRadius = `0 ${this.borderRadiusAmount}% ${this.borderRadiusAmount}% 0`;\n      } else if (this.parentState.snake.dir === 'w') {\n        this.borderRadius = `${this.borderRadiusAmount}% 0 0 ${this.borderRadiusAmount}%`;\n      }\n    } else {\n      this.color = '#fff';\n      this.blur = 0;\n      this.borderRadius = '0';\n    }\n    this.alpha = 1 - (i / this.parentState.snake.tiles.length) * 0.6;\n    this.rotation = (this.parentState.snake.justAteTick / this.parentState.snake.justAteTickMax) * 90;\n    this.scale = 1 + (this.parentState.snake.justAteTick / this.parentState.snake.justAteTickMax) * 1;\n  }\n\n  render(i) {\n    this.elem.style.left = `${this.x}px`;\n    this.elem.style.top = `${this.y}px`;\n    this.elem.style.width = `${this.w}px`;\n    this.elem.style.height = `${this.h}px`;\n    this.elem.style.backgroundColor = `rgba(255, 255, 255, ${this.alpha})`;\n    this.elem.style.boxShadow = `0 0 ${this.blur}px #fff`;\n    this.elem.style.borderRadius = this.borderRadius;\n  }\n}\n\n// Food tile\nclass FoodTile extends Tile {\n  constructor(config) {\n    super(config);\n    this.blur = 0;\n    this.scale = 1;\n    this.hue = 100;\n    this.opacity = 0;\n  }\n\n  update() {\n    this.x = this.col * this.parentState.tileWidth;\n    this.y = this.row * this.parentState.tileHeight;\n    this.blur = this.parentState.dimAvg * 0.03 + g.sin(this.parentState.time.elapsed / 200) * this.parentState.dimAvg * 0.015;\n    this.scale = 0.8 + g.sin(this.parentState.time.elapsed / 200) * 0.2;\n\n    if (this.parentState.food.birthTick || this.parentState.food.deathTick) {\n      if (this.parentState.food.birthTick) {\n        this.opacity = 1 - (this.parentState.food.birthTick / 1) * 1;\n      } else {\n        this.opacity = (this.parentState.food.deathTick / 1) * 1;\n      }\n    } else {\n      this.opacity = 1;\n    }\n  }\n\n  render() {\n    this.elem.style.left = `${this.x}px`;\n    this.elem.style.top = `${this.y}px`;\n    this.elem.style.width = `${this.w}px`;\n    this.elem.style.height = `${this.h}px`;\n    this.elem.style.transform = `translateZ(0) scale(${this.scale})`;\n    this.elem.style.backgroundColor = `hsla(${this.hue}, 100%, 60%, 1)`;\n    this.elem.style.boxShadow = `0 0 ${this.blur}px hsla(${this.hue}, 100%, 60%, 1)`;\n    this.elem.style.opacity = this.opacity;\n  }\n}\n\n// Snake\nclass Snake {\n  constructor(config) {\n    this.parentState = config.parentState;\n    this.dir = 'e';\n    this.currDir = this.dir;\n    this.tiles = [];\n    for (let i = 0; i < 5; i++) {\n      this.tiles.push(new SnakeTile({\n        parentState: this.parentState,\n        col: 8 - i,\n        row: 3,\n        x: (8 - i) * this.parentState.tileWidth,\n        y: 3 * this.parentState.tileHeight,\n        w: this.parentState.tileWidth - this.parentState.spacing,\n        h: this.parentState.tileHeight - this.parentState.spacing\n      }));\n    }\n    this.last = 0;\n    this.updateTick = 10;\n    this.updateTickMax = this.updateTick;\n    this.updateTickLimit = 3;\n    this.updateTickChange = 0.2;\n    this.deathFlag = 0;\n    this.justAteTick = 0;\n    this.justAteTickMax = 1;\n    this.justAteTickChange = 0.05;\n\n    // sync data grid of the play state\n    let i = this.tiles.length;\n    while (i--) {\n      this.parentState.grid.set(this.tiles[i].col, this.tiles[i].row, 'snake');\n    }\n  }\n\n  updateDimensions() {\n    let i = this.tiles.length;\n    while (i--) {\n      this.tiles[i].updateDimensions();\n    }\n  }\n\n  update() {\n    if (this.parentState.keys.up) {\n      if (this.dir !== 's' && this.dir !== 'n' && this.currDir !== 's' && this.currDir !== 'n') {\n        this.dir = 'n';\n      }\n    } else if (this.parentState.keys.down) {\n      if (this.dir !== 'n' && this.dir !== 's' && this.currDir !== 'n' && this.currDir !== 's') {\n        this.dir = 's';\n      }\n    } else if (this.parentState.keys.right) {\n      if (this.dir !== 'w' && this.dir !== 'e' && this.currDir !== 'w' && this.currDir !== 'e') {\n        this.dir = 'e';\n      }\n    } else if (this.parentState.keys.left) {\n      if (this.dir !== 'e' && this.dir !== 'w' && this.currDir !== 'e' && this.currDir !== 'w') {\n        this.dir = 'w';\n      }\n    }\n\n    this.parentState.keys.up = 0;\n    this.parentState.keys.down = 0;\n    this.parentState.keys.right = 0;\n    this.parentState.keys.left = 0;\n\n    this.updateTick += this.parentState.time.ndelta;\n    if (this.updateTick >= this.updateTickMax) {\n      // reset the update timer to 0, or whatever leftover there is\n      this.updateTick = (this.updateTick - this.updateTickMax);\n\n      // rotate snake block array\n      this.tiles.unshift(new SnakeTile({\n        parentState: this.parentState,\n        col: this.tiles[0].col,\n        row: this.tiles[0].row,\n        x: this.tiles[0].col * this.parentState.tileWidth,\n        y: this.tiles[0].row * this.parentState.tileHeight,\n        w: this.parentState.tileWidth - this.parentState.spacing,\n        h: this.parentState.tileHeight - this.parentState.spacing\n      }));\n      this.last = this.tiles.pop();\n      this.parentState.stageElem.removeChild(this.last.elem);\n\n      this.parentState.boardTiles.collection[this.last.col + (this.last.row * this.parentState.cols)].classes.pressed = 2;\n\n      // sync data grid of the play state\n      let i = this.tiles.length;\n      while (i--) {\n        this.parentState.grid.set(this.tiles[i].col, this.tiles[i].row, 'snake');\n      }\n      this.parentState.grid.set(this.last.col, this.last.row, 'empty');\n\n      // move the snake's head\n      if (this.dir === 'n') {\n        this.currDir = 'n';\n        this.tiles[0].row -= 1;\n      } else if (this.dir === 's') {\n        this.currDir = 's';\n        this.tiles[0].row += 1;\n      } else if (this.dir === 'w') {\n        this.currDir = 'w';\n        this.tiles[0].col -= 1;\n      } else if (this.dir === 'e') {\n        this.currDir = 'e';\n        this.tiles[0].col += 1;\n      }\n\n      // wrap walls\n      this.wallFlag = false;\n      if (this.tiles[0].col >= this.parentState.cols) {\n        this.tiles[0].col = 0;\n        this.wallFlag = true;\n      }\n      if (this.tiles[0].col < 0) {\n        this.tiles[0].col = this.parentState.cols - 1;\n        this.wallFlag = true;\n      }\n      if (this.tiles[0].row >= this.parentState.rows) {\n        this.tiles[0].row = 0;\n        this.wallFlag = true;\n      }\n      if (this.tiles[0].row < 0) {\n        this.tiles[0].row = this.parentState.rows - 1;\n        this.wallFlag = true;\n      }\n\n      // check death by eating self\n      if (this.parentState.grid.get(this.tiles[0].col, this.tiles[0].row) === 'snake') {\n        this.deathFlag = 1;\n        clearTimeout(this.foodCreateTimeout);\n      }\n\n      // check eating of food\n      if (this.parentState.grid.get(this.tiles[0].col, this.tiles[0].row) === 'food') {\n        this.tiles.push(new SnakeTile({\n          parentState: this.parentState,\n          col: this.last.col,\n          row: this.last.row,\n          x: this.last.col * this.parentState.tileWidth,\n          y: this.last.row * this.parentState.tileHeight,\n          w: this.parentState.tileWidth - this.parentState.spacing,\n          h: this.parentState.tileHeight - this.parentState.spacing\n        }));\n        if (this.updateTickMax - this.updateTickChange > this.updateTickLimit) {\n          this.updateTickMax -= this.updateTickChange;\n        }\n        this.parentState.score++;\n        this.parentState.scoreElem.innerHTML = this.parentState.score;\n        this.justAteTick = this.justAteTickMax;\n\n        this.parentState.food.eaten = 1;\n        this.parentState.stageElem.removeChild(this.parentState.food.tile.elem);\n\n        const _this = this;\n        this.foodCreateTimeout = setTimeout(function () {\n          _this.parentState.food = new Food({\n            parentState: _this.parentState\n          });\n        }, 300);\n      }\n\n      // check death by eating self\n      if (this.deathFlag) {\n        this.parentState.setState('play');\n      }\n    }\n\n    // update individual snake tiles\n    let i = this.tiles.length;\n    while (i--) {\n      this.tiles[i].update(i);\n    }\n\n    if (this.justAteTick > 0) {\n      this.justAteTick -= this.justAteTickChange;\n    } else if (this.justAteTick < 0) {\n      this.justAteTick = 0;\n    }\n  }\n\n  render() {\n    // render individual snake tiles\n    let i = this.tiles.length;\n    while (i--) {\n      this.tiles[i].render(i);\n    }\n  }\n}\n\n// Food\nclass Food {\n  constructor(config) {\n    this.parentState = config.parentState;\n    this.tile = new FoodTile({\n      parentState: this.parentState,\n      col: 0,\n      row: 0,\n      x: 0,\n      y: 0,\n      w: this.parentState.tileWidth - this.parentState.spacing,\n      h: this.parentState.tileHeight - this.parentState.spacing\n    });\n    this.reset();\n    this.eaten = 0;\n    this.birthTick = 1;\n    this.deathTick = 0;\n    this.birthTickChange = 0.025;\n    this.deathTickChange = 0.05;\n  }\n\n  reset() {\n    const empty = [];\n    for (let x = 0; x < this.parentState.cols; x++) {\n      for (let y = 0; y < this.parentState.rows; y++) {\n        const tile = this.parentState.grid.get(x, y);\n        if (tile === 'empty') {\n          empty.push({ x, y });\n        }\n      }\n    }\n    const newTile = empty[Utils.randInt(0, empty.length - 1)];\n    this.tile.col = newTile.x;\n    this.tile.row = newTile.y;\n  }\n\n  updateDimensions() {\n    this.tile.updateDimensions();\n  }\n\n  update() {\n    // update food tile\n    this.tile.update();\n\n    if (this.birthTick > 0) {\n      this.birthTick -= this.birthTickChange;\n    } else if (this.birthTick < 0) {\n      this.birthTick = 0;\n    }\n\n    // sync data grid of the play state\n    this.parentState.grid.set(this.tile.col, this.tile.row, 'food');\n  }\n\n  render() {\n    this.tile.render();\n  }\n}\n\n// Play state\nclass PlayState {\n  constructor() {\n    this.name = 'play';\n    this.isGameOver = false;\n    this.isPaused = false;\n    this.boundKeydown = null;\n    this.boundResize = null;\n  }\n\n  init() {\n    try {\n      this.scoreElem = document.querySelector('.score');\n      this.stageElem = document.querySelector('.stage');\n      \n      if (!this.scoreElem || !this.stageElem) {\n        console.error('Required DOM elements not found');\n        return;\n      }\n\n      this.dimLong = GameConfig.DIMENSIONS.LONG;\n      this.dimShort = GameConfig.DIMENSIONS.SHORT;\n      this.padding = GameConfig.DIMENSIONS.PADDING;\n      this.boardTiles = new Group();\n      this.keys = {};\n      this.foodCreateTimeout = null;\n      this.score = 0;\n      this.scoreElem.innerHTML = this.score;\n      this.time = new Time();\n      this.getDimensions();\n      \n      if (this.winWidth < this.winHeight) {\n        this.rows = this.dimLong;\n        this.cols = this.dimShort;\n      } else {\n        this.rows = this.dimShort;\n        this.cols = this.dimLong;\n      }\n      \n      this.spacing = 1;\n      this.grid = new Grid(this.cols, this.rows);\n      this.resize();\n      this.createBoardTiles();\n      this.bindEvents();\n      \n      this.snake = new Snake({\n        parentState: this\n      });\n      \n      this.food = new Food({\n        parentState: this\n      });\n\n      this.isGameOver = false;\n      this.isPaused = false;\n    } catch (error) {\n      console.error('Error initializing game:', error);\n    }\n  }\n\n  bindEvents() {\n    this.boundKeydown = this.keydown.bind(this);\n    this.boundResize = this.resize.bind(this);\n    window.addEventListener('keydown', this.boundKeydown, false);\n    window.addEventListener('resize', this.boundResize, false);\n  }\n\n  keydown(e) {\n    if (this.isGameOver || this.isPaused) {\n      if (e.keyCode === 32 || e.which === 32) { // Space bar\n        this.resetGame();\n      }\n      return;\n    }\n\n    e.preventDefault();\n    const key = e.keyCode || e.which;\n    \n    switch(key) {\n      case 38: case 87: this.upOn(); break;    // Up or W\n      case 39: case 68: this.rightOn(); break; // Right or D\n      case 40: case 83: this.downOn(); break;  // Down or S\n      case 37: case 65: this.leftOn(); break;  // Left or A\n      case 80: this.togglePause(); break;      // P for pause\n      default: break;                          // Ignore other keys\n    }\n  }\n\n  togglePause() {\n    this.isPaused = !this.isPaused;\n  }\n\n  resetGame() {\n    this.isGameOver = false;\n    this.isPaused = false;\n    this.score = 0;\n    this.scoreElem.innerHTML = this.score;\n    \n    // Reset snake\n    if (this.snake) {\n      this.snake = new Snake({\n        parentState: this\n      });\n    }\n    \n    // Reset food\n    if (this.food) {\n      this.food = new Food({\n        parentState: this\n      });\n    }\n  }\n\n  gameOver() {\n    this.isGameOver = true;\n    console.log('Game Over! Press Space to restart');\n  }\n\n  step() {\n    if (this.isGameOver || this.isPaused) {\n      return;\n    }\n\n    if (!this.boardTiles || !this.snake || !this.food || !this.time) {\n      return;\n    }\n    \n    try {\n      this.boardTiles.each('update');\n      this.boardTiles.each('render');\n      this.snake.update();\n      this.snake.render();\n      this.food.update();\n      this.food.render();\n      this.time.update();\n    } catch (error) {\n      console.error('Error in game step:', error);\n    }\n  }\n\n  exit() {\n    if (this.boundKeydown) {\n      window.removeEventListener('keydown', this.boundKeydown, false);\n    }\n    if (this.boundResize) {\n      window.removeEventListener('resize', this.boundResize, false);\n    }\n    if (this.stageElem) {\n      this.stageElem.innerHTML = '';\n    }\n    if (this.grid) {\n      this.grid.tiles = null;\n    }\n    this.time = null;\n    this.snake = null;\n    this.food = null;\n    this.boardTiles = null;\n  }\n\n  getDimensions() {\n    this.winWidth = window.innerWidth;\n    this.winHeight = window.innerHeight;\n    this.activeWidth = this.winWidth - (this.winWidth * this.padding);\n    this.activeHeight = this.winHeight - (this.winHeight * this.padding);\n  }\n\n  resize() {\n    const _this = this;\n\n    _this.getDimensions();\n\n    _this.stageRatio = _this.rows / _this.cols;\n\n    if (_this.activeWidth > _this.activeHeight / _this.stageRatio) {\n      _this.stageHeight = _this.activeHeight;\n      _this.stageElem.style.height = `${_this.stageHeight}px`;\n      _this.stageWidth = Math.floor(_this.stageHeight / _this.stageRatio);\n      _this.stageElem.style.width = `${_this.stageWidth}px`;\n    } else {\n      _this.stageWidth = _this.activeWidth;\n      _this.stageElem.style.width = `${_this.stageWidth}px`;\n      _this.stageHeight = Math.floor(_this.stageWidth * _this.stageRatio);\n      _this.stageElem.style.height = `${_this.stageHeight}px`;\n    }\n\n    _this.tileWidth = ~~(_this.stageWidth / _this.cols);\n    _this.tileHeight = ~~(_this.stageHeight / _this.rows);\n    _this.dimAvg = (_this.activeWidth + _this.activeHeight) / 2;\n    _this.spacing = Math.max(1, ~~(_this.dimAvg * 0.0025));\n\n    _this.stageElem.style.marginTop = `-${_this.stageElem.offsetHeight / 2}px`;\n\n    _this.boardTiles.each('updateDimensions');\n    _this.snake !== undefined && _this.snake.updateDimensions();\n    _this.food !== undefined && _this.food.updateDimensions();\n  }\n\n  createBoardTiles() {\n    for (let y = 0; y < this.rows; y++) {\n      for (let x = 0; x < this.cols; x++) {\n        this.boardTiles.add(new BoardTile({\n          parentState: this,\n          col: x,\n          row: y,\n          x: x * this.tileWidth,\n          y: y * this.tileHeight,\n          w: this.tileWidth - this.spacing,\n          h: this.tileHeight - this.spacing\n        }));\n      }\n    }\n  }\n\n  upOn() { this.keys.up = 1; }\n  downOn() { this.keys.down = 1; }\n  rightOn() { this.keys.right = 1; }\n  leftOn() { this.keys.left = 1; }\n  upOff() { this.keys.up = 0; }\n  downOff() { this.keys.down = 0; }\n  rightOff() { this.keys.right = 0; }\n  leftOff() { this.keys.left = 0; }\n}\n\n// Group class for managing collections\nclass Group {\n  constructor() {\n    this.collection = [];\n    this.length = 0;\n  }\n\n  add(item) {\n    if (!item) {\n      console.warn('Attempted to add null/undefined item to Group');\n      return;\n    }\n    this.collection.push(item);\n    this.length++;\n  }\n\n  remove(index) {\n    if (index < 0 || index >= this.length) {\n      console.warn('Invalid index for Group.remove:', index);\n      return;\n    }\n    this.collection.splice(index, 1);\n    this.length--;\n  }\n\n  empty() {\n    this.collection = [];\n    this.length = 0;\n  }\n\n  each(action, asc = false) {\n    if (!this.collection || this.length === 0) {\n      return;\n    }\n\n    if (typeof action !== 'string' && typeof action !== 'function') {\n      console.error('Action must be either a method name (string) or a function');\n      return;\n    }\n\n    const iterate = (item, index) => {\n      try {\n        if (typeof action === 'string') {\n          if (typeof item[action] === 'function') {\n            item[action](index);\n          } else {\n            console.warn(`Method ${action} not found on item at index ${index}`);\n          }\n        } else {\n          action(item, index);\n        }\n      } catch (error) {\n        console.error(`Error executing action on item at index ${index}:`, error);\n      }\n    };\n\n    if (asc) {\n      for (let i = 0; i < this.length; i++) {\n        iterate(this.collection[i], i);\n      }\n    } else {\n      for (let i = this.length - 1; i >= 0; i--) {\n        iterate(this.collection[i], i);\n      }\n    }\n  }\n}\n\n// Export game instance and state management\ng.addState = function(state) {\n  g.states[state.name] = state;\n};\n\ng.setState = function(name) {\n  if (g.state && g.states[g.state]) {\n    g.states[g.state].exit();\n  }\n  g.state = name;\n  g.states[g.state].init();\n};\n\ng.currentState = function() {\n  return g.states[g.state];\n};\n\n// Initialize game\ng.addState(new PlayState());\n\n// Start game loop\nfunction gameLoop() {\n  requestAnimationFrame(gameLoop);\n  if (g.state && g.states[g.state]) {\n    g.states[g.state].step();\n  }\n}\n\n// Export game initialization\nwindow.initSnakeGame = function() {\n  gameLoop();\n};"],"names":["window","g","m","Math","states","state","config","title","debug","addState","this","name","setState","exit","init","SnakeGame","gameContainerRef","useRef","useEffect","timeoutId","setTimeout","initGame","current","initSnakeGame","error","console","clearTimeout","_jsxs","className","ref","children","_jsx","mathProps","split","location","hash","rand","random","floor","n","sin","max","a","b","min","i","length","TWO_PI","PI","GameConfig","TITLE","DEBUG","INITIAL_STATE","DIMENSIONS","LONG","SHORT","PADDING","Utils","randInt","Time","constructor","reset","now","last","delta","ndelta","elapsed","nelapsed","tick","update","Grid","cols","rows","tiles","Array","fill","map","get","x","y","set","val","Tile","parentState","col","row","w","h","elem","document","createElement","style","position","stageElem","appendChild","updateDimensions","tileWidth","tileHeight","spacing","render","left","top","width","height","BoardTile","super","classes","pressed","path","up","down","right","Object","keys","forEach","key","food","tile","updatePathHighlight","eaten","classString","entries","filter","_ref","_","value","_ref2","join","SnakeTile","color","scale","rotation","blur","alpha","borderRadius","borderRadiusAmount","dimAvg","time","snake","dir","justAteTick","justAteTickMax","backgroundColor","boxShadow","FoodTile","hue","opacity","birthTick","deathTick","transform","Snake","currDir","push","updateTick","updateTickMax","updateTickLimit","updateTickChange","deathFlag","justAteTickChange","grid","unshift","pop","removeChild","boardTiles","collection","wallFlag","foodCreateTimeout","score","scoreElem","innerHTML","_this","Food","birthTickChange","deathTickChange","empty","newTile","Group","add","item","warn","remove","index","splice","each","action","asc","arguments","undefined","iterate","gameLoop","requestAnimationFrame","step","currentState","isGameOver","isPaused","boundKeydown","boundResize","querySelector","dimLong","dimShort","padding","getDimensions","winWidth","winHeight","resize","createBoardTiles","bindEvents","keydown","bind","addEventListener","e","keyCode","which","resetGame","preventDefault","upOn","rightOn","downOn","leftOn","togglePause","gameOver","log","removeEventListener","innerWidth","innerHeight","activeWidth","activeHeight","stageRatio","stageHeight","stageWidth","marginTop","offsetHeight","upOff","downOff","rightOff","leftOff"],"sourceRoot":""}