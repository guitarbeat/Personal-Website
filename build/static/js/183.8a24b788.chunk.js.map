{"version":3,"file":"static/js/183.8a24b788.chunk.js","mappings":"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","sources":["pages/adventure.js"],"sourcesContent":["// Import required libraries and components\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { withGoogleSheets } from \"react-db-google-sheets\";\nimport \"../pages/adventure.css\";\n\n\n// Function for TimelineBar component\nfunction TimelineBar({ first_year, event_bars, bar_height, bar_start }) {\n  let sub_bars = event_bars.map((bar) => (\n    <div\n      className=\"event__timeline__subbar\"\n      style={{ height: bar[0] + \"%\", bottom: bar[1] + \"%\" }}\n    />\n  ));\n\n  return (\n    <div className=\"event__timeline\">\n      <p className=\"event__timeline__now\">Now</p>\n      <p className=\"event__timeline__start\">{first_year}</p>\n      {sub_bars}\n      <div\n        className=\"event__timeline__bar\"\n        style={{ height: bar_height + \"%\", bottom: bar_start + \"%\" }}\n      />\n    </div>\n  );\n}\n\n// Function for Events component\nfunction Events({ db }) {\n  const [barHeight, setbarHeight] = useState(0);\n  const [barStart, setBarStart] = useState(0);\n  const [activeCard, setActiveCard] = useState(null);\n\n  // Convert the data from Google Sheets into the events format\n  let events = db[\"events\"].map((row) => ({\n    title: row.title,\n    place: row.place,\n    from: row.from,\n    to: row.to,\n    description: row.description,\n    slug: row.slug,\n  }));\n\n  let first_date = moment();\n\n  // Format and enhance events data\n  events.forEach((event) => {\n    let _to_moment = event.to ? moment(event.to, \"HH:mm\") : moment();\n    let _from_moment = moment(event.from, \"HH:mm\");\n    let _duration = _to_moment.diff(_from_moment, \"minutes\");\n    event[\"from\"] = _from_moment.format(\"HH:mm\");\n    event[\"to\"] = event.to ? _to_moment.format(\"HH:mm\") : \"Now\";\n    event[\"_from\"] = _from_moment;\n    event[\"_to\"] = _to_moment;\n    event[\"time\"] = _duration === 0 ? event.from : event.from + \" - \" + event.to;\n    event[\"duration\"] = _duration === 0 ? 1 : _duration;\n\n    if (first_date.diff(_from_moment) > 0) {\n      first_date = _from_moment;\n    }\n  });\n\n  // Calculate time span and bar metrics for events\n  let time_span = moment().diff(first_date, \"minutes\");\n  events.forEach((event) => {\n    event[\"bar_start\"] = (100 * event._from.diff(first_date, \"minutes\")) / time_span;\n    event[\"bar_height\"] = (100 * event.duration) / time_span;\n  });\n\n  let event_bars = events.map((event) => [event.bar_height, event.bar_start]);\n\n  // Handle bar height changes\n  function changebarHeight(event) {\n    setBarStart(\n      event.target.getAttribute(\"data-barstart\") ||\n        event.target.parentElement.getAttribute(\"data-barstart\")\n    );\n\n    setbarHeight(\n      event.target.getAttribute(\"data-barheight\") ||\n        event.target.parentElement.getAttribute(\"data-barheight\")\n    );\n  }\n\n  // Handle card click events\n  const handleCardClick = (slug) => {\n    setActiveCard(activeCard === slug ? null : slug);\n  };\n\n  // Render the Events component\n  return (\n    <div className=\"container\" id=\"events\">\n      <div className=\"container__content\">\n        <h1>Our itinerary</h1>\n        <div className=\"events\">\n          <TimelineBar\n            first_year={first_date.format(\"YYYY\")}\n            event_bars={event_bars}\n            bar_height={barHeight}\n            bar_start={barStart}\n          />\n          <div className=\"events__items\">\n            {events.map((event) => {\n              const isActive = activeCard === event.slug;\n\n              return (\n                <div\n                  className={`events__item ${isActive ? \"active\" : \"\"}`}\n                  key={event.slug}\n                  data-key={event.slug}\n                  onMouseEnter={changebarHeight}\n                  onTouchStart={changebarHeight}\n                  onClick={() => handleCardClick(event.slug)}\n                  data-barstart={event.bar_start}\n                  data-barheight={event.bar_height}\n                >\n                  <p\n                    className={`events__item__place ${\n                      isActive ? \"show-text\" : \"\"\n                    }`}\n                  >\n                    <i className=\"fa fa-map-marker-alt\" aria-hidden=\"true\" />{\" \"}\n                    {event.place}\n                  </p>\n                  <h2>{event.title}</h2>\n                  <p\n                    className={`events__item__time ${\n                      isActive ? \"show-text\" : \"\"\n                    }`}\n                  >\n                    {event.time}\n                  </p>\n                  <p className={isActive ? \"show-text\" : \"\"}>\n                    {event.description}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Export the Events component with Google Sheets data\nexport default withGoogleSheets(\"events\")(Events);\n"],"names":["TimelineBar","_ref","first_year","event_bars","bar_height","bar_start","sub_bars","map","bar","_jsx","className","style","height","bottom","_jsxs","children","withGoogleSheets","_ref2","db","_useState","useState","_useState2","_slicedToArray","barHeight","setbarHeight","_useState3","_useState4","barStart","setBarStart","_useState5","_useState6","activeCard","setActiveCard","events","row","title","place","from","to","description","slug","first_date","moment","forEach","event","_to_moment","_from_moment","_duration","diff","format","time_span","_from","duration","changebarHeight","target","getAttribute","parentElement","id","isActive","concat","onMouseEnter","onTouchStart","onClick","time"],"sourceRoot":""}