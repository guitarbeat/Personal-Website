@use "sass:map";
@use "sass:color";
@use "sass:math";
@use "base";
@use "breakpoints" as bp;

// ==========================================================================
// Grid System
// ==========================================================================
@mixin grid($columns: 12, $gap: 2rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin grid-column($span: 1, $start: auto) {
  grid-column: $start / span $span;
}

// ==========================================================================
// Media Queries
// ==========================================================================
@mixin respond($breakpoint) {
  @if map.has-key(bp.$breakpoints, $breakpoint) {
    @media only screen and (max-width: map.get(bp.$breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}. Available breakpoints are: #{map.keys(bp.$breakpoints)}";
  }
}

// ==========================================================================
// Layout
// ==========================================================================
@mixin container($max-width: 120rem) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 2rem;
  
  @include respond('tablet') {
    padding: 0 1.5rem;
  }
}

@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  &::before {
    content: '';
    display: block;
    padding-top: math.div($height, $width) * 100%;
  }
}

// ==========================================================================
// Flexbox
// ==========================================================================
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-column($justify: flex-start, $align: stretch) {
  @include flex(column, $justify, $align);
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// ==========================================================================
// Positioning
// ==========================================================================
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-top {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
}

@mixin overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// ==========================================================================
// Typography
// ==========================================================================
@mixin heading($size, $weight: bold, $line-height: 1.2) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
  color: var(--text-color);
  
  &:hover {
    transform: scale(1.02);
    transition: transform 0.3s ease;
  }
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

// ==========================================================================
// Animations
// ==========================================================================
@mixin smooth-transition($properties...) {
  $transitions: ();
  @each $prop in $properties {
    $transitions: append(
      $transitions,
      $prop base.$transition-duration base.$transition-timing,
      comma
    );
  }
  transition: $transitions;
}

@mixin hover-scale($scale: 1.05) {
  transition: transform 0.3s ease;
  &:hover {
    transform: scale($scale);
  }
}

@mixin fade-in($duration: 0.3s, $delay: 0s) {
  opacity: 0;
  animation: fadeIn $duration ease-in forwards;
  animation-delay: $delay;
}

// ==========================================================================
// Interactive Elements
// ==========================================================================
@mixin clickable {
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

@mixin focus-outline($color: var(--color-primary)) {
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

@mixin button-reset {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
}

// ==========================================================================
// Utilities
// ==========================================================================
@mixin hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

@mixin glass-effect($blur: 10px, $bg-opacity: 0.1) {
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  background-color: rgba(255, 255, 255, $bg-opacity);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

@mixin debug($color: red) {
  outline: 1px solid $color;
}
