@use '../../../sass/base';
@use 'sass:math';

// Variables
$section-width: var(--section-width);
$bezier: var(--bezier-curve);
$text-color: var(--text-color);
$primary-color: var(--color-primary);
$primary-dark: var(--color-primary-dark);
$grey-dark-1: var(--color-grey-dark-1);
$grey-dark-2: var(--color-grey-dark-2);
$grey-dark-3: var(--color-grey-dark-3);
$grey-dark-4: var(--color-grey-dark-4);
$slider-color: var(--slider-color);

// Common values
$border-radius-sm: 0.8rem;
$border-radius-md: 1rem;
$border-radius-lg: 1.5rem;
$spacing-sm: 1rem;
$spacing-md: 2rem;
$spacing-lg: 4rem;
$transition-duration: 0.4s;

// Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

@mixin fancy-text-shadow($size: 2px, $glow-size: 20px) {
  text-shadow: 
    #{$size} #{$size} 0 rgba(0, 0, 0, 0.5),
    #{-$size} #{-$size} 0 rgba(255, 255, 255, 0.2),
    0 0 #{$glow-size} rgba(255, 255, 255, 0.3);
}

@mixin glass-panel {
  background: rgba(0, 0, 0, 0.2);
  border-radius: $border-radius-md;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

@mixin smooth-transition {
  transition: all $transition-duration $bezier;
}

@mixin hover-scale($scale: 1.05) {
  &:hover {
    transform: scale($scale);
  }
}

@mixin responsive-font($min, $max, $min-vw: 320px, $max-vw: 1200px) {
  font-size: clamp(#{$min}, calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})), #{$max});
}

@mixin gradient-background($start-color, $end-color, $angle: 145deg) {
  background: linear-gradient($angle, $start-color, $end-color);
}

@mixin box-shadow-hover {
  box-shadow: 
    0 5px 15px rgba(0, 0, 0, 0.2),
    inset 0 0 15px rgba(255, 255, 255, 0.05);
  
  &:hover {
    box-shadow: 
      0 8px 20px rgba(0, 0, 0, 0.3),
      inset 0 0 20px rgba(255, 255, 255, 0.1);
  }
}

// Animations
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes sectionEntrance {
  from {
    opacity: 0;
    transform: translateX(-100px) rotateY(-45deg);
  }
  to {
    opacity: 1;
    transform: translateX(0) rotateY(0);
  }
}

// Base Component
.needs {
  &-container {
    @include flex-column;
    align-items: center;
    width: 100%;
    padding: $spacing-lg $spacing-sm;
    color: $text-color;
    position: relative;
    animation: fadeIn 0.8s $bezier;
    
    &::before {
      @include absolute-fill;
      content: '';
      background: radial-gradient(circle at center, $grey-dark-2 0%, var(--background-color) 100%);
      opacity: 0.5;
      z-index: -1;
    }

    @media screen and (max-width: base.$bp-medium) {
      padding: $spacing-md $spacing-sm;
    }
  }

  &-title {
    @include responsive-font(3rem, 6rem);
    color: $text-color;
    text-align: center;
    margin-bottom: $spacing-lg;
    text-transform: uppercase;
    @include smooth-transition;
    text-shadow: 0 0 15px $primary-dark;
    letter-spacing: 0.5rem;
    position: relative;
    
    @include hover-scale;

    &::after {
      content: '';
      position: absolute;
      bottom: -1rem;
      left: 50%;
      transform: translateX(-50%);
      width: 50%;
      height: 2px;
      background: linear-gradient(90deg, transparent, $primary-color, transparent);
    }
  }

  &-button {
    padding: 1.2rem 3rem;
    min-width: 15rem;
    border: none;
    border-radius: $border-radius-md;
    @include gradient-background($grey-dark-3, $grey-dark-4);
    color: $text-color;
    cursor: pointer;
    @include smooth-transition;
    font-family: inherit;
    @include responsive-font(1.4rem, 1.6rem);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.2rem;
    @include box-shadow-hover;

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    &--danger {
      @include gradient-background(var(--color-secondary-dark), var(--color-secondary));
    }
  }

  &-input {
    padding: $spacing-sm 1.5rem;
    border: none;
    border-radius: $border-radius-sm;
    background: $grey-dark-3;
    color: $text-color;
    font-family: inherit;
    font-size: 1.6rem;
    @include smooth-transition;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);

    &:focus {
      outline: none;
      background: $grey-dark-2;
      box-shadow: 
        inset 0 2px 4px rgba(0, 0, 0, 0.2),
        0 0 10px $primary-dark;
    }
  }
}

// Pyramid Component
.needs-pyramid {
  &__sections {
    perspective: 1500px;
    transform-style: preserve-3d;
    transform: rotateX(-15deg);
    @include flex-column;
    align-items: center;
    gap: $spacing-lg;
    @include smooth-transition;

    &:hover {
      transform: rotateX(-20deg) translateZ(50px);
    }
  }
}

// Dialog Component
.needs-dialog {
  &-overlay {
    @include absolute-fill;
    @include flex-center;
    background: rgba(0, 0, 0, 0.8);
    z-index: 1000;
    padding: $spacing-lg;
    animation: fadeIn 0.3s $bezier;
  }

  &-content {
    @include glass-panel;
    max-width: 60rem;
    width: 100%;
    padding: $spacing-lg;
    color: $text-color;
    position: relative;
  }

  &__title {
    color: var(--dialog-color);
    @include responsive-font(2rem, 2.4rem);
    margin-bottom: $spacing-md;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.2rem;
  }

  &__description {
    color: var(--text-color);
    font-size: 1.6rem;
    margin-bottom: $spacing-md;
    text-align: center;
    line-height: 1.6;
  }

  &__slider {
    width: 100%;
    height: 0.8rem;
    background: var(--color-grey-dark-4);
    border-radius: $border-radius-sm;
    appearance: none;
    outline: none;
    
    &::-webkit-slider-thumb {
      appearance: none;
      width: 2rem;
      height: 2rem;
      background: var(--dialog-color);
      border-radius: 50%;
      cursor: pointer;
      box-shadow: 0 0 10px var(--dialog-color);
    }
  }

  &__value {
    display: block;
    text-align: center;
    color: var(--text-color);
    font-size: 1.8rem;
    margin-top: $spacing-sm;
  }

  &__close {
    @extend .needs-button;
    margin-top: $spacing-lg;
  }

  @media screen and (max-width: base.$bp-medium) {
    width: 95%;
    padding: $spacing-md;
  }
}

// History Component
.needs-history {
  width: 100%;
  max-width: 80rem;
  margin: 0 auto;

  &__title {
    @include responsive-font(2rem, 2.4rem);
    color: var(--text-color);
    text-align: center;
    margin-bottom: $spacing-lg;
  }

  &__list {
    @include flex-column;
    gap: $spacing-md;
  }

  &__item {
    @include gradient-background(var(--color-grey-dark-3), var(--color-grey-dark-4));
    padding: $spacing-md;
    border-radius: $border-radius-md;
    @include box-shadow-hover;
  }

  &__date {
    color: var(--text-color);
    font-size: 1.4rem;
    margin-bottom: $spacing-sm;
  }

  &__values {
    @include flex-column;
    gap: $spacing-sm;
  }

  &__value {
    position: relative;
    height: 2rem;
    background: var(--color-grey-dark-2);
    border-radius: $border-radius-sm;
    overflow: hidden;

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: var(--value-width);
      background: var(--value-color);
      box-shadow: 0 0 10px var(--value-color);
    }
  }

  &__label {
    position: absolute;
    left: $spacing-sm;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-color);
    font-size: 1.2rem;
    z-index: 1;
    text-shadow: 0 0 4px rgba(0, 0, 0, 0.5);
  }
}

// View Transition
.needs-view-transition {
  &-enter {
    opacity: 0;
    transform: translateX(50px);
    
    &-active {
      opacity: 1;
      transform: translateX(0);
      @include smooth-transition;
    }
  }
  
  &-exit {
    opacity: 1;
    transform: translateX(0);
    
    &-active {
      opacity: 0;
      transform: translateX(-50px);
      @include smooth-transition;
    }
  }
}
