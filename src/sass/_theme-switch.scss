@use "theme-variables" as *;

// Core variables
$theme-switch: (
  transition: (
    fast: 150ms ease,
    default: 300ms ease,
  ),
  scales: (
    hover: 1.05,
    active: 0.97,
    sun: (
      default: 0.4,
      active: 1.1,
      transitioning: 0.9,
    ),
    moon: 0.8,
  ),
  position: (
    top: 1.5rem,
    left: 1.5rem,
  ),
);

// Eclipse effect variables
$eclipse: (
  gradient: (
    center: 15%,    // Size of the bright center
    spread: 35%,    // Size of the dark spread
    opacity: 0.9,   // Darkness of the eclipse
  ),
  glow: (
    spread: 20px,
    opacity: 0.8,
  ),
);

.theme-switch {
  // Core styles
  appearance: none;
  position: fixed;
  left: max(map-get($theme-switch, 'position', 'left'));
  top: max(map-get($theme-switch, 'position', 'top'));
  z-index: var(--z-index-theme-switch);
  cursor: pointer;
  
  // Track styles
  width: var(--track-width);
  height: var(--track-height);
  border-radius: var(--track-height);
  background-color: var(--background-color);
  overflow: hidden;
  isolation: isolate;

  // Eclipse overlay (new)
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(
      circle at calc(100% - var(--track-padding) - (var(--thumb-size) / 2)) 50%,
      transparent map-get($eclipse, 'gradient', 'center'),
      var(--background-color) map-get($eclipse, 'gradient', 'spread')
    );
    opacity: 0;
    transition: opacity map-get($theme-switch, 'transition', 'default');
    z-index: 0;
    pointer-events: none;
  }

  // Mixins for common transitions
  @mixin icon-transition {
    transform-origin: center;
    transition: transform map-get($theme-switch, 'transition', 'default');
    will-change: transform;
  }

  // Responsive dimensions
  @each $breakpoint, $sizes in $screens {
    @media (max-width: map-get($sizes, "width")) {
      --track-width: #{map-get($sizes, "width")};
      --track-height: #{map-get($sizes, "height")};
      --thumb-size: #{map-get($sizes, "thumb")};
    }
  }
  
  // Hover and active states
  transition: transform map-get($theme-switch, 'transition', 'fast');
  
  @media (hover: hover) {
    &:hover { 
      transform: scale(map-get($theme-switch, 'scales', 'hover')); 
    }
  }
  
  &:active { 
    transform: scale(map-get($theme-switch, 'scales', 'active'));
    transition-duration: 35ms;
  }

  // Sun icon
  &::before {
    content: '';
    position: absolute;
    right: var(--track-padding);
    top: var(--track-padding);
    width: var(--thumb-size);
    height: var(--thumb-size);
    background: {
      image: url('../assets/images/sun.png');
      position: center;
      size: 100%;
      repeat: no-repeat;
    }
    filter: grayscale(0.8) brightness(0.8);
    transform: scale(map-get($theme-switch, 'scales', 'sun', 'default'));
    @include icon-transition;
    z-index: 2;
  }

  // Moon icon
  .switch {
    position: absolute;
    left: var(--track-padding);
    width: var(--thumb-size);
    height: var(--thumb-size);
    transform: translateX(0);
    @include icon-transition;
    z-index: 2;

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background: {
        image: url('../assets/images/moon.webp');
        position: center;
        size: 100%;
        repeat: no-repeat;
      }
      transform: scale(map-get($theme-switch, 'scales', 'moon'));
      @include icon-transition;
    }
  }

  // Light theme state with eclipse effect
  &.light-theme {
    // Show eclipse overlay
    &::after {
      opacity: 1;
    }

    .switch { 
      transform: translateX(var(--track-inner-space));
      mix-blend-mode: difference;
      filter: brightness(1.2);
    }
    
    // Enhanced sun during eclipse
    &::before {
      transform: scale(map-get($theme-switch, 'scales', 'sun', 'active'));
      filter: grayscale(1) brightness(1.5);
      transition: transform map-get($theme-switch, 'transition', 'default'),
                 filter map-get($theme-switch, 'transition', 'default'),
                 box-shadow map-get($theme-switch, 'transition', 'default');
    }
  }

  // Touch device optimizations
  @media (pointer: coarse) {
    --track-padding: max(0.2em, 2px);
    
    &:active {
      transform: scale(0.98);
    }
  }
}