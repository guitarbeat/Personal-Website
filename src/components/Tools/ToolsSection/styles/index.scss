// ToolsSection Styles
@use "sass:map";
@use "../../../../sass/variables" as vars;
@use "../../../../sass/mixins" as mix;
@use "../../../../sass/functions" as fn;
@use "../../../../sass/breakpoints" as bp;
@use "../../../../sass/tokens" as tokens;

// Import shared tool styles
@use "../../shared/styles/index.scss" as tool;

// Animation keyframes
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes scale {
  from { transform: scale(0.98); }
  to { transform: scale(1); }
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes fullscreenEnter {
  from {
    opacity: 0;
    transform: scale(0.98);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes fullscreenExit {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.98);
  }
}

// Root variables
:root {
  --fullscreen-transition-duration: 0.4s;
  --fullscreen-transition-timing: cubic-bezier(0.4, 0, 0.2, 1);
  --fullscreen-backdrop-blur: 4px;
  --fullscreen-border-radius: 16px;
  --fullscreen-shadow-color: rgba(0, 0, 0, 0.2);
  --fullscreen-border-color: rgba(255, 255, 255, 0.05);
  --fullscreen-toggle-size: clamp(32px, 5vw, 40px);
  --fullscreen-header-offset: max(60px, 10vh);
}

// Fullscreen mode body styles
body.is-fullscreen {
  overflow: hidden !important;
  touch-action: none;

  #magicContainer,
  .vignette-top,
  .vignette-bottom,
  .vignette-left,
  .vignette-right {
    display: none !important;
  }
}

// Tool card styles
.tool-card {
  @include mix.card-container;
  
  & {
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 100%;
    cursor: pointer;
  }
  
  &--selected {
    background-color: var(--color-grey-dark-3);
    border-color: var(--color-sage);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }
  
  &__icon {
    font-size: 2rem;
    margin-bottom: 1rem;
    color: var(--color-sage);
  }
  
  &__content {
    text-align: center;
  }
  
  &__title {
    margin-bottom: 0.5rem;
  }
  
  &__description {
    color: var(--color-text-light);
  }
}

// Tool container
.tool-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.5rem;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;

  @include mix.respond('medium') {
    padding: 1rem;
  }
  
  @include mix.respond('small') {
    grid-template-columns: 1fr;
  }
}

// Tool content container
.tool-content-container {
  width: 100%;
  max-width: 1200px;
  margin: 2rem auto;
  min-height: 400px;
}

// Button styles
.button {
  border: none;
  outline: none;
  cursor: pointer;
  transition: all 0.2s ease;
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;

  &:focus-visible {
    outline: 2px solid var(--color-sage);
    outline-offset: 2px;
  }

  &:active {
    transform: scale(0.95);
  }
}

.icon-button {
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--color-grey-dark-3);
  border: 1px solid rgba(255, 255, 255, 0.1);
  color: var(--color-text);
  border-radius: 50%;
  width: var(--fullscreen-toggle-size);
  height: var(--fullscreen-toggle-size);

  &:hover {
    background: var(--color-grey-dark-4);
    transform: scale(1.05);
  }
}

// Utility classes
.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Loading and error states
.error-container {
  @extend .flex-center;
  flex-direction: column;
  gap: 1rem;
  padding: 2rem;
  text-align: center;
}

.loading-wrapper {
  @extend .error-container;
  
  i {
    font-size: 2rem;
    animation: rotate 1s linear infinite;
  }
} 