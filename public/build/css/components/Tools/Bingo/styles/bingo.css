/**
 * Responsive Design Utilities
 *
 * This module provides utility mixins and functions for responsive design,
 * building on top of breakpoint values defined in _tokens.scss.
 *
 * It maintains backward compatibility with legacy variables but provides
 * enhanced functionality through mixins that make responsive design easier.
 *
 * @example
 * ```scss
 * @use "breakpoints" as bp;
 * 
 * // Media query for specific breakpoint and below
 * @include bp.down('medium') {
 *   // Styles for medium breakpoint and below
 * }
 * 
 * // Media query between two breakpoints
 * @include bp.between('small', 'large') {
 *   // Styles for between small and large
 * }
 * 
 * // Responsive property values
 * @include bp.responsive((
 *   'base': 1rem,
 *   'small': 1.25rem,
 *   'medium': 1.5rem,
 *   'large': 2rem
 * )) using ($value) {
 *   font-size: $value;
 * }
 * ```
 */
:root {
  --shadow-0: none;
  --shadow-1: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-2: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-3: 0 8px 16px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.05);
  --shadow-4: 0 16px 24px rgba(0, 0, 0, 0.1), 0 6px 12px rgba(0, 0, 0, 0.05);
  --shadow-hover: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-active: 0 2px 4px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.05);
  --shadow-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.2);
  --shadow-card: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-dropdown: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-modal: 0 8px 16px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.05);
  --shadow-toast: 0 16px 24px rgba(0, 0, 0, 0.1), 0 6px 12px rgba(0, 0, 0, 0.05);
  --shadow-button: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-button-hover: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-input-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.2);
  --inner-shadow-subtle: inset 0 1px 2px rgba(0, 0, 0, 0.05);
  --inner-shadow-medium: inset 0 2px 4px rgba(0, 0, 0, 0.1);
  --inner-shadow-strong: inset 0 4px 8px rgba(0, 0, 0, 0.15);
}

.dark-theme {
  --shadow-0: none;
  --shadow-1: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-2: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-3: 0 8px 16px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);
  --shadow-4: 0 16px 24px rgba(0, 0, 0, 0.35), 0 6px 12px rgba(0, 0, 0, 0.25);
  --shadow-hover: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-active: 0 2px 4px rgba(0, 0, 0, 0.25), 0 1px 2px rgba(0, 0, 0, 0.15);
  --shadow-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.4);
  --shadow-card: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-dropdown: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-modal: 0 8px 16px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);
  --shadow-toast: 0 16px 24px rgba(0, 0, 0, 0.35), 0 6px 12px rgba(0, 0, 0, 0.25);
  --shadow-button: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-button-hover: 0 4px 8px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.15);
  --shadow-input-focus: 0 0 0 2px rgba(var(--color-primary-rgb), 0.4);
  --inner-shadow-subtle: inset 0 1px 2px rgba(0, 0, 0, 0.15);
  --inner-shadow-medium: inset 0 2px 4px rgba(0, 0, 0, 0.2);
  --inner-shadow-strong: inset 0 4px 8px rgba(0, 0, 0, 0.25);
}

:export {
  breakpointLarge: 62.5em;
  themeSageBase: #0b7abd;
  themeCoralBase: #e15b18;
  themeSandBase: #a8958c;
  themeIndigoBase: #1a1a1d;
}

/**
 * Get a scale value
 * @param {String} $size - Size of the scale (sm, md, lg)
 * @return {Number} Scale value
 */
/**
 * Get a component token safely with fallback
 * @param {String} $component - Component name
 * @param {String} $category - Category within component
 * @param {String} $token - Token name
 * @param {*} $fallback - Fallback value if token doesn't exist
 * @return {*} Token value or fallback
 */
/**
 * Get a theme color safely with fallback
 * @param {String} $name - Color name
 * @param {String} $variant - Color variant (base, light, dark, alt)
 * @param {*} $fallback - Fallback value if color doesn't exist
 * @return {*} Color value or fallback
 */
/**
 * Get a spacing value safely with fallback
 * @param {String} $size - Spacing size
 * @param {*} $fallback - Fallback value if spacing doesn't exist
 * @return {*} Spacing value or fallback
 */
/**
 * Generate a media query for screens with width less than or equal to the specified breakpoint
 * @param {String} $breakpoint - The breakpoint name (smallest, small, medium, large, largest)
 */
/**
 * Generate a media query for screens with width greater than the specified breakpoint
 * @param {String} $breakpoint - The breakpoint name (smallest, small, medium, large, largest)
 */
/**
 * Generate a media query for screens with width between two breakpoints
 * @param {String} $min - The minimum breakpoint name
 * @param {String} $max - The maximum breakpoint name
 */
/**
 * Generate a media query for a specific breakpoint only
 * @param {String} $breakpoint - The breakpoint name
 */
/**
 * Apply different styles at different breakpoints
 * @param {Map} $values - Map of breakpoint names to values
 */
/**
 * Generate a container that is full width until it reaches a breakpoint
 * @param {String} $breakpoint - The breakpoint at which to constrain width
 * @param {Number} $padding - The padding to apply at smaller screens
 */
/**
 * Generate a fluid value that scales between two sizes based on viewport width
 * @param {Number} $min-value - The minimum value
 * @param {Number} $max-value - The maximum value
 * @param {String} $min-breakpoint - The minimum breakpoint name
 * @param {String} $max-breakpoint - The maximum breakpoint name
 * @param {String} $property - The CSS property to apply the fluid value to
 */
/**
 * Remove the unit from a number
 * @param {Number} $number - The number with a unit
 * @return {Number} The number without a unit
 */
@keyframes switchEntrance {
  0% {
    opacity: 0;
    transform: scale(0.8) translateY(20px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}
@keyframes cosmicFloat {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-4px);
  }
}
@keyframes moonPhase {
  0% {
    transform: rotate(0deg) scale(1) translateY(0);
    opacity: 0.9;
    box-shadow: inset -3px 0 3px var(--moon-shadow), 0 0 8px rgba(222, 226, 230, 0.3);
  }
  45% {
    transform: rotate(180deg) scale(0.85) translateY(-5%);
    opacity: 0.75;
    box-shadow: inset 0 0 1px var(--moon-shadow);
  }
  50% {
    transform: rotate(200deg) scale(0.8) translateY(5%);
    opacity: 0.6;
    box-shadow: none;
  }
  55% {
    transform: rotate(220deg) scale(0.85) translateY(0);
    opacity: 0.75;
    box-shadow: inset 2px 0 2px var(--moon-shadow);
  }
  100% {
    transform: rotate(360deg) scale(1) translateY(0);
    opacity: 0.9;
    box-shadow: inset -3px 0 3px var(--moon-shadow), 0 0 12px rgba(222, 226, 230, 0.4);
  }
}
@keyframes switchBackground {
  0%, 100% {
    background: var(--switch-bg);
  }
  50% {
    background: color-mix(in srgb, var(--switch-bg) 90%, #121214);
  }
}
@keyframes sunCorona {
  0%, 100% {
    opacity: 0.85;
    transform: scale(1) rotate(0deg);
  }
  50% {
    opacity: 0.25;
    transform: scale(1.25) rotate(180deg);
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes slideIn {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}
:root {
  --switch-width: clamp(3rem, 4vw, 4.5rem);
  --switch-height: clamp(1.5rem, 2vw, 2.25rem);
  --switch-border-radius: calc(var(--switch-height) / 2);
  --switch-padding: 0.2rem;
  --switch-handle-size: calc(var(--switch-height) - 2 * var(--switch-padding));
  --switch-animation-duration: 8s;
  --switch-animation-timing: cubic-bezier(0.4, 0, 0.2, 1);
}
@media (prefers-reduced-motion: reduce) {
  :root {
    --switch-animation-duration: 16s;
  }
}
:root {
  --switch-pos-x: clamp(0.75rem, 2vw, 1.5rem);
  --switch-pos-y: clamp(0.5rem, 1.5vh, 1.25rem);
  --switch-offset-x: 0.5rem;
  --switch-offset-y: 0.25rem;
}

.theme-switch {
  position: relative;
  margin-left: auto;
  margin-right: 1rem;
  z-index: 9999;
  width: var(--switch-width);
  height: var(--switch-height);
  border-radius: calc(var(--switch-height) / 2);
  background: linear-gradient(90deg, #78D6C6 0%, #419197 50%, #04162E 100%);
  background-size: 200% 100%;
  border: none;
  cursor: pointer;
  overflow: hidden;
  transition: background-position 1s cubic-bezier(0.4, 0, 0.2, 1), transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
  animation: switchEntrance 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards, cosmicFloat 8s ease-in-out infinite;
  margin: 0;
  opacity: 1;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15), inset 0 1px 2px rgba(255, 255, 255, 0.1);
}
.theme-switch .switch-handle {
  position: absolute;
  top: var(--switch-padding);
  left: var(--switch-padding);
  width: var(--switch-handle-size);
  height: var(--switch-handle-size);
  border-radius: 50%;
  background: linear-gradient(180deg, #ff7d66 -50%, #F5FCCD 50%, #49676B 150%);
  background-size: 100% 200%;
  transform-origin: center 200%;
  transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55), background 0.8s ease, box-shadow 0.3s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2), inset 0 2px 4px rgba(255, 255, 255, 0.2);
}
.theme-switch .switch-handle::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 50%;
  background: radial-gradient(circle at 50% 0%, rgba(255, 255, 255, 0.2) 0%, transparent 60%);
  opacity: 0;
  transition: opacity 0.3s ease;
}
.theme-switch.light-theme {
  background-position: 100% 0;
}
.theme-switch.light-theme .switch-handle {
  transform: translateX(calc(var(--switch-width) - var(--switch-height)));
}
.theme-switch.light-theme .switch-handle:hover {
  transform: translateX(calc((var(--switch-width) - var(--switch-handle-size)) / 2)) scale(1.15);
}
.theme-switch:not(.light-theme) {
  background-position: 0 0;
}
.theme-switch:not(.light-theme) .switch-handle {
  transform: translateX(0);
}
.theme-switch:not(.light-theme) .switch-handle:hover {
  transform: translateX(calc((var(--switch-width) - var(--switch-handle-size)) / 2)) scale(1.15);
}
.theme-switch:hover {
  transform: none;
}
.theme-switch:hover .switch-handle {
  transform: translateX(calc((var(--switch-width) - var(--switch-handle-size)) / 2)) scale(1.15);
}
.theme-switch:hover .switch-handle::before {
  opacity: 1;
}
.theme-switch::after {
  content: "";
  position: absolute;
  inset: -2px;
  border-radius: inherit;
  background: radial-gradient(circle at var(--mouse-x, 50%) var(--mouse-y, 50%), rgba(255, 255, 255, 0.15) 0%, transparent 60%);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}
.theme-switch:hover::after {
  opacity: 1;
}

@media (max-width: 768px) {
  :root {
    --switch-width: calc(clamp(3rem, 4vw, 4.5rem) * 0.8);
    --switch-height: calc(clamp(1.5rem, 2vw, 2.25rem) * 0.8);
    --switch-pos-x: calc(clamp(0.75rem, 2vw, 1.5rem) * 0.8);
    --switch-pos-y: calc(clamp(0.5rem, 1.5vh, 1.25rem) * 0.8);
  }
  .theme-switch {
    animation: cosmicFloat 6s ease-in-out infinite, switchEntrance 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
}
@media (max-width: 480px) {
  :root {
    --switch-offset-x: 0.25rem;
    --switch-offset-y: 0.125rem;
  }
  .theme-switch {
    animation: cosmicFloat 4s ease-in-out infinite, switchEntrance 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
}
@media (width <= 767px) {
  .theme-switch {
    margin-right: 0.5rem;
  }
}
:root {
  --heading-transition-timing: 0.5s;
  --heading-transition-easing: cubic-bezier(0.34, 1.56, 0.64, 1);
  --heading-decoration-gradient: linear-gradient(
    90deg,
    var(--color-sage-light),
    var(--color-coral-light)
  );
}

h1 {
  font-size: 3.052rem;
  font-weight: 700;
  line-height: 1.2;
  letter-spacing: -0.02em;
  margin-top: 2rem;
  margin-bottom: 1rem;
  position: relative;
  transition: transform var(--heading-transition-timing) var(--heading-transition-easing);
  transform-origin: left center;
  will-change: transform;
}
h1:hover {
  transform: scale(1.01);
}
h1:hover::after {
  transform: scaleX(1);
  opacity: 1;
}
h1::after {
  content: "";
  position: absolute;
  bottom: -0.01rem;
  left: 0;
  width: 100%;
  height: 2px;
  background: var(--heading-decoration-gradient);
  transform: scaleX(0);
  opacity: 0;
  transition: transform var(--heading-transition-timing) var(--heading-transition-easing), opacity var(--heading-transition-timing) var(--heading-transition-easing);
  transform-origin: left center;
  will-change: transform, opacity;
}

h2 {
  font-size: 2.441rem;
  font-weight: 700;
  line-height: 1.2;
  letter-spacing: -0.01em;
  margin-top: 2rem;
  margin-bottom: 0.75rem;
  position: relative;
  transition: transform 0.4s var(--heading-transition-easing), color 0.4s var(--heading-transition-easing);
  transform-origin: left center;
  will-change: transform, color;
}
h2:hover {
  transform: scale(1.01);
  color: var(--color-sage-light);
}
h2:hover::before {
  transform: scaleX(1);
  opacity: 0.8;
}

.tool-content h1,
.tool-content h2,
.tool-content h3,
.tool-content h4 {
  text-transform: uppercase;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes slideIn {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes slideDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}
@keyframes slideIn {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}
.bingo-container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  padding: 2rem;
  overflow: auto;
  transform: translateZ(0);
  backface-visibility: hidden;
  will-change: transform;
}

.bingo-header {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}
.bingo-header h1 {
  font-size: 1.953rem;
  color: var(--color-text);
  text-align: center;
  margin: 0;
  text-transform: uppercase;
}
.bingo-header .year-selector {
  display: flex;
  gap: 1rem;
}
.bingo-header .progress-summary {
  text-align: center;
  color: var(--color-text);
}
.bingo-header .progress-summary h2,
.bingo-header .progress-summary h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 1rem;
}
.bingo-header .progress-summary p {
  font-size: 1rem;
  line-height: 1.5;
}
.bingo-header .progress-summary .metadata,
.bingo-header .progress-summary .card-info {
  font-size: 0.875rem;
  color: var(--color-text-light);
}
.bingo-header .progress-summary h3 {
  margin-top: 0;
}
.bingo-header .progress-summary p {
  margin: 0;
}

.bingo-grid {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 0.75rem;
  padding: 1.5rem;
  backdrop-filter: blur(var(--about-blur-amount));
  background: var(--about-glass-bg);
  border: 1px solid var(--about-glass-border);
  border-radius: var(--about-border-radius);
  box-shadow: var(--about-glass-shadow);
  transition: transform var(--about-transition-duration) var(--theme-transition-timing), box-shadow var(--about-transition-duration) var(--theme-transition-timing);
  will-change: transform;
}
@media only screen and (max-width: 50em) {
  .bingo-grid {
    gap: 0.5rem;
    padding: 1rem;
  }
}

.bingo-item {
  position: relative;
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  backdrop-filter: blur(var(--about-blur-amount));
  background: var(--about-glass-bg);
  border: 1px solid var(--about-glass-border);
  border-radius: var(--about-border-radius);
  box-shadow: var(--about-glass-shadow);
  cursor: pointer;
  transition: transform var(--about-transition-duration) var(--theme-transition-timing), border-color var(--about-transition-duration) var(--theme-transition-timing), background var(--about-transition-duration) var(--theme-transition-timing), box-shadow var(--about-transition-duration) var(--theme-transition-timing);
  will-change: transform, opacity;
}
.bingo-item:hover, .bingo-item.hovered {
  transform: var(--about-hover-transform);
  border-color: var(--color-sage);
  z-index: 1;
}
.bingo-item.checked {
  background: linear-gradient(135deg, rgba(var(--color-sage-rgb), 0.3), rgba(var(--color-sage-rgb), 0.1));
  border-color: var(--color-sage);
}
.bingo-item .item-content {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
}
.bingo-item .text {
  font-weight: 600;
  font-size: 0.875rem;
  color: var(--color-text);
  margin-bottom: 0.25rem;
}
@media only screen and (max-width: 50em) {
  .bingo-item .text {
    font-size: 0.8rem;
  }
}
.bingo-item .description {
  font-size: 0.8rem;
  color: var(--color-text-light);
  opacity: 0;
  transition: opacity var(--about-transition-duration) var(--theme-transition-timing);
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  backdrop-filter: blur(var(--about-blur-amount));
  background: var(--about-glass-bg);
  border: 1px solid var(--about-glass-border);
  padding: 0.5rem;
  border-radius: 0 0 var(--about-border-radius) var(--about-border-radius);
  pointer-events: none;
  will-change: opacity;
}
.bingo-item:hover .description, .bingo-item.hovered .description {
  opacity: 1;
}
.bingo-item .checkmark {
  position: absolute;
  top: 0.25rem;
  right: 0.25rem;
  color: var(--color-sage);
  font-size: 1rem;
}

.bingo-notification {
  margin-top: 1.5rem;
  padding: 1rem 1.5rem;
  border-radius: var(--bingo-border-radius);
  color: #fff;
  text-align: center;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  will-change: transform, opacity;
}
.bingo-notification[type=partial] {
  background: linear-gradient(135deg, var(--bingo-accent), var(--bingo-accent-dark));
  animation: slideIn 0.5s ease-out;
}
.bingo-notification[type=full] {
  background: linear-gradient(135deg, var(--bingo-success), var(--bingo-success-dark));
  animation: bounce 1s infinite;
}
.bingo-notification h2 {
  font-size: 1.25rem;
  margin: 0 0 0.5rem 0;
}
.bingo-notification ul {
  list-style-position: inside;
  margin: 0.5rem 0 0 0;
  padding: 0;
  text-align: left;
}

.reset-button {
  margin-top: 1.5rem;
  padding: 0.5rem 1.5rem;
  background: var(--bingo-accent);
  color: #fff;
  border: none;
  border-radius: var(--bingo-border-radius);
  font-weight: 700;
  cursor: pointer;
  transition: transform var(--transition-normal, 0.3s) var(--timing-ease, ), background-color var(--transition-normal, 0.3s) var(--timing-ease, );
  will-change: transform;
}
.reset-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  background: var(--bingo-accent-dark);
}
.reset-button:active {
  transform: translateY(0);
}

.loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  padding: 2rem;
  color: var(--color-text);
}
.loading i {
  font-size: 1.953rem;
  color: var(--color-sage);
  animation: rotate 1s linear infinite;
}

.error {
  padding: 2rem;
  text-align: center;
  color: var(--color-coral);
  backdrop-filter: blur(var(--about-blur-amount));
  background: var(--about-glass-bg);
  border: 1px solid var(--about-glass-border);
  border-radius: var(--about-border-radius);
  box-shadow: var(--about-glass-shadow);
}
.error h3 {
  font-size: 1.563rem;
  margin-bottom: 1rem;
}
.error p {
  color: var(--color-text-light);
  margin-bottom: 1.5rem;
}

@media (prefers-reduced-motion: reduce) {
  .bingo-item,
  .bingo-notification,
  .reset-button {
    transition: none !important;
    animation: none !important;
  }
}
.category-1 {
  border-color: var(--color-coral) !important;
}

.category-2 {
  border-color: var(--color-sage) !important;
}

.category-3 {
  border-color: var(--color-coral-light) !important;
}

.category-4 {
  border-color: var(--color-sage-light) !important;
}

.category-5 {
  border-color: var(--color-text-light) !important;
}

@media only screen and (max-width: 50em) {
  .bingo-game .bingo-header h1 {
    font-size: 1.563rem;
  }
  .bingo-game .bingo-header .year-selector button {
    padding: 0.4rem 0.8rem;
    font-size: 0.875rem;
  }
}
.animate-bounce {
  animation: bounce 1s infinite;
}

.animate-fade-in-up {
  animation: slideIn 0.5s ease-out forwards;
}

.text-center {
  text-align: center;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-8 {
  margin-top: 2rem;
}

.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

@media only screen and (max-width: 50em) {
  .bingo-card {
    padding: 1rem;
  }
}
@media only screen and (max-width: 50em) {
  .bingo-card__cell {
    font-size: 0.875rem;
  }
}
@media only screen and (max-width: 50em) {
  .bingo-card {
    grid-template-columns: repeat(3, 1fr);
  }
}
