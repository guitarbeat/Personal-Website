"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[658],{7658:(e,t,s)=>{s.r(t),s.d(t,{default:()=>x});var i=s(5043);const a={background:"rgba(10, 10, 15, 0.8)",snake:{gradient:["#7AA2F7","#7DCFFF","#2AC3DE"],glow:"#7AA2F7"},snakeHead:{gradient:["#BB9AF7","#9D7CD8"],glow:"#BB9AF7"},food:{gradient:["#F7768E","#FF9E64"],glow:"#F7768E"},border:"#24283B",gridLines:"rgba(255, 255, 255, 0.05)",text:"#A9B1D6",gameOver:"#F7768E",scoreBackground:"rgba(26, 27, 38, 0.9)",highScore:"#9ECE6A"},n={minTileSize:20,maxTileSize:32,borderRadius:4,gridLineWidth:1,shadowBlur:30,glowRadius:40,innerShadowSize:10},r={snakeSpeed:{mobile:100,desktop:80},fadeSpeed:400,growthFactor:1.15,foodPulseSpeed:1800,foodPulseScale:1.18,snakeGlowIntensity:.8,shadowPulseSpeed:200,particleCount:10,particleLifetime:1e3,particleGravity:.1,particleSpeed:2,particleSize:.5},o=768,c={gridSize:20,initialSnakeLength:3,growthRate:1,maxHighScores:5,controls:{up:["ArrowUp","w","W"],down:["ArrowDown","s","S"],left:["ArrowLeft","a","A"],right:["ArrowRight","d","D"],pause:["Space","p","P"],restart:["r","R"]}};var h=s(2555),l=s(1289),d=s(9899),u=s(9352);const g=new class{constructor(){this.foodSynth=new u.RG({oscillator:{type:"sine"},envelope:{attack:.01,decay:.1,sustain:0,release:.1}}).toDestination(),this.gameOverSynth=new u.Bh(u.RG,{oscillator:{type:"triangle"},envelope:{attack:.01,decay:.3,sustain:0,release:.1}}).toDestination(),this.moveSynth=new u.RG({oscillator:{type:"square"},envelope:{attack:.01,decay:.05,sustain:0,release:.05},volume:-20}).toDestination(),this.feedbackDelay=new u.F("8n",.5).toDestination(),this.gameOverSynth.connect(this.feedbackDelay)}async initialize(){if("running"!==u._O.state)try{await u.ni(),console.log("Audio context started")}catch(e){console.warn("Could not start audio context:",e)}}playFoodCollect(){this.foodSynth.triggerAttackRelease("C5","16n")}playGameOver(){const e=u.tB();this.gameOverSynth.triggerAttackRelease(["C4","G3","E3","C3"],"8n",e)}playMove(){this.moveSynth.triggerAttackRelease("G4","32n")}};class m extends l.Scene{constructor(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super({key:"SnakeScene"}),this.state={snake:[],food:null,direction:{x:0,y:0},nextDirection:{x:0,y:0},score:0,gameOver:!1,lastUpdate:0},this.particles=[],this.currentHue=0,this.snakeHue=180,this.foodHue=0,this.isMobile=e,this.gameSpeed=e?r.snakeSpeed.mobile:r.snakeSpeed.desktop,this.highScore=parseInt(localStorage.getItem("snakeHighScore"))||0,this.avatar=new Image,this.avatar.src=d,this.boundKeyHandler=null}async create(e){this.canvasSize=e,this.cellSize=e.cellSize,await g.initialize(),this.initializeGame(),this.setupInput(),this.setupEventListeners()}initializeGame(){const e=Math.floor(c.gridSize/2)*this.cellSize,t=Math.floor(c.gridSize/2)*this.cellSize;this.state.snake=[{x:e,y:t}],this.state.direction={x:this.cellSize,y:0},this.state.nextDirection={x:this.cellSize,y:0},this.spawnFood(),this.state.score=0,this.state.gameOver=!1}setupInput(){this.boundKeyHandler=e=>{this.handleKeyPress(e.code),["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"].includes(e.code)&&e.preventDefault()},document.addEventListener("keydown",this.boundKeyHandler)}handleKeyPress(e){if(this.state.gameOver&&("Space"===e||"Enter"===e))return void this.initializeGame();const{direction:t}=this.state,s=this.cellSize;switch(e){case"ArrowUp":0===t.y&&(this.state.nextDirection={x:0,y:-s});break;case"ArrowDown":0===t.y&&(this.state.nextDirection={x:0,y:s});break;case"ArrowLeft":0===t.x&&(this.state.nextDirection={x:-s,y:0});break;case"ArrowRight":0===t.x&&(this.state.nextDirection={x:s,y:0});break;case"Space":case"Enter":this.state.gameOver&&this.initializeGame()}}generateFoodPosition(){return{x:Math.floor(Math.random()*(this.canvasSize.width/this.cellSize))*this.cellSize,y:Math.floor(Math.random()*(this.canvasSize.height/this.cellSize))*this.cellSize}}isValidFoodPosition(e){return!this.state.snake.some((t=>this.isCollision(t,e)))}spawnFood(){let e;do{e=this.generateFoodPosition()}while(!this.isValidFoodPosition(e));this.state.food=e}isCollision(e,t){const s=this.cellSize/4;return Math.abs(e.x-t.x)<s&&Math.abs(e.y-t.y)<s}createParticles(){const{food:e}=this.state,t=this.foodHue;for(let s=0;s<10;s++){const i=2*Math.PI*s/10,a=2+2*Math.random(),n=2+3*Math.random();this.particles.push({x:e.x+this.cellSize/2,y:e.y+this.cellSize/2,vx:Math.cos(i)*a,vy:Math.sin(i)*a,size:n,life:1,hue:(t+30*Math.random())%360,draw:function(){if(this.life<=0)return;const e=this.game.context;e.beginPath(),e.fillStyle="hsla(".concat(this.hue,", 70%, 50%, ").concat(this.life,")"),e.shadowColor="hsla(".concat(this.hue,", 80%, 60%, ").concat(this.life,")"),e.shadowBlur=5,e.fillRect(this.x,this.y,this.size,this.size),e.shadowBlur=0,this.x+=this.vx,this.y+=this.vy,this.life-=.05}.bind(this)})}}update(e){this.state.gameOver||(this.snakeHue=(this.snakeHue+.5)%360,this.foodHue=(this.foodHue+1)%360,e-this.state.lastUpdate<this.gameSpeed||(this.state.lastUpdate=e,this.moveSnake(),this.checkCollisions()||(this.draw(),this.updateParticles())))}checkCollisions(){const{snake:e}=this.state,t=e[0];for(let s=1;s<e.length;s++)if(this.isCollision(t,e[s]))return this.state.gameOver=!0,g.playGameOver(),!0;return!1}moveSnake(){const{snake:e,nextDirection:t,food:s}=this.state,i=(0,h.A)({},e[0]);this.state.direction=t,i.x+=t.x,i.y+=t.y;const a=this.canvasSize.width,n=this.canvasSize.height;i.x>=a&&(i.x=0),i.x<0&&(i.x=a-this.cellSize),i.y>=n&&(i.y=0),i.y<0&&(i.y=n-this.cellSize),e.unshift(i),this.isCollision(i,s)?(g.playFoodCollect(),this.state.score++,this.createParticles(),this.spawnFood(),this.state.score>this.highScore&&(this.highScore=this.state.score,localStorage.setItem("snakeHighScore",this.state.score))):e.pop()}updateParticles(){for(let e=this.particles.length-1;e>=0;e--)this.particles[e].draw(),this.particles[e].life<=0&&this.particles.splice(e,1)}draw(){const{snake:e,food:t}=this.state,s=this.game.context;if(s.clearRect(0,0,this.canvasSize.width,this.canvasSize.height),this.drawGrid(),e.forEach(((e,t)=>{const i=0===t;s.beginPath();const a=(this.snakeHue+5*t)%360,n="hsl(".concat(a,", 70%, ").concat(i?60:50,"%)"),r="hsl(".concat(a,", 80%, 60%)");s.fillStyle=n,s.shadowColor=r,s.shadowBlur=i?15:10,s.fillRect(e.x,e.y,this.cellSize-1,this.cellSize-1)})),s.shadowBlur=0,t){s.save();const e="hsl(".concat(this.foodHue,", 70%, 50%)"),i="hsl(".concat(this.foodHue,", 80%, 60%)");s.shadowColor=i,s.shadowBlur=15,s.drawImage(this.avatar,t.x,t.y,this.cellSize-1,this.cellSize-1),s.globalCompositeOperation="overlay",s.fillStyle=e,s.fillRect(t.x,t.y,this.cellSize-1,this.cellSize-1),s.globalCompositeOperation="source-over",s.fillStyle="rgba(255, 255, 255, 0.1)";const a=2;for(let n=0;n<this.cellSize-1;n+=a)for(let e=0;e<this.cellSize-1;e+=a)(n+e)%4===0&&s.fillRect(t.x+n,t.y+e,a,a);s.restore()}this.particles.forEach((e=>e.draw()))}drawGrid(){const e=this.game.context;e.strokeStyle=a.gridLines,e.lineWidth=this.isMobile?.5:1;for(let t=0;t<c.gridSize;t++){const s=t*this.cellSize;e.beginPath(),e.moveTo(s,0),e.lineTo(s,this.canvasSize.height),e.stroke(),e.beginPath(),e.moveTo(0,s),e.lineTo(this.canvasSize.width,s),e.stroke()}}updateGridSize(){this.state.snake=this.state.snake.map((e=>({x:Math.round(e.x/this.cellSize)*this.cellSize,y:Math.round(e.y/this.cellSize)*this.cellSize}))),this.state.food&&(this.state.food={x:Math.round(this.state.food.x/this.cellSize)*this.cellSize,y:Math.round(this.state.food.y/this.cellSize)*this.cellSize}),this.keepInBounds()}keepInBounds(){const e=this.canvasSize.width-this.cellSize,t=this.canvasSize.height-this.cellSize;this.state.snake=this.state.snake.map((s=>({x:Math.max(0,Math.min(s.x,e)),y:Math.max(0,Math.min(s.y,t))}))),this.state.food&&(this.state.food={x:Math.max(0,Math.min(this.state.food.x,e)),y:Math.max(0,Math.min(this.state.food.y,t))})}setupEventListeners(){}cleanup(){this.boundKeyHandler&&(document.removeEventListener("keydown",this.boundKeyHandler),this.boundKeyHandler=null),this.state={snake:[],food:null,direction:{x:0,y:0},nextDirection:{x:0,y:0},score:0,gameOver:!1,lastUpdate:0},this.particles=[],this.game&&this.game.context&&this.canvasSize&&this.game.context.clearRect(0,0,this.canvasSize.width,this.canvasSize.height),this.game&&this.game.animationFrameId&&(cancelAnimationFrame(this.game.animationFrameId),this.game.animationFrameId=null)}}var S=s(9620),p=s(579);const x=()=>{const e=(0,i.useRef)(null),t=(0,i.useRef)(null),s=(0,i.useRef)(null),a=(0,i.useRef)(null),[r,h]=(0,i.useState)(!1),[l,u]=(0,i.useState)(0),[g,x]=(0,i.useState)(parseInt(localStorage.getItem("snakeHighScore"))||0),[f,w]=(0,i.useState)({width:0,height:0}),[v,y]=(0,i.useState)(!1),z=(0,i.useRef)({x:0,y:0,time:0}),k=(0,i.useCallback)((()=>{a.current&&clearTimeout(a.current),a.current=setTimeout((()=>{if(e.current)try{const i=e.current,{width:a,height:r}=i.getBoundingClientRect(),h=((e,t)=>{const{minTileSize:s,maxTileSize:i}=n,{gridSize:a}=c,r=Math.min(Math.floor(e/a),Math.floor(t/a)),o=Math.max(s,Math.min(r,i));return{width:o*a,height:o*a,cellSize:o}})(a,r);h.width===f.width&&h.height===f.height||(w(h),y(a<=o),t.current&&(t.current.width=h.width,t.current.height=h.height),s.current&&(s.current.canvasSize=h,s.current.updateGridSize()))}catch(i){console.error("Error during resize:",i)}}),250)}),[f]);(0,i.useEffect)((()=>{let t;k();try{t=new ResizeObserver((e=>{const t=e[0];t&&t.contentRect&&k()})),e.current&&t.observe(e.current)}catch(s){console.warn("ResizeObserver error:",s)}return window.addEventListener("resize",k),window.addEventListener("orientationchange",k),()=>{a.current&&clearTimeout(a.current),t&&t.disconnect(),window.removeEventListener("resize",k),window.removeEventListener("orientationchange",k)}}),[k]),(0,i.useEffect)((()=>{if(t.current&&e.current&&f.width&&f.height){const e=t.current,i=e.getContext("2d");e.width=f.width,e.height=f.height;const a=new m(v);let n;a.game={context:i,canvas:e},a.create(f),s.current=a,e.setAttribute("tabindex","0"),e.focus();const r=e=>{a.state.gameOver||(a.update(e),u(a.state.score),a.state.gameOver&&(h(!0),a.state.score>g&&(x(a.state.score),localStorage.setItem("snakeHighScore",a.state.score))),n=window.requestAnimationFrame(r))};return r(0),()=>{window.cancelAnimationFrame(n),a.cleanup&&a.cleanup(),s.current=null}}}),[f,v,g]);const b=(0,i.useCallback)((()=>{s.current&&(s.current.initializeGame(),h(!1),u(0),t.current&&t.current.focus())}),[]);return(0,p.jsx)(S.A,{children:(0,p.jsx)("div",{ref:e,className:"snake-tool",children:(0,p.jsxs)("div",{className:"game-container",children:[(0,p.jsxs)("div",{className:"score-display",children:[(0,p.jsxs)("div",{className:"score",children:[(0,p.jsx)("span",{children:"Score"}),(0,p.jsx)("span",{children:String(l).padStart(2,"0")})]}),(0,p.jsxs)("div",{className:"high-score",children:[(0,p.jsx)("span",{children:"Best"}),(0,p.jsx)("span",{children:String(g).padStart(2,"0")})]}),l>0&&l>=g&&(0,p.jsxs)("div",{className:"profile-badge",children:[(0,p.jsx)("img",{src:d,alt:"Profile"}),(0,p.jsx)("div",{className:"badge-label",children:"New Best!"})]})]}),(0,p.jsx)("canvas",{ref:t,className:"game-canvas",onTouchStart:e=>{const t=e.touches[0];z.current={x:t.clientX,y:t.clientY,time:Date.now()}},onTouchEnd:e=>{const t=e.changedTouches[0],i=t.clientX-z.current.x,a=t.clientY-z.current.y;if(Date.now()-z.current.time<c.touchThreshold.time){if(Math.sqrt(i*i+a*a)>c.touchThreshold.distance){const e=Math.atan2(a,i),t=Math.round(e/(Math.PI/2));if(s.current)switch((t+4)%4){case 0:s.current.setDirection("right");break;case 1:s.current.setDirection("down");break;case 2:s.current.setDirection("left");break;case 3:s.current.setDirection("up")}}}}}),r&&(0,p.jsx)("div",{className:"game-over",children:(0,p.jsxs)("div",{className:"game-over-content",children:[(0,p.jsxs)("div",{className:"profile-container",children:[(0,p.jsx)("img",{src:d,alt:"Profile",className:"profile-image"}),(0,p.jsx)("div",{className:"pixel-overlay"})]}),(0,p.jsx)("h2",{"data-text":"GAME OVER",children:"GAME OVER"}),(0,p.jsx)("div",{className:"score-message",children:l===g&&l>0?(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",{className:"score-banner",children:[(0,p.jsx)("span",{className:"star",children:"\u2605"}),(0,p.jsx)("span",{className:"new-record",children:"NEW RECORD!"}),(0,p.jsx)("span",{className:"star",children:"\u2605"})]}),(0,p.jsxs)("p",{className:"score-value",children:["Score: ",String(l).padStart(2,"0")]}),(0,p.jsx)("p",{className:"encouraging-text",children:"You're unstoppable!"})]}):(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("p",{className:"score-value",children:["Score: ",String(l).padStart(2,"0")]}),(0,p.jsxs)("p",{className:"high-score-value",children:["Best: ",String(g).padStart(2,"0")]}),(0,p.jsx)("p",{className:"encouraging-text",children:0===l?"Don't give up!":l<5?"You can do better!":l<10?"Getting better!":l<g?"Almost there!":"Great job!"})]})}),(0,p.jsx)("div",{className:"game-over-buttons",children:(0,p.jsxs)("button",{onClick:b,className:"play-again-btn",children:[(0,p.jsx)("span",{className:"btn-text",children:"PLAY AGAIN"}),(0,p.jsx)("span",{className:"btn-icon",children:"\u21ba"})]})})]})})]})})})}}}]);
//# sourceMappingURL=658.fad28403.chunk.js.map