@use "sass:color";
@use "sass:map";
// Import Fonts
@import "https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap";

// Theme Map Declaration
$theme-map: null;

// Root Variables
:root {
  --tool-background: var(--color-grey-dark-2);
  --tool-surface: var(--color-grey-dark-3);
  --tool-border: var(--color-grey-dark-4);
  --tool-text: var(--color-text);
  --tool-text-secondary: var(--color-text-secondary);
  --tool-accent: var(--color-sage);
  --tool-accent-rgb: var(--color-sage-rgb);
  --tool-padding: clamp(10px, 3vw, 20px);
  --tool-border-radius: 16px;
  --tool-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  --easeInOutCirc: cubic-bezier(0.85, 0, 0.15, 1);
}

// SASS Functions and Variables
@function get-map-value($map, $key) {
  @if map.has-key($map, $key) {
    @return map.get($map, $key);
  }
  @error "Key `#{$key}` not found in map.";
}

$transition-smooth: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
$glass-bg: rgb(17 17 23 / 85%);
$glass-border: rgb(255 255 255 / 10%);
$glass-hover: rgb(255 255 255 / 15%);

// Snake Game Theme Variables
$snake-theme: (
    mobile-breakpoint: 768px,
    game-padding: var(--tool-padding),
    border-radius: 8px,
    transition-speed: 0.3s,
    colors: (
        text: var(--tool-text),
        accent: var(--tool-accent),
        surface: var(--tool-surface),
        border: var(--tool-border),
        background: var(--tool-background),
        success: #4ecca3,
        gold: #ffd700,
        neon-yellow: #ff0
    ),
    fonts: (
        pixel: '"Press Start 2P", monospace'
    ),
    shadows: (
        glow: 0 0 20px rgba(var(--tool-accent-rgb), 0.2),
        text: 0 0 10px rgba(169, 177, 214, 0.5)
    ),
    glass: (
        background: rgba(var(--tool-surface-rgb), 0.9),
        border: rgba(var(--tool-accent-rgb), 0.2)
    )
);

// Common Mixins
@mixin base-container {
  background: var(--tool-background);
  border-radius: var(--tool-border-radius);
  padding: var(--tool-padding);
  color: var(--tool-text);
  box-shadow:
    0 10px 30px -10px rgb(0 0 0 / 20%),
    0 0 0 1px rgb(255 255 255 / 5%);
  transition: var(--tool-transition);
  transform: translateZ(0);
  backface-visibility: hidden;
  padding-top: max(var(--tool-padding), env(safe-area-inset-top));
  padding-left: max(var(--tool-padding), env(safe-area-inset-left));
  padding-right: max(var(--tool-padding), env(safe-area-inset-right));
}

@mixin base-game-container {
  @include base-container;
  padding: calc(var(--tool-padding) / 2);
  touch-action: none;
  user-select: none;

  canvas {
    border-radius: calc(var(--tool-border-radius) / 2);
    box-shadow: 0 4px 12px rgb(0 0 0 / 20%);
  }
}

@mixin glass-panel {
  background: $glass-bg;
  backdrop-filter: blur(12px);
  border: 1px solid $glass-border;
  border-radius: 16px;
  box-shadow: 0 8px 32px rgb(0 0 0 / 10%);
}

@mixin hover-lift {
  transition: all $transition-smooth;

  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgb(0 0 0 / 15%);
  }
}

@mixin button-styles {
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
  transition: all 0.3s ease;
  margin: 5px;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 2px 5px rgb(0 0 0 / 20%);
  }

  &:active {
    transform: translateY(0);
  }
}

@mixin pixel-text {
  font-family: map.get($snake-theme, fonts, pixel);
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: none;
}

// Common Animations
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes float {
  0% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0); }
}

@keyframes glowPulse {
  0% { box-shadow: 0 0 10px rgba(var(--tool-accent-rgb), 0.2); }
  50% { box-shadow: 0 0 30px rgba(var(--tool-accent-rgb), 0.4); }
  100% { box-shadow: 0 0 10px rgba(var(--tool-accent-rgb), 0.2); }
}

// Theme System
$themes: (
  default: (
    background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%),
    surface: rgb(17 17 23 / 85%),
    text: #fff,
    accent: var(--color-sage),
  ),
  dark: (
    background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%),
    surface: rgb(10 10 15 / 90%),
    text: #fff,
    accent: #6bcb77,
  ),
  light: (
    background: linear-gradient(135deg, #f5f5f5 0%, #e0e0e0 100%),
    surface: rgb(255 255 255 / 90%),
    text: #333,
    accent: #45b7d1,
  ),
  nature: (
    background: linear-gradient(135deg, #2d5a27 0%, #1e3d1a 100%),
    surface: rgb(45 90 39 / 85%),
    text: #fff,
    accent: #96ceb4,
  ),
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $value in $map {
        $theme-map: map.merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map.get($theme-map, $key);
}

// Responsive Design
@mixin responsive($breakpoint) {
  @media (width <= $breakpoint) {
    @content;
  }
}

// Add mobile-first media queries
@mixin mobile {
  @media (max-width: 768px) {
    @content;
  }
}

// Snake Game Styles
.snake-tool {
  @include base-container;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: map.get($snake-theme, game-padding);
  background: map.get($snake-theme, colors, background);
  min-height: 100vh;
  min-height: 100dvh;
  overflow: hidden;

  // Game Container
  .game-container {
    @include base-game-container;
    position: relative;
    max-width: 100%;
    max-height: 100vh;
    width: 100%;
    margin: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-bottom: 100%;
    touch-action: none;
    -webkit-touch-callout: none;
    user-select: none;
    animation: fadeIn 0.5s ease-out;

    @supports (aspect-ratio: 1) {
      padding-bottom: initial;
      aspect-ratio: 1;
    }

    @include mobile {
      padding: 0.5rem;
      aspect-ratio: 1/1;
    }

    > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }

  // Game Canvas
  .game-canvas {
    width: 100%;
    height: 100%;
    background: map.get($snake-theme, colors, surface);
    border: 1px solid map.get($snake-theme, colors, border);
    box-shadow: map.get($snake-theme, shadows, glow);
    border-radius: map.get($snake-theme, border-radius);
    position: relative;
    image-rendering: pixelated;
    touch-action: none;
    user-select: none;
    animation: glowPulse 3s infinite;
    z-index: 1;

    @include mobile {
      border-width: 1px;
    }
  }

  // Score Display
  .score-display {
    @include glass-panel;
    @include pixel-text;
    position: absolute;
    top: map.get($snake-theme, game-padding);
    left: map.get($snake-theme, game-padding);
    z-index: 2;
    font-size: 16px;
    display: flex;
    flex-direction: column;
    gap: 4px;
    padding: 12px 16px;
    min-width: 120px;
    color: map.get($snake-theme, colors, text);
    text-shadow: map.get($snake-theme, shadows, text);
    transition: transform map.get($snake-theme, transition-speed) ease;
    pointer-events: none;

    &:hover {
      transform: scale(1.02);
    }

    @include mobile {
      font-size: 14px;
      padding: 8px 12px;
      min-width: 100px;
    }

    .score, .high-score {
      display: flex;
      justify-content: space-between;
      align-items: center;
      color: map.get($snake-theme, colors, text);

      span:last-child {
        color: map.get($snake-theme, colors, accent);
        font-weight: bold;
        text-shadow: 0 0 5px var(--tool-accent);
      }
    }

    .profile-badge {
      position: relative;
      margin-top: 8px;
      padding-top: 8px;
      border-top: 1px solid map.get($snake-theme, glass, border);

      img {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: 2px solid rgba(var(--tool-accent-rgb), 0.5);
        object-fit: cover;
        image-rendering: pixelated;
        transition: transform map.get($snake-theme, transition-speed) ease;

        &:hover {
          transform: scale(1.1);
        }
      }

      .badge-label {
        position: absolute;
        bottom: -5px;
        left: 50%;
        transform: translateX(-50%);
        background: map.get($snake-theme, colors, accent);
        color: map.get($snake-theme, colors, surface);
        font-size: 0.7em;
        padding: 2px 8px;
        border-radius: 10px;
        white-space: nowrap;
        animation: pulse 1s ease-in-out infinite;
      }
    }
  }

  // Power-up Display
  .power-up-display {
    @include glass-panel;
    @include pixel-text;
    position: absolute;
    top: map.get($snake-theme, game-padding);
    right: map.get($snake-theme, game-padding);
    z-index: 2;
    font-size: 12px;
    padding: 8px 12px;
    color: map.get($snake-theme, colors, text);
    display: flex;
    flex-direction: column;
    gap: 8px;
    min-width: 100px;
    pointer-events: none;

    .power-up-item {
      display: flex;
      align-items: center;
      gap: 8px;

      .icon {
        width: 12px;
        height: 12px;
        border-radius: 2px;
        animation: pulse 1s infinite;
      }

      .timer {
        margin-left: auto;
      }
    }
  }

  // Game Over Screen
  .game-over {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.85);
    backdrop-filter: blur(5px);
    display: flex;
    justify-content: center;
    align-items: center;
    animation: fadeIn 0.5s ease-out;
    z-index: 3;

    .game-over-content {
      @include glass-panel;
      text-align: center;
      color: #fff;
      padding: 2rem;
      max-width: 90%;
      width: 400px;
      animation: slideIn 0.5s ease-out;

      @include mobile {
        padding: 1rem;
        
        h2 {
          font-size: 2rem;
        }
        
        .score-value, .high-score-value {
          font-size: 1.2rem;
        }
      }

      h2 {
        @include pixel-text;
        color: map.get($snake-theme, colors, success);
        text-shadow: 0 0 10px rgba(78, 204, 163, 0.5);
        margin-bottom: 1.5rem;
      }

      .score-message {
        margin: 1.5rem 0;

        .score-banner {
          display: flex;
          justify-content: center;
          align-items: center;
          gap: 1rem;
          margin-bottom: 1rem;

          .star {
            color: map.get($snake-theme, colors, gold);
            animation: rotate 2s linear infinite;
          }

          .new-record {
            color: map.get($snake-theme, colors, neon-yellow);
            text-shadow: 0 0 5px map.get($snake-theme, colors, neon-yellow);
            animation: pulse 1s ease-in-out infinite;
          }
        }

        .score-value, .high-score-value {
          @include pixel-text;
          margin: 0.5rem 0;
        }

        .encouraging-text {
          color: map.get($snake-theme, colors, success);
          margin-top: 1rem;
          font-size: 0.9rem;
        }
      }

      .play-again-btn {
        @include pixel-text;
        background: map.get($snake-theme, colors, success);
        border: none;
        padding: 1rem 2rem;
        font-size: 1rem;
        color: #fff;
        cursor: pointer;
        border-radius: 5px;
        transition: all map.get($snake-theme, transition-speed) ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin: 2rem auto 0;

        &:hover {
          transform: scale(1.05);
          background: color.adjust(map.get($snake-theme, colors, success), $lightness: -5%);
        }

        .btn-icon {
          animation: rotate 2s linear infinite;
        }

        @include mobile {
          padding: 0.8rem 1.6rem;
          font-size: 0.9rem;
        }
      }
    }
  }

  // Messages
  .messages {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 3;
    pointer-events: none;
    width: 100%;
    text-align: center;

    .message {
      @include pixel-text;
      animation: slideIn 0.3s ease-out;
      text-shadow: 0 0 10px currentColor;
    }
  }
}

// Needs Assessment Styles
.needs-assessment {
  @include base-container;
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;

  header {
    margin-bottom: 2rem;

    .header-content {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .header-info {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: 1rem;
    }

    h2 {
      font-size: 1.75rem;
      background: linear-gradient(
        135deg,
        var(--color-text) 0%,
        var(--color-text-secondary) 100%
      );
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
      margin: 0;
    }
  }

  .last-update {
    font-size: 0.9rem;
    opacity: 0.8;
  }

  .overall-progress {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
  }

  .needs-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;

    @include mobile {
      grid-template-columns: 1fr;
    }
  }

  .need-card {
    @include glass-panel;
    padding: 1.5rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    position: relative;
    overflow: hidden;

    &.unlocked {
      background: rgba(var(--color-background-light-rgb), 0.1);
      backdrop-filter: blur(10px);
      
      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
      }
    }

    &.locked {
      opacity: 0.7;
      filter: grayscale(0.5);
      cursor: not-allowed;
    }

    h3 {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      margin-bottom: 1rem;
      font-size: 1.2rem;
    }

    .emoji {
      font-size: 1.4em;
    }

    .value {
      font-size: 0.9em;
      opacity: 0.8;
      margin-left: auto;
    }

    p {
      margin-bottom: 1rem;
      opacity: 0.8;
      line-height: 1.5;
    }
  }

  .lock-message {
    text-align: center;
    font-size: 0.9em;
    color: var(--color-text-secondary);
    margin-top: 1rem;
    padding: 0.5rem;
    background: rgba(0, 0, 0, 0.2);
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }

  .progress-bar {
    height: 8px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    overflow: hidden;
    margin: 1rem 0;
    position: relative;

    .progress-fill {
      height: 100%;
      border-radius: 4px;
      position: relative;

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        background: linear-gradient(
          90deg,
          rgba(255, 255, 255, 0) 0%,
          rgba(255, 255, 255, 0.1) 50%,
          rgba(255, 255, 255, 0) 100%
        );
        animation: shimmer 2s infinite;
      }
    }
  }
}

// Bingo Styles
$categories: (
  health: (
    base: #ff6b6b,
    gradient: linear-gradient(135deg, #ff6b6b 0%, #ff8e8e 50%, #ffb4b4 100%),
    shadow: rgb(255 107 107 / 20%),
  ),
  career: (
    base: #4ecdc4,
    gradient: linear-gradient(135deg, #4ecdc4 0%, #65d8d0 50%, #7ee6e0 100%),
    shadow: rgb(78 205 196 / 20%),
  ),
  personal: (
    base: #45b7d1,
    gradient: linear-gradient(135deg, #45b7d1 0%, #62c7de 50%, #7ed4e7 100%),
    shadow: rgb(69 183 209 / 20%),
  ),
  social: (
    base: #96ceb4,
    gradient: linear-gradient(135deg, #96ceb4 0%, #a9dac4 50%, #baded0 100%),
    shadow: rgb(150 206 180 / 20%),
  ),
  finance: (
    base: #6bcb77,
    gradient: linear-gradient(135deg, #6bcb77 0%, #82d78c 50%, #95e1a0 100%),
    shadow: rgb(107 203 119 / 20%),
  ),
);

.bingo-container {
  @include base-container;
  width: 100%;
  min-height: 100vh;
  min-height: 100dvh;
  padding: 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 2rem;
  overflow: auto;
  position: relative;
  perspective: 5000px;

  @include themed() {
    background: t(background);
  }

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      rgb(78 205 196 / 10%),
      rgb(255 107 107 / 10%)
    );
    z-index: -1;
    pointer-events: none;
    transition: background 2s ease;
  }
}

.bingo-header {
  @include glass-panel;
  text-align: center;
  padding: 2.5rem;
  animation: float 6s ease-in-out infinite;

  h1 {
    color: #fff;
    margin-bottom: 1.5rem;
    font-size: 3rem;
    font-weight: 800;
    background: linear-gradient(135deg, #4ecdc4, #ff6b6b);
    background-size: 200% 200%;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradientShift 8s ease infinite;
    letter-spacing: -1px;
  }
}

.bingo-grid {
  display: grid;
  grid-template-columns: repeat(5, minmax(60px, 1fr));
  gap: clamp(0.5rem, 2vw, 1.25rem);
  padding: clamp(1rem, 3vw, 2rem);
  transform-style: preserve-3d;
  transition: transform 0.6s var(--easeInOutCirc);
  width: 100%;
  max-width: 800px;
  margin: 0 auto;

  &:hover {
    transform: rotateX(5deg) rotateY(5deg);
  }

  @include mobile {
    grid-template-columns: repeat(3, 1fr);
    gap: 0.5rem;
    padding: 1rem;
  }
}

.bingo-item {
  --category-color: transparent;
  --category-gradient: none;
  --category-shadow: none;

  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 100%;
  perspective: 1000px;
  transform-style: preserve-3d;
  transition: all 0.6s var(--easeInOutCirc);

  .item-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 1rem;
    background: var(--category-gradient, rgb(255 255 255 / 5%));
    backdrop-filter: blur(12px);
    border: 1px solid rgb(255 255 255 / 10%);
    border-radius: 16px;
    transform-style: preserve-3d;
    transition: all 0.6s var(--easeInOutCirc);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    overflow: hidden;

    &:hover {
      transform: translateZ(20px);
      background: var(--category-gradient, rgb(255 255 255 / 10%));
      box-shadow:
        0 10px 30px rgb(0 0 0 / 10%),
        0 5px 15px rgb(0 0 0 / 5%);
    }
  }
}

// Category Styles
@each $category, $colors in $categories {
  .bingo-item.category-#{$category} {
    --category-color: #{get-map-value($colors, "base")};
    --category-gradient: #{get-map-value($colors, "gradient")};
    --category-shadow: #{get-map-value($colors, "shadow")};

    .item-content {
      background: get-map-value($colors, "gradient");
      box-shadow: 0 4px 12px get-map-value($colors, "shadow");

      &::before {
        content: "";
        position: absolute;
        inset: 0;
        background: linear-gradient(
          rgb(255 255 255 / 10%),
          rgb(255 255 255 / 0%)
        );
        opacity: 0;
        transition: opacity $transition-smooth;
      }

      &:hover::before {
        opacity: 1;
      }
    }
  }
}

// Responsive Styles
@include responsive(768px) {
  .needs-assessment {
    padding: 1rem;

    .header-content {
      text-align: center;
    }

    .header-info {
      justify-content: center;
    }

    .needs-grid {
      grid-template-columns: 1fr;
    }
  }

  .bingo-container {
    padding: 1rem;
  }

  .bingo-grid {
    gap: 0.5rem;
    padding: 0.5rem;
  }
}

// Accessibility
@media (prefers-reduced-motion: reduce) {
  .need-card,
  .progress-fill,
  .bingo-item,
  .item-content {
    transition: none !important;
    animation: none !important;
  }
}

// High Contrast Mode
@media (forced-colors: active) {
  .need-card,
  .bingo-item .item-content {
    border: 2px solid ButtonText;
  }

  .progress-bar {
    border: 1px solid ButtonText;
  }

  .progress-fill {
    background: Highlight;
  }
}

// Add unified card styling
@mixin tool-card {
  background: var(--tool-surface);
  border-radius: var(--tool-border-radius);
  padding: var(--tool-padding);
  box-shadow: 
    0 4px 6px -1px rgb(0 0 0 / 10%),
    0 2px 4px -1px rgb(0 0 0 / 6%);
  transition: var(--tool-transition);
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 10px 15px -3px rgb(0 0 0 / 10%),
      0 4px 6px -2px rgb(0 0 0 / 5%);
  }
}

.bingo-container, .needs-assessment, .game-container {
  @include tool-card;
}

// Add theme adaptation mixins
@mixin theme-aware($property, $light-value, $dark-value) {
  @media (prefers-color-scheme: light) {
    #{$property}: $light-value;
  }
  @media (prefers-color-scheme: dark) {
    #{$property}: $dark-value;
  }

  [data-theme="light"] & {
    #{$property}: $light-value;
  }
  [data-theme="dark"] & {
    #{$property}: $dark-value;
  }
}

.tool-card {
  @include theme-aware(background, #f8f9fa, #1a1a1a);
  @include theme-aware(color, #212529, #e9ecef);
  border: 1px solid;
  @include theme-aware(border-color, #dee2e6, #2b2b2b);
} 